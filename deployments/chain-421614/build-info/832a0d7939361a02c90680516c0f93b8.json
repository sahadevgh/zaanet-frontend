{
  "id": "832a0d7939361a02c90680516c0f93b8",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/interface/IZaaNetAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/// @title IZaaNetAdmin - Interface for ZaaNet Admin Contract\ninterface IZaaNetAdmin {\n\n    // ========== Admin Functions ==========\n\n    function setPlatformFee(uint256 _newFeePercent) external;\n\n    function setTreasuryAddress(address _newTreasury) external;\n\n    function pause() external;\n\n    function unpause() external;\n\n    function toggleEmergencyMode() external;\n\n    // ========== View Functions ==========\n\n    function platformFeePercent() external view returns (uint256);\n\n    function treasuryAddress() external view returns (address);\n\n    /// @notice Alternative name for treasuryAddress (compatibility)\n    function treasury() external view returns (address);\n\n    function owner() external view returns (address);\n\n    function paused() external view returns (bool);\n\n    /// @notice Alternative name for owner (compatibility)\n    function admin() external view returns (address);\n\n    function emergencyMode() external view returns (bool);\n\n    function calculatePlatformFee(uint256 amount) external view returns (uint256);\n}"
      },
      "contracts/interface/IZaaNetNetwork.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../ZaaNetStorage.sol\";\n\ninterface IZaaNetNetwork {\n    // ========== Events ==========\n\n    event NetworkRegistered(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        string mongoDataId\n    );\n\n    event NetworkUpdated(\n        uint256 indexed networkId,\n        address indexed hostAddress,\n        uint256 pricePerHour,\n        string mongoDataId,\n        bool isActive\n    );\n\n    event HostAdded(address indexed newHostAddress);\n\n    // Additional events for better tracking\n    event NetworkPriceUpdated(uint256 indexed networkId, uint256 oldPrice, uint256 newPrice);\n    event NetworkStatusChanged(uint256 indexed networkId, bool oldStatus, bool newStatus);\n\n    // ========== Network Management ==========\n\n    /// @notice Register a new WiFi network\n    /// @param pricePerHour Cost in USDT per hour\n    /// @param mongoDataId MongoDB document ID for metadata (e.g. JSON with SSID, location, etc.)\n    /// @param isActive Whether network is available for guest discovery\n    function registerNetwork(\n        uint256 pricePerHour,\n        string memory mongoDataId,\n        bool isActive\n    ) external;\n\n    /// @notice Update an existing network\n    /// @param networkId ID of the network\n    /// @param pricePerHour Updated price\n    /// @param isActive New active status\n    function updateNetwork(\n        uint256 networkId,\n        uint256 pricePerHour,\n        bool isActive\n    ) external;\n\n    /// @notice Fetch a network by ID\n    /// @param networkId ID of the network\n    /// @return Network struct with all metadata\n    function getHostedNetworkById(\n        uint256 networkId\n    ) external view returns (ZaaNetStorage.Network memory);\n\n    /// @notice Get all network IDs registered by a host\n    /// @param hostAddress Address of the host\n    /// @return networkIds List of network IDs\n    function getHostNetworks(\n        address hostAddress\n    ) external view returns (uint256[] memory);\n\n    /// @notice Public method to check if an address is a registered host\n    /// @param hostAddress The address to verify\n    /// @return isHost True if host is registered\n    function isRegisteredHost(address hostAddress) external view returns (bool);\n}"
      },
      "contracts/interface/IZaaNetPayment.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../ZaaNetStorage.sol\";\n\n/// @title IZaaNetPayment - Interface for ZaaNet Payment Contract\ninterface IZaaNetPayment {\n    // ========== Payment Management ==========\n\n    /// @notice Accept a payment to access a hosted network\n    /// @param _networkId The ID of the network being accessed\n    /// @param _amount Total amount paid (pricePerSession)\n    /// @param _voucherId Optional voucher/discount code ID\n    /// @param _userId User identifier for tracking\n    function acceptPayment(\n        uint256 _networkId,\n        uint256 _amount,\n        uint256 _voucherId,\n        uint256 _userId\n    ) external;\n\n    /// @notice Fetch session details by ID\n    /// @param _sessionId The session ID to retrieve\n    /// @return The full session object from storage\n    function getSession(\n        uint256 _sessionId\n    ) external view returns (ZaaNetStorage.Session memory);\n\n    /// @notice Calculate fees for a payment amount\n    /// @param amount The payment amount to calculate fees for\n    /// @return hostAmount Amount that goes to the host\n    /// @return platformFee Amount that goes to the platform\n    function calculateFees(\n        uint256 amount\n    ) external view returns (uint256 hostAmount, uint256 platformFee);\n}"
      },
      "contracts/interface/IZaaNetStorage.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"../ZaaNetStorage.sol\";\n\n/// @title IZaaNetStorage - Interface for ZaaNet Storage Contract\ninterface IZaaNetStorage {\n\n    // ========== Access Control ==========\n    \n    function setAllowedCaller(address _caller, bool status) external;\n    function setAllowedCallers(address[] calldata _callers, bool status) external;\n\n    // ========== Network Functions ==========\n    \n    function incrementNetworkId() external returns (uint256);\n    function setNetwork(uint256 id, ZaaNetStorage.Network calldata network) external;\n    function getNetwork(uint256 id) external view returns (ZaaNetStorage.Network memory);\n    function getNetworksPaginated(uint256 offset, uint256 limit) external view returns (ZaaNetStorage.Network[] memory, uint256 total);\n    function networkIdCounter() external view returns (uint256);\n\n    // ========== Session Functions ==========\n    \n    function incrementSessionId() external returns (uint256);\n    function setSession(uint256 id, ZaaNetStorage.Session calldata session) external;\n    function getSession(uint256 id) external view returns (ZaaNetStorage.Session memory);\n    function endSession(uint256 sessionId) external;\n    function sessionIdCounter() external view returns (uint256);\n\n    // ========== Earnings Functions ==========\n    \n    function increaseHostEarnings(address hostAddress, uint256 amount) external;\n    function getHostEarnings(address hostAddress) external view returns (uint256);\n\n    // ========== Admin Functions ==========\n    \n    function emergencyDeactivateNetwork(uint256 networkId) external;\n    function getStats() external view returns (uint256 totalNetworks, uint256 totalSessions, uint256 activeNetworks, uint256 activeSessions);\n}"
      },
      "contracts/TestUSDT.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestUSDT is ERC20 {\n    constructor(uint256 initialSupply) ERC20(\"Test Tether USD\", \"USDT\") {\n        _mint(msg.sender, initialSupply);\n    }\n\n    function mint(address to, uint256 amount) external {\n        _mint(to, amount);\n    }\n}\n"
      },
      "contracts/ZaaNetAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\n\ncontract ZaaNetAdmin is Ownable, Pausable, ReentrancyGuard {\n    ZaaNetStorage public storageContract;\n    address public treasuryAddress;\n    uint256 public platformFeePercent;\n\n    // Constants for validation\n    uint256 public constant MAX_PLATFORM_FEE = 20; // 20% maximum fee\n    uint256 public constant MIN_PLATFORM_FEE = 1;  // 1% minimum fee\n\n    // Emergency controls\n    bool public emergencyMode = false;\n    mapping(address => bool) public emergencyOperators;\n\n    // Fee history for transparency\n    struct FeeChange {\n        uint256 oldFee;\n        uint256 newFee;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    FeeChange[] public feeHistory;\n    \n    // Treasury change history\n    struct TreasuryChange {\n        address oldTreasury;\n        address newTreasury;\n        uint256 timestamp;\n        address changedBy;\n    }\n    \n    TreasuryChange[] public treasuryHistory;\n\n    event PlatformFeeUpdated(uint256 indexed oldFee, uint256 indexed newFee, address indexed changedBy);\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury, address indexed changedBy);\n    event AdminPaused(address indexed triggeredBy);\n    event AdminUnpaused(address indexed triggeredBy);\n    event EmergencyModeToggled(bool enabled, address indexed triggeredBy);\n    event EmergencyOperatorUpdated(address indexed operator, bool status, address indexed updatedBy);\n    event ContractsInitialized(address indexed storageContract, uint256 timestamp);\n\n    modifier onlyEmergencyOperator() {\n        require(emergencyOperators[msg.sender] || msg.sender == owner(), \"Not emergency operator\");\n        _;\n    }\n\n    modifier notInEmergencyMode() {\n        require(!emergencyMode, \"System in emergency mode\");\n        _;\n    }\n\n    constructor(\n        address _storageContract,\n        address _treasuryAddress,\n        uint256 _platformFeePercent\n    ) Ownable(msg.sender) {\n        require(_treasuryAddress != address(0), \"Treasury cannot be zero address\");\n        require(\n            _platformFeePercent >= MIN_PLATFORM_FEE && _platformFeePercent <= MAX_PLATFORM_FEE, \n            \"Fee must be between 1% and 20%\"\n        );\n\n        if (_storageContract != address(0)) {\n            storageContract = ZaaNetStorage(_storageContract);\n            emit ContractsInitialized(_storageContract, block.timestamp);\n        }\n        \n        treasuryAddress = _treasuryAddress;\n        platformFeePercent = _platformFeePercent;\n\n        // Record initial settings\n        feeHistory.push(FeeChange({\n            oldFee: 0,\n            newFee: _platformFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: address(0),\n            newTreasury: _treasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        // Set owner as emergency operator\n        emergencyOperators[msg.sender] = true;\n        emit EmergencyOperatorUpdated(msg.sender, true, msg.sender);\n    }\n\n    /// @notice Initialize storage contract if not set in constructor\n    function initializeStorageContract(address _storageContract) external onlyOwner {\n        require(_storageContract != address(0), \"Invalid storage contract\");\n        require(address(storageContract) == address(0), \"Storage already initialized\");\n        \n        storageContract = ZaaNetStorage(_storageContract);\n        emit ContractsInitialized(_storageContract, block.timestamp);\n    }\n\n    function setPlatformFee(uint256 _newFeePercent) external onlyOwner notInEmergencyMode {\n        require(\n            _newFeePercent >= MIN_PLATFORM_FEE && _newFeePercent <= MAX_PLATFORM_FEE, \n            \"Fee must be between 1% and 20%\"\n        );\n        require(_newFeePercent != platformFeePercent, \"Fee unchanged\");\n\n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        // Record fee change\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    function setTreasuryAddress(address _newTreasuryAddress) external onlyOwner notInEmergencyMode {\n        require(_newTreasuryAddress != address(0), \"Invalid treasury address\");\n        require(_newTreasuryAddress != treasuryAddress, \"Treasury unchanged\");\n\n        address oldTreasury = treasuryAddress;\n        treasuryAddress = _newTreasuryAddress;\n\n        // Record treasury change\n        treasuryHistory.push(TreasuryChange({\n            oldTreasury: oldTreasury,\n            newTreasury: _newTreasuryAddress,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit TreasuryUpdated(oldTreasury, _newTreasuryAddress, msg.sender);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n        emit AdminPaused(msg.sender);\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n        emit AdminUnpaused(msg.sender);\n    }\n\n    /// @notice Toggle emergency mode (stops most operations)\n    function toggleEmergencyMode() external onlyEmergencyOperator {\n        emergencyMode = !emergencyMode;\n        emit EmergencyModeToggled(emergencyMode, msg.sender);\n    }\n\n    /// @notice Add or remove emergency operators\n    function setEmergencyOperator(address operator, bool status) external onlyOwner {\n        require(operator != address(0), \"Invalid operator address\");\n        emergencyOperators[operator] = status;\n        emit EmergencyOperatorUpdated(operator, status, msg.sender);\n    }\n\n    /// @notice Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyEmergencyOperator {\n        require(address(storageContract) != address(0), \"Storage not initialized\");\n        storageContract.emergencyDeactivateNetwork(networkId);\n    }\n\n    /// @notice Emergency fee adjustment (bypasses normal restrictions)\n    function emergencySetPlatformFee(uint256 _newFeePercent) external onlyEmergencyOperator {\n        require(_newFeePercent <= MAX_PLATFORM_FEE, \"Fee cannot exceed maximum\");\n        \n        uint256 oldFee = platformFeePercent;\n        platformFeePercent = _newFeePercent;\n\n        feeHistory.push(FeeChange({\n            oldFee: oldFee,\n            newFee: _newFeePercent,\n            timestamp: block.timestamp,\n            changedBy: msg.sender\n        }));\n\n        emit PlatformFeeUpdated(oldFee, _newFeePercent, msg.sender);\n    }\n\n    // --- View Functions ---\n\n    /// @notice Expose admin address for other contracts (interface compatibility)\n    function admin() external view returns (address) {\n        return owner();\n    }\n\n    /// @notice Get fee change history\n    function getFeeHistory() external view returns (FeeChange[] memory) {\n        return feeHistory;\n    }\n\n    /// @notice Get treasury change history\n    function getTreasuryHistory() external view returns (TreasuryChange[] memory) {\n        return treasuryHistory;\n    }\n\n    /// @notice Get current fee in basis points (for more precise calculations)\n    function getPlatformFeeBasisPoints() external view returns (uint256) {\n        return platformFeePercent * 100; // Convert percentage to basis points\n    }\n\n    /// @notice Calculate platform fee for a given amount\n    function calculatePlatformFee(uint256 amount) external view returns (uint256) {\n        return (amount * platformFeePercent) / 100;\n    }\n\n    /// @notice Get admin statistics\n    function getAdminStats() external view returns (\n        uint256 totalFeeChanges,\n        uint256 totalTreasuryChanges,\n        bool isEmergencyMode,\n        uint256 currentFee,\n        address currentTreasury\n    ) {\n        totalFeeChanges = feeHistory.length;\n        totalTreasuryChanges = treasuryHistory.length;\n        isEmergencyMode = emergencyMode;\n        currentFee = platformFeePercent;\n        currentTreasury = treasuryAddress;\n    }\n\n    /// @notice Check if address is emergency operator\n    function isEmergencyOperator(address operator) external view returns (bool) {\n        return emergencyOperators[operator];\n    }\n\n    /// @notice Get latest fee change details\n    function getLatestFeeChange() external view returns (FeeChange memory) {\n        require(feeHistory.length > 0, \"No fee changes recorded\");\n        return feeHistory[feeHistory.length - 1];\n    }\n\n    /// @notice Get latest treasury change details\n    function getLatestTreasuryChange() external view returns (TreasuryChange memory) {\n        require(treasuryHistory.length > 0, \"No treasury changes recorded\");\n        return treasuryHistory[treasuryHistory.length - 1];\n    }\n\n    // --- Compatibility Functions (for interface alignment) ---\n\n    /// @notice Alternative name for treasury address (interface compatibility)\n    function treasury() external view returns (address) {\n        return treasuryAddress;\n    }\n\n    /// @notice Check if contract is paused (interface compatibility)\n    function paused() public view override returns (bool) {\n        return super.paused();\n    }\n}"
      },
      "contracts/ZaaNetNetwork.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\nimport \"./interface/IZaaNetNetwork.sol\";\n\ncontract ZaaNetNetwork is Ownable, Pausable, ReentrancyGuard, IZaaNetNetwork {\n    ZaaNetStorage public storageContract;\n\n    // Constants for validation\n    uint256 public constant MIN_PRICE_PER_SESSION = 2e17; // 0.2 USDT (18 decimals for test USDT) \n    uint256 public constant MAX_PRICE_PER_SESSION = 5e18; // 5 USDT (18  decimals for test USDT)\n    uint256 public constant MAX_MONGO_DATA_LENGTH = 200; // Reasonable limit for data ID\n\n    mapping(address => bool) public isHost;\n    mapping(address => uint256[]) private hostNetworks;\n    mapping(uint256 => address) public networkToHost; // For quick lookups\n\n    // Rate limiting\n    mapping(address => uint256) public lastRegistrationTime;\n    uint256 public constant REGISTRATION_COOLDOWN = 1 minutes;\n\n    constructor(address _storageContract) Ownable(msg.sender) {\n        require(\n            _storageContract != address(0),\n            \"Invalid storage contract address\"\n        );\n        storageContract = ZaaNetStorage(_storageContract);\n    }\n\n    /// @notice Register a new network with mongoDataID\n    function registerNetwork(\n        uint256 _pricePerHour,\n        string memory _mongoDataId,\n        bool _isActive\n    ) external override whenNotPaused nonReentrant {\n        require(\n            block.timestamp >=\n                lastRegistrationTime[msg.sender] + REGISTRATION_COOLDOWN,\n            \"Registration cooldown active\"\n        );\n        require(\n            _pricePerHour >= MIN_PRICE_PER_SESSION &&\n                _pricePerHour <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n        require(\n            bytes(_mongoDataId).length > 0 &&\n                bytes(_mongoDataId).length <= MAX_MONGO_DATA_LENGTH,\n            \"Invalid MongoDataID length\"\n        );\n\n        // Request a new ID from storage\n        uint256 networkId = storageContract.incrementNetworkId();\n\n        // Save the network details into storage\n        storageContract.setNetwork(\n            networkId,\n            ZaaNetStorage.Network({\n                id: networkId,\n                hostAddress: msg.sender,\n                pricePerSession: _pricePerHour,\n                mongoDataId: _mongoDataId,\n                isActive: _isActive,\n                createdAt: block.timestamp,\n                updatedAt: block.timestamp\n            })\n        );\n\n        hostNetworks[msg.sender].push(networkId);\n        networkToHost[networkId] = msg.sender;\n        lastRegistrationTime[msg.sender] = block.timestamp;\n\n        if (!isHost[msg.sender]) {\n            isHost[msg.sender] = true;\n            emit HostAdded(msg.sender);\n        }\n\n        emit NetworkRegistered(networkId, msg.sender, _mongoDataId);\n    }\n\n    /// @notice Internal function to update network details\n    function _updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerHour,\n        bool _isActive,\n        address sender\n    ) internal {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == sender, \"Only host can update\");\n        require(\n            _pricePerHour >= MIN_PRICE_PER_SESSION &&\n                _pricePerHour <= MAX_PRICE_PER_SESSION,\n            \"Price out of allowed range\"\n        );\n\n        // Store old values for events\n        uint256 oldPrice = network.pricePerSession;\n        bool oldStatus = network.isActive;\n\n        storageContract.setNetwork(\n            _networkId,\n            ZaaNetStorage.Network({\n                id: _networkId,\n                hostAddress: sender,\n                pricePerSession: _pricePerHour,\n                mongoDataId: network.mongoDataId, // Keep existing metadata\n                isActive: _isActive,\n                createdAt: network.createdAt, // Keep original creation time\n                updatedAt: block.timestamp\n            })\n        );\n\n        // Emit detailed events for better tracking\n        if (oldPrice != _pricePerHour) {\n            emit NetworkPriceUpdated(_networkId, oldPrice, _pricePerHour);\n        }\n        if (oldStatus != _isActive) {\n            emit NetworkStatusChanged(_networkId, oldStatus, _isActive);\n        }\n\n        emit NetworkUpdated(\n            _networkId,\n            sender,\n            _pricePerHour,\n            network.mongoDataId,\n            _isActive\n        );\n    }\n\n    /// @notice Update existing network with new details\n    function updateNetwork(\n        uint256 _networkId,\n        uint256 _pricePerHour,\n        bool _isActive\n    ) external override whenNotPaused nonReentrant {\n        _updateNetwork(_networkId, _pricePerHour, _isActive, msg.sender);\n    }\n\n    /// @notice Deactivate a network (soft delete)\n    function deactivateNetwork(uint256 _networkId) external whenNotPaused {\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.hostAddress == msg.sender, \"Only host can deactivate\");\n        require(network.isActive, \"Network already inactive\");\n\n        _updateNetwork(_networkId, network.pricePerSession, false, msg.sender);\n    }\n\n    /// @notice Get full network details from storage\n    function getHostedNetworkById(\n        uint256 _networkId\n    ) external view override returns (ZaaNetStorage.Network memory) {\n        return storageContract.getNetwork(_networkId);\n    }\n\n    /// @notice Get all network IDs registered by a host\n    function getHostNetworks(\n        address hostAddress\n    ) external view override returns (uint256[] memory) {\n        return hostNetworks[hostAddress];\n    }\n\n    /// @notice Get active networks for a host\n    function getActiveHostNetworks(\n        address hostAddress\n    ) external view returns (ZaaNetStorage.Network[] memory) {\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        uint256 activeCount = 0;\n\n        // First pass: count active networks\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeCount++;\n            }\n        }\n\n        // Second pass: populate active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks[index] = network;\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    /// @notice Public method to check if an address is a registered host\n    function isRegisteredHost(\n        address hostAddress\n    ) external view override returns (bool) {\n        return isHost[hostAddress];\n    }\n\n    /// @notice Get host statistics\n    function getHostStats(\n        address hostAddress\n    )\n        external\n        view\n        returns (\n            uint256 totalNetworks,\n            uint256 activeNetworks,\n            uint256 totalEarnings\n        )\n    {\n        totalNetworks = hostNetworks[hostAddress].length;\n        totalEarnings = storageContract.getHostEarnings(hostAddress);\n\n        // Count active networks\n        uint256[] memory networkIds = hostNetworks[hostAddress];\n        for (uint256 i = 0; i < networkIds.length; i++) {\n            ZaaNetStorage.Network memory network = storageContract.getNetwork(\n                networkIds[i]\n            );\n            if (network.isActive) {\n                activeNetworks++;\n            }\n        }\n    }\n\n    /// @notice Retrieve networks with pagination (gas-optimized)\n    function getNetworksPaginated(\n        uint256 offset, // starting index\n        uint256 limit // max number of networks to return (up to 100 for gas efficiency)\n    )\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory networks, uint256 totalCount)\n    {\n        return storageContract.getNetworksPaginated(offset, limit);\n    }\n\n    /// @notice Get all active networks (limited to prevent gas issues)\n    function getAllActiveNetworks()\n        external\n        view\n        returns (ZaaNetStorage.Network[] memory)\n    {\n        (ZaaNetStorage.Network[] memory allNetworks, ) = storageContract\n            .getNetworksPaginated(0, 100);\n\n        // Count active networks first\n        uint256 activeCount = 0;\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeCount++;\n            }\n        }\n\n        // Array of active networks\n        ZaaNetStorage.Network[]\n            memory activeNetworks = new ZaaNetStorage.Network[](activeCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < allNetworks.length; i++) {\n            if (allNetworks[i].isActive) {\n                activeNetworks[index] = allNetworks[i];\n                index++;\n            }\n        }\n\n        return activeNetworks;\n    }\n\n    // --- Admin Functions ---\n\n    /// @notice Emergency pause (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /// @notice Get contract statistics\n    function getContractStats() external view returns (uint256 totalNetworks) {\n        // This is an approximation - for exact counts, would need to iterate\n        totalNetworks = storageContract.networkIdCounter();\n    }\n}\n"
      },
      "contracts/ZaaNetPayment.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./ZaaNetStorage.sol\";\nimport \"./interface/IZaaNetPayment.sol\";\nimport \"./TestUSDT.sol\";\nimport \"./ZaaNetAdmin.sol\";\n\ncontract ZaaNetPayment is Ownable, Pausable, ReentrancyGuard {\n    TestUSDT public usdt;\n    ZaaNetStorage public storageContract;\n    ZaaNetAdmin public adminContract;\n\n    // Constants\n    uint256 public constant MAX_PAYMENT_AMOUNT = 10000e18; // 10,000 USDT (for dev testing usdt is 18 decimals)\n\n    /// @notice Emitted when a session starts\n    event SessionStarted(\n        uint256 indexed sessionId,\n        uint256 indexed networkId,\n        address indexed paymentAddress,\n        uint256 amount,\n        bool active,\n        string voucherId,\n        string userId,\n        uint256 startTime\n    );\n\n    /// @notice Emitted when payment is received\n    event PaymentReceived(\n        uint256 indexed sessionId,\n        uint256 indexed networkId,\n        address indexed paymentAddress,\n        uint256 amount,\n        uint256 platformFee\n    );\n\n    constructor(\n        address _usdt,\n        address _storageContract,\n        address _adminContract\n    ) Ownable(msg.sender) {\n        require(_usdt != address(0), \"Invalid USDT address\");\n        require(_storageContract != address(0), \"Invalid Storage address\");\n        require(_adminContract != address(0), \"Invalid Admin address\");\n\n        usdt = TestUSDT(_usdt);\n        storageContract = ZaaNetStorage(_storageContract);\n        adminContract = ZaaNetAdmin(_adminContract);\n    }\n\n    function acceptPayment(\n        uint256 _networkId,\n        uint256 _amount,\n        string memory _voucherId,\n        string memory _userId\n    ) external whenNotPaused nonReentrant {\n        // Validate inputs\n        require(\n            _amount > 0 && _amount <= MAX_PAYMENT_AMOUNT,\n            \"Invalid payment amount\"\n        );\n\n        // Get network and validate\n        ZaaNetStorage.Network memory network = storageContract.getNetwork(\n            _networkId\n        );\n        require(network.isActive, \"Network is not active\");\n        require(_amount >= network.pricePerSession, \"Payment amount too low\");\n\n        // Calculate fees FIRST (checks-effects-interactions pattern)\n        uint256 platformFeePercent = adminContract.platformFeePercent();\n        address treasuryAddress = adminContract.treasuryAddress();\n\n        require(treasuryAddress != address(0), \"Invalid treasury address\");\n        require(platformFeePercent <= 20, \"Platform fee too high\");\n\n        uint256 platformFee = (_amount * platformFeePercent) / 100;\n        uint256 hostAmount = _amount - platformFee;\n\n        // Create session BEFORE external calls\n        uint256 sessionId = storageContract.incrementSessionId();\n        storageContract.setSession(\n            sessionId,\n            ZaaNetStorage.Session({\n                sessionId: sessionId,\n                networkId: _networkId,\n                paymentAddress: msg.sender,\n                amount: _amount,\n                active: true,\n                voucherId: _voucherId,\n                userId: _userId,\n                startTime: block.timestamp\n            })\n        );\n\n        // External calls LAST (after all state changes)\n        bool feeTransferSuccess = usdt.transferFrom(\n            msg.sender,\n            treasuryAddress,\n            platformFee\n        );\n        require(feeTransferSuccess, \"Platform fee transfer failed\");\n\n        bool hostTransferSuccess = usdt.transferFrom(\n            msg.sender,\n            network.hostAddress,\n            hostAmount\n        );\n        require(hostTransferSuccess, \"Host payment transfer failed\");\n\n        // Update host earnings\n        storageContract.increaseHostEarnings(network.hostAddress, hostAmount);\n\n        emit SessionStarted(\n            sessionId,\n            _networkId,\n            msg.sender,\n            _amount,\n            true,\n            _voucherId,\n            _userId,\n            block.timestamp\n        );\n\n        emit PaymentReceived(\n            sessionId,\n            _networkId,\n            msg.sender,\n            _amount,\n            platformFee\n        );\n    }\n\n    function getSession(\n        uint256 _sessionId\n    ) external view returns (ZaaNetStorage.Session memory) {\n        return storageContract.getSession(_sessionId);\n    }\n\n    /// @notice Helper to calculate fee breakdown before payment\n    function calculateFees(\n        uint256 amount\n    ) external view returns (uint256 hostAmount, uint256 platformFee) {\n        uint256 feePercent = adminContract.platformFeePercent();\n        platformFee = (amount * feePercent) / 100;\n        hostAmount = amount - platformFee;\n        return (hostAmount, platformFee);\n    }\n\n    // --- Admin Functions ---\n\n    function pause() external {\n        require(\n            msg.sender == owner() || msg.sender == adminContract.owner(),\n            \"Not authorized to pause\"\n        );\n        _pause();\n    }\n\n    function unpause() external {\n        require(\n            msg.sender == owner() || msg.sender == adminContract.owner(),\n            \"Not authorized to unpause\"\n        );\n        _unpause();\n    }\n\n    /// @notice Update USDT contract address (emergency only)\n    function updateUSDTAddress(address _newUSDT) external onlyOwner {\n        require(_newUSDT != address(0), \"Invalid USDT address\");\n        usdt = TestUSDT(_newUSDT);\n    }\n\n    /// @notice Update admin contract address (emergency only)\n    function updateAdminContract(address _newAdmin) external onlyOwner {\n        require(_newAdmin != address(0), \"Invalid admin address\");\n        adminContract = ZaaNetAdmin(_newAdmin);\n    }\n}\n"
      },
      "contracts/ZaaNetStorage.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract ZaaNetStorage is Ownable, ReentrancyGuard {\n    // Constants for better maintainability\n    uint256 public constant MAX_NETWORKS_PER_QUERY = 100;\n    uint256 public constant MAX_SESSIONS_PER_QUERY = 100;\n\n    struct Network {\n        uint256 id;\n        address hostAddress;\n        uint256 pricePerSession;\n        string mongoDataId;\n        bool isActive;\n        uint256 createdAt;\n        uint256 updatedAt;\n    }\n\n    struct Session {\n        uint256 sessionId;\n        uint256 networkId;\n        address paymentAddress;\n        uint256 amount;\n        bool active;\n        string voucherId;\n        string userId;\n        uint256 startTime;\n    }\n\n    mapping(address => bool) public allowedCallers; // Addresses allowed to call storage functions\n    uint256 public networkIdCounter; // Counter for network IDs\n    uint256 public sessionIdCounter; // Counter for session IDs\n    mapping(uint256 => Network) public networks;\n    mapping(uint256 => Session) public sessions;\n    mapping(address => uint256) public hostEarnings;\n\n    // New mappings for better data management\n    mapping(address => uint256[]) public hostNetworkIds;\n    mapping(uint256 => bool) public networkExists;\n    mapping(uint256 => bool) public sessionExists;\n\n    modifier onlyAllowed() {\n        require(allowedCallers[msg.sender] || msg.sender == owner(), \"Not authorized\");\n        _;\n    }\n\n    event AllowedCallerUpdated(address indexed caller, bool status);\n    event NetworkStored(uint256 indexed id, address indexed hostAddress, uint256 pricePerSession);\n    event NetworkUpdated(uint256 indexed id, address indexed hostAddress);\n    event SessionStored(uint256 indexed sessionId, address indexed paymentAddress, uint256 amount);\n    event HostEarningsUpdated(address indexed hostAddress, uint256 totalEarned);\n\n    constructor() Ownable(msg.sender) {}\n\n    function setAllowedCaller(address _caller, bool status) external onlyOwner {\n        require(_caller != address(0), \"Invalid caller address\");\n        allowedCallers[_caller] = status;\n        emit AllowedCallerUpdated(_caller, status);\n    }\n\n    // Batch set allowed callers for initial setup\n    function setAllowedCallers(address[] calldata _callers, bool status) external onlyOwner {\n        for (uint256 i = 0; i < _callers.length; i++) {\n            require(_callers[i] != address(0), \"Invalid caller address\");\n            allowedCallers[_callers[i]] = status;\n            emit AllowedCallerUpdated(_callers[i], status);\n        }\n    }\n\n    // --- Network Functions ---\n    function incrementNetworkId() external onlyAllowed returns (uint256) {\n        return ++networkIdCounter;\n    }\n\n    function setNetwork(uint256 id, Network calldata net) external onlyAllowed {\n        require(id > 0, \"Invalid network ID\");\n        require(net.hostAddress != address(0), \"Invalid host address\");\n        require(net.pricePerSession > 0, \"Price must be greater than 0\");\n        require(bytes(net.mongoDataId).length > 0, \"MongoDataID required\");\n\n        bool isNewNetwork = !networkExists[id];\n        \n        networks[id] = Network({\n            id: net.id,\n            hostAddress: net.hostAddress,\n            pricePerSession: net.pricePerSession,\n            mongoDataId: net.mongoDataId,\n            isActive: net.isActive,\n            createdAt: isNewNetwork ? block.timestamp : networks[id].createdAt,\n            updatedAt: block.timestamp\n        });\n\n        if (isNewNetwork) {\n            networkExists[id] = true;\n            hostNetworkIds[net.hostAddress].push(id);\n            emit NetworkStored(id, net.hostAddress, net.pricePerSession);\n        } else {\n            emit NetworkUpdated(id, net.hostAddress);\n        }\n    }\n\n    function getNetwork(uint256 id) external view returns (Network memory) {\n        require(networkExists[id], \"Network does not exist\");\n        return networks[id];\n    }\n\n    function getNetworksPaginated(\n        uint256 offset, \n        uint256 limit\n    ) external view returns (Network[] memory, uint256 total) {\n        require(limit <= MAX_NETWORKS_PER_QUERY, \"Limit too high\");\n        \n        total = networkIdCounter;\n        if (offset >= total) {\n            return (new Network[](0), total);\n        }\n\n        uint256 end = offset + limit;\n        if (end > total) {\n            end = total;\n        }\n\n        Network[] memory result = new Network[](end - offset);\n        for (uint256 i = offset; i < end; i++) {\n            result[i - offset] = networks[i + 1]; // Networks start at ID 1\n        }\n\n        return (result, total);\n    }\n\n    function getHostNetworks(address hostAddress) external view returns (uint256[] memory) {\n        return hostNetworkIds[hostAddress];\n    }\n\n    // --- Session Functions ---\n    function incrementSessionId() external onlyAllowed returns (uint256) {\n        return ++sessionIdCounter;\n    }\n\n    function setSession(uint256 id, Session calldata session) external onlyAllowed {\n        require(id > 0, \"Invalid session ID\");\n        require(session.paymentAddress != address(0), \"Invalid payment address\");\n        require(session.amount > 0, \"Amount must be greater than 0\");\n        require(networkExists[session.networkId], \"Network does not exist\");\n\n        sessions[id] = session;\n        sessionExists[id] = true;\n        emit SessionStored(id, session.paymentAddress, session.amount);\n    }\n\n    function getSession(uint256 id) external view returns (Session memory) {\n        require(sessionExists[id], \"Session does not exist\");\n        return sessions[id];\n    }\n\n    // --- Earnings ---\n    function increaseHostEarnings(address hostAddress, uint256 amount) external onlyAllowed nonReentrant {\n        require(hostAddress != address(0), \"Invalid host address\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        hostEarnings[hostAddress] += amount;\n        emit HostEarningsUpdated(hostAddress, hostEarnings[hostAddress]);\n    }\n\n    function getHostEarnings(address hostAddress) external view returns (uint256) {\n        return hostEarnings[hostAddress];\n    }\n\n    // --- Admin Functions ---\n    function getStats() external view returns (\n        uint256 totalNetworks,\n        uint256 totalSessions,\n        uint256 activeNetworks,\n        uint256 activeSessions\n    ) {\n        totalNetworks = networkIdCounter;\n        totalSessions = sessionIdCounter;\n\n        // Count active networks and sessions\n        for (uint256 i = 1; i <= networkIdCounter; i++) {\n            if (networks[i].isActive) {\n                activeNetworks++;\n            }\n        }\n\n        for (uint256 i = 1; i <= sessionIdCounter; i++) {\n            if (sessions[i].active) {\n                activeSessions++;\n            }\n        }\n    }\n\n    // Emergency function to deactivate a network\n    function emergencyDeactivateNetwork(uint256 networkId) external onlyOwner {\n        require(networkExists[networkId], \"Network does not exist\");\n        networks[networkId].isActive = false;\n        networks[networkId].updatedAt = block.timestamp;\n        emit NetworkUpdated(networkId, networks[networkId].hostAddress);\n    }\n}"
      },
      "contracts/ZaaNetVoucher.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./ZaaNetStorage.sol\";\nimport \"./TestUSDT.sol\";\n\ncontract ZaaNetVoucher is ReentrancyGuard, Ownable {\n    // IERC20 public immutable usdtToken;\n        TestUSDT public usdt;\n\n    address public treasuryWallet;\n    ZaaNetStorage public zaaNetStorage;\n    \n    event VoucherPurchased(\n        address indexed buyer,\n        uint256 indexed networkId,\n        uint256 amount,\n        uint256 timestamp\n    );\n\n    constructor(address _usdtToken, address _treasuryWallet, address _zaaNetStorage) Ownable(msg.sender) {\n            // usdtToken = IERC20(_usdtToken);\n        usdt = TestUSDT(_usdtToken);\n        treasuryWallet = _treasuryWallet;\n        zaaNetStorage = ZaaNetStorage(_zaaNetStorage);\n    }\n    function buyVoucher(\n        uint256 networkId,\n        uint256 amount,\n        address buyer\n    ) external nonReentrant {\n        // Get the network details from the storage contract\n            ZaaNetStorage.Network memory network = zaaNetStorage.getNetwork(\n            networkId\n        );\n        require(network.isActive, \"Network is not active\");\n        require(amount > network.pricePerSession, \"Amount must be greater than the price per session\");\n        require(buyer != address(0), \"Invalid buyer address\");\n        \n        require(\n            usdt.transferFrom(buyer, treasuryWallet, amount),\n            \"Transfer failed\"\n        );\n        \n        emit VoucherPurchased(buyer, networkId, amount, block.timestamp);\n    }\n    \n    function updateTreasuryWallet(address newTreasury) external onlyOwner {\n        require(newTreasury != address(0), \"Invalid address\");\n        treasuryWallet = newTreasury;\n    }\n}\n\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1638:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1648:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1656:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1681:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1594:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1615:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:2"
                  },
                  "scope": 799,
                  "src": "1582:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1820:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1837:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1830:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1805:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:2"
                  },
                  "scope": 799,
                  "src": "1760:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2024:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2041:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2034:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2009:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:2"
                  },
                  "scope": 799,
                  "src": "1962:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2744:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2754:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2737:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:2"
                  },
                  "scope": 799,
                  "src": "2688:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2864:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2881:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2874:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2855:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:2"
                  },
                  "scope": 799,
                  "src": "2803:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3007:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3024:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3034:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3017:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2952:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2998:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:2"
                  },
                  "scope": 799,
                  "src": "2933:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3319:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3329:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3345:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3377:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3384:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3388:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3367:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3404:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3262:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3274:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3313:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:2"
                  },
                  "scope": 799,
                  "src": "3244:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3544:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3561:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3573:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3554:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3474:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3489:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3535:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:2"
                  },
                  "scope": 799,
                  "src": "3455:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "3981:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "3991:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4007:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4038:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4045:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4054:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4070:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3919:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3936:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3975:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:2"
                  },
                  "scope": 799,
                  "src": "3902:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4773:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4783:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4801:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4839:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4845:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4854:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4823:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4880:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4886:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4890:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4870:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "4906:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4702:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4716:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4728:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4767:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:2"
                  },
                  "scope": 799,
                  "src": "4680:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5366:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5380:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5376:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5400:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5421:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5475:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5471:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5493:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5514:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5574:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5580:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5584:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5566:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5316:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5330:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5342:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:2"
                  },
                  "scope": 799,
                  "src": "5297:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "5987:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6001:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6175:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6189:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6211:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6221:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6244:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6258:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6240:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6265:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6315:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6321:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6334:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6290:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6475:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6485:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6493:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6507:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "5997:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6021:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6137:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6153:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6551:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6766:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6925:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "6935:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6942:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6547:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6569:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6714:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6730:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "6996:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7002:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7006:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "6987:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5929:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5943:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5955:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:2"
                  },
                  "scope": 799,
                  "src": "5912:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7418:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7432:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7428:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7455:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7476:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7548:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7557:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7528:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7377:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7394:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:2"
                  },
                  "scope": 799,
                  "src": "7362:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "7944:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "7954:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "7981:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8002:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8060:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8081:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8052:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7903:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7920:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:2"
                  },
                  "scope": 799,
                  "src": "7888:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8704:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8723:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8730:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8739:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8714:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8648:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8663:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8680:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:2"
                  },
                  "scope": 799,
                  "src": "8630:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9703:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9717:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9713:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9738:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9759:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9815:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9811:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9838:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9859:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "9910:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "9922:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "9929:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "9940:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "9959:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "9955:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "9970:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "9998:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10005:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10014:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "9989:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9623:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9638:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9655:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9670:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:2"
                  },
                  "scope": 799,
                  "src": "9605:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10408:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10418:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10455:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10462:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10445:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10484:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10480:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10522:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10540:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10559:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10536:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10566:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10618:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10627:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10645:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10591:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10716:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10723:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10732:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10751:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10707:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:2",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10344:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10359:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10376:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:2"
                  },
                  "scope": 799,
                  "src": "10319:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9691:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10693:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "215:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "397:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "406:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "428:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "448:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:3"
                  },
                  "src": "391:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "628:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "637:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "660:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "685:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:3"
                  },
                  "src": "622:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "822:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:3"
                  },
                  "scope": 877,
                  "src": "776:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "932:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "972:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:3"
                  },
                  "scope": 877,
                  "src": "913:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1223:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1235:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1268:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:3"
                  },
                  "scope": 877,
                  "src": "1205:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1568:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1583:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1623:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:3"
                  },
                  "scope": 877,
                  "src": "1549:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2327:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2344:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2377:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:3"
                  },
                  "scope": 877,
                  "src": "2310:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2713:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2727:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2739:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2772:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:3"
                  },
                  "scope": 877,
                  "src": "2691:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "205:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2675:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 903,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 903,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 903,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Pausable": [
              1041
            ]
          },
          "id": 1042,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 937,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1042,
              "sourceUnit": 934,
              "src": "128:45:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 936,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 939,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "645:7:6"
                  },
                  "id": 940,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:6"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 938,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:6",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1041,
              "linearizedBaseContracts": [
                1041,
                933
              ],
              "name": "Pausable",
              "nameLocation": "633:8:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "659:20:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 943,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:6",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 947,
                  "name": "Paused",
                  "nameLocation": "770:6:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "777:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:6"
                  },
                  "src": "764:30:6"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 948,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:6",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 952,
                  "name": "Unpaused",
                  "nameLocation": "881:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "890:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:6"
                  },
                  "src": "875:32:6"
                },
                {
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:6",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 955,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:6"
                  },
                  "src": "994:22:6"
                },
                {
                  "documentation": {
                    "id": 956,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:6",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 958,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:6"
                  },
                  "src": "1107:22:6"
                },
                {
                  "body": {
                    "id": 965,
                    "nodeType": "Block",
                    "src": "1340:47:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 961,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "1350:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 963,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:6"
                      },
                      {
                        "id": 964,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 959,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:6",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 966,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:6"
                  },
                  "src": "1315:72:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 973,
                    "nodeType": "Block",
                    "src": "1587:44:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 969,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "1597:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 971,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:6"
                      },
                      {
                        "id": 972,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 967,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:6",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 974,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:6"
                  },
                  "src": "1565:66:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 982,
                    "nodeType": "Block",
                    "src": "1779:31:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 980,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "1796:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 979,
                        "id": 981,
                        "nodeType": "Return",
                        "src": "1789:14:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 975,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:6",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 983,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:6"
                  },
                  "returnParameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "1773:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:6"
                  },
                  "scope": 1041,
                  "src": "1726:84:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "1929:77:6",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 987,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "1943:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 993,
                        "nodeType": "IfStatement",
                        "src": "1939:61:6",
                        "trueBody": {
                          "id": 992,
                          "nodeType": "Block",
                          "src": "1953:47:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 989,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 955,
                                  "src": "1974:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 991,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 984,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:6",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:6"
                  },
                  "returnParameters": {
                    "id": 986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:6"
                  },
                  "scope": 1041,
                  "src": "1878:128:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1007,
                    "nodeType": "Block",
                    "src": "2126:78:6",
                    "statements": [
                      {
                        "condition": {
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:6",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 999,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "2141:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1006,
                        "nodeType": "IfStatement",
                        "src": "2136:62:6",
                        "trueBody": {
                          "id": 1005,
                          "nodeType": "Block",
                          "src": "2151:47:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1002,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "2172:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1004,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:6",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:6"
                  },
                  "returnParameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:6"
                  },
                  "scope": 1041,
                  "src": "2078:126:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "2388:66:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1014,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2398:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1019,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "2434:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1018,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "2427:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1022,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1009,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:6",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1012,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1011,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "2374:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:6"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:6"
                  },
                  "returnParameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:6"
                  },
                  "scope": 1041,
                  "src": "2339:115:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1039,
                    "nodeType": "Block",
                    "src": "2634:69:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1030,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2644:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1035,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "2683:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1034,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2674:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1038,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:6",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1040,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1028,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1027,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 974,
                        "src": "2623:10:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:6"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:6"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:6"
                  },
                  "scope": 1041,
                  "src": "2586:117:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1042,
              "src": "615:2090:6",
              "usedErrors": [
                955,
                958
              ],
              "usedEvents": [
                947,
                952
              ]
            }
          ],
          "src": "102:2604:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1110
            ]
          },
          "id": 1111,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1043,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1044,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:7",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1110,
              "linearizedBaseContracts": [
                1110
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1047,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1818:40:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1050,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1864:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1907:23:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1053,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:7",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1055,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:7"
                  },
                  "src": "1994:37:7"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "2051:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1058,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2061:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1059,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "2071:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:7"
                      }
                    ]
                  },
                  "id": 1063,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:7"
                  },
                  "returnParameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:7"
                  },
                  "scope": 1110,
                  "src": "2037:52:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "2490:79:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1066,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "2500:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1068,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:7"
                      },
                      {
                        "id": 1069,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1070,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "2542:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1072,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:7",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1074,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:7"
                  },
                  "src": "2466:103:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1089,
                    "nodeType": "Block",
                    "src": "2614:268:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1077,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2702:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1078,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "2713:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1084,
                        "nodeType": "IfStatement",
                        "src": "2698:86:7",
                        "trueBody": {
                          "id": 1083,
                          "nodeType": "Block",
                          "src": "2722:62:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1080,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1055,
                                  "src": "2743:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1082,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1085,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2858:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1086,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "2868:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:7"
                      }
                    ]
                  },
                  "id": 1090,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:7"
                  },
                  "returnParameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:7"
                  },
                  "scope": 1110,
                  "src": "2575:307:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "2926:170:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1093,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3068:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1094,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "3078:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:7"
                      }
                    ]
                  },
                  "id": 1098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:7"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:7"
                  },
                  "scope": 1110,
                  "src": "2888:208:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "3339:42:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1104,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3356:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1105,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "3367:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1103,
                        "id": 1107,
                        "nodeType": "Return",
                        "src": "3349:25:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1099,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:7",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:7"
                  },
                  "returnParameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "3333:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:7"
                  },
                  "scope": 1110,
                  "src": "3275:106:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1111,
              "src": "1030:2353:7",
              "usedErrors": [
                1055
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:7"
        },
        "id": 7
      },
      "contracts/TestUSDT.sol": {
        "ast": {
          "absolutePath": "contracts/TestUSDT.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "TestUSDT": [
              1145
            ]
          },
          "id": 1146,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1112,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1113,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1146,
              "sourceUnit": 800,
              "src": "57:55:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1114,
                    "name": "ERC20",
                    "nameLocations": [
                      "135:5:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "135:5:8"
                  },
                  "id": 1115,
                  "nodeType": "InheritanceSpecifier",
                  "src": "135:5:8"
                }
              ],
              "canonicalName": "TestUSDT",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1145,
              "linearizedBaseContracts": [
                1145,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "TestUSDT",
              "nameLocation": "123:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1130,
                    "nodeType": "Block",
                    "src": "215:49:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1125,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "231:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "235:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "231:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1127,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "243:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1124,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "225:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "225:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1129,
                        "nodeType": "ExpressionStatement",
                        "src": "225:32:8"
                      }
                    ]
                  },
                  "id": 1131,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "546573742054657468657220555344",
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "188:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3ac6f2b284014e859e7028262cc22641c1890c305f4bf8e391cc47ae911a8ddf",
                            "typeString": "literal_string \"Test Tether USD\""
                          },
                          "value": "Test Tether USD"
                        },
                        {
                          "hexValue": "55534454",
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "207:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                            "typeString": "literal_string \"USDT\""
                          },
                          "value": "USDT"
                        }
                      ],
                      "id": 1122,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1119,
                        "name": "ERC20",
                        "nameLocations": [
                          "182:5:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "182:5:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "182:32:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "167:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1131,
                        "src": "159:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "159:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "158:23:8"
                  },
                  "returnParameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "215:0:8"
                  },
                  "scope": 1145,
                  "src": "147:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1143,
                    "nodeType": "Block",
                    "src": "321:34:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1139,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "337:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1140,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "341:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1138,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "331:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "331:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "331:17:8"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1144,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "279:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "292:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "284:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "304:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "296:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "296:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "283:28:8"
                  },
                  "returnParameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "321:0:8"
                  },
                  "scope": 1145,
                  "src": "270:85:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1146,
              "src": "114:243:8",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "32:326:8"
        },
        "id": 8
      },
      "contracts/ZaaNetAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetAdmin.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              1041
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetAdmin": [
              1866
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 1867,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1147,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1148,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1867,
              "sourceUnit": 148,
              "src": "58:52:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1149,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1867,
              "sourceUnit": 1042,
              "src": "111:52:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1150,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1867,
              "sourceUnit": 1111,
              "src": "164:59:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1867,
              "sourceUnit": 3797,
              "src": "224:29:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1152,
                    "name": "Ownable",
                    "nameLocations": [
                      "279:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "279:7:9"
                  },
                  "id": 1153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "279:7:9"
                },
                {
                  "baseName": {
                    "id": 1154,
                    "name": "Pausable",
                    "nameLocations": [
                      "288:8:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1041,
                    "src": "288:8:9"
                  },
                  "id": 1155,
                  "nodeType": "InheritanceSpecifier",
                  "src": "288:8:9"
                },
                {
                  "baseName": {
                    "id": 1156,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "298:15:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "298:15:9"
                  },
                  "id": 1157,
                  "nodeType": "InheritanceSpecifier",
                  "src": "298:15:9"
                }
              ],
              "canonicalName": "ZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1866,
              "linearizedBaseContracts": [
                1866,
                1110,
                1041,
                147,
                933
              ],
              "name": "ZaaNetAdmin",
              "nameLocation": "264:11:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "341:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "320:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 1159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1158,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "320:13:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3796,
                      "src": "320:13:9"
                    },
                    "referencedDeclaration": 3796,
                    "src": "320:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c5f956af",
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "treasuryAddress",
                  "nameLocation": "377:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "362:30:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c639a85",
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "platformFeePercent",
                  "nameLocation": "413:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "398:33:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3998a681",
                  "id": 1167,
                  "mutability": "constant",
                  "name": "MAX_PLATFORM_FEE",
                  "nameLocation": "494:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "470:45:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "513:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6f04d994",
                  "id": 1170,
                  "mutability": "constant",
                  "name": "MIN_PLATFORM_FEE",
                  "nameLocation": "564:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "540:44:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "583:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0905f560",
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "emergencyMode",
                  "nameLocation": "648:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "636:33:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "664:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "09705de8",
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "emergencyOperators",
                  "nameLocation": "707:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "675:50:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1176,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1174,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "683:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "675:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1175,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "694:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.FeeChange",
                  "id": 1186,
                  "members": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "oldFee",
                      "nameLocation": "803:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "795:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1181,
                      "mutability": "mutable",
                      "name": "newFee",
                      "nameLocation": "827:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "819:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "851:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "843:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1185,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "878:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "870:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1184,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "870:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeChange",
                  "nameLocation": "775:9:9",
                  "nodeType": "StructDefinition",
                  "scope": 1866,
                  "src": "768:126:9",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0d35a167",
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "feeHistory",
                  "nameLocation": "923:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "904:29:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.FeeChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1188,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1187,
                        "name": "FeeChange",
                        "nameLocations": [
                          "904:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1186,
                        "src": "904:9:9"
                      },
                      "referencedDeclaration": 1186,
                      "src": "904:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeChange_$1186_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.FeeChange"
                      }
                    },
                    "id": 1189,
                    "nodeType": "ArrayTypeName",
                    "src": "904:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.FeeChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetAdmin.TreasuryChange",
                  "id": 1199,
                  "members": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "oldTreasury",
                      "nameLocation": "1015:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1007:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1007:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "newTreasury",
                      "nameLocation": "1044:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1036:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1036:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1196,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1073:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1065:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1198,
                      "mutability": "mutable",
                      "name": "changedBy",
                      "nameLocation": "1100:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1092:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1092:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TreasuryChange",
                  "nameLocation": "982:14:9",
                  "nodeType": "StructDefinition",
                  "scope": 1866,
                  "src": "975:141:9",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a380b86b",
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "treasuryHistory",
                  "nameLocation": "1150:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1126:39:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                    "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1201,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1200,
                        "name": "TreasuryChange",
                        "nameLocations": [
                          "1126:14:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1199,
                        "src": "1126:14:9"
                      },
                      "referencedDeclaration": 1199,
                      "src": "1126:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TreasuryChange_$1199_storage_ptr",
                        "typeString": "struct ZaaNetAdmin.TreasuryChange"
                      }
                    },
                    "id": 1202,
                    "nodeType": "ArrayTypeName",
                    "src": "1126:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr",
                      "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb99",
                  "id": 1211,
                  "name": "PlatformFeeUpdated",
                  "nameLocation": "1178:18:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1205,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldFee",
                        "nameLocation": "1213:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1211,
                        "src": "1197:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1207,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "1237:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1211,
                        "src": "1221:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1209,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1261:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1211,
                        "src": "1245:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1245:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1196:75:9"
                  },
                  "src": "1172:100:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa13",
                  "id": 1219,
                  "name": "TreasuryUpdated",
                  "nameLocation": "1283:15:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldTreasury",
                        "nameLocation": "1315:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "1299:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newTreasury",
                        "nameLocation": "1344:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "1328:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1328:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1217,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "changedBy",
                        "nameLocation": "1373:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "1357:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1298:85:9"
                  },
                  "src": "1277:107:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f0140290",
                  "id": 1223,
                  "name": "AdminPaused",
                  "nameLocation": "1395:11:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1221,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "1423:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1407:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1407:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1406:29:9"
                  },
                  "src": "1389:47:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c634",
                  "id": 1227,
                  "name": "AdminUnpaused",
                  "nameLocation": "1447:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "1477:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "1461:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1461:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1460:29:9"
                  },
                  "src": "1441:49:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa40",
                  "id": 1233,
                  "name": "EmergencyModeToggled",
                  "nameLocation": "1501:20:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1229,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "enabled",
                        "nameLocation": "1527:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1522:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1228,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1522:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1231,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "triggeredBy",
                        "nameLocation": "1552:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1536:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1521:43:9"
                  },
                  "src": "1495:70:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce",
                  "id": 1241,
                  "name": "EmergencyOperatorUpdated",
                  "nameLocation": "1576:24:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1617:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "1601:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1601:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1632:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "1627:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1627:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1239,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "updatedBy",
                        "nameLocation": "1656:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "1640:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1640:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1600:66:9"
                  },
                  "src": "1570:97:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa8",
                  "id": 1247,
                  "name": "ContractsInitialized",
                  "nameLocation": "1678:20:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1243,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "storageContract",
                        "nameLocation": "1715:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "1699:31:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1245,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1740:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "1732:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1732:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:52:9"
                  },
                  "src": "1672:79:9"
                },
                {
                  "body": {
                    "id": 1264,
                    "nodeType": "Block",
                    "src": "1790:118:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1250,
                                  "name": "emergencyOperators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "1808:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1253,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1251,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1827:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1831:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1827:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1808:30:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1254,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1842:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1846:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1842:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1256,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "1856:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1856:7:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1842:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1808:55:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656d657267656e6379206f70657261746f72",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1865:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              },
                              "value": "Not emergency operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc1b39fc0b454b5fd3784c3a15d54fced45e89466614065aee240afeee0420b8",
                                "typeString": "literal_string \"Not emergency operator\""
                              }
                            ],
                            "id": 1249,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1800:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1800:90:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "1800:90:9"
                      },
                      {
                        "id": 1263,
                        "nodeType": "PlaceholderStatement",
                        "src": "1900:1:9"
                      }
                    ]
                  },
                  "id": 1265,
                  "name": "onlyEmergencyOperator",
                  "nameLocation": "1766:21:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1248,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1787:2:9"
                  },
                  "src": "1757:151:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "1944:79:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1962:14:9",
                              "subExpression": {
                                "id": 1268,
                                "name": "emergencyMode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1173,
                                "src": "1963:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53797374656d20696e20656d657267656e6379206d6f6465",
                              "id": 1270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1978:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              },
                              "value": "System in emergency mode"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6aa06e0bb1c440eec40b9cb8c9374010ea534350e6e4653e6abbb382dc701e03",
                                "typeString": "literal_string \"System in emergency mode\""
                              }
                            ],
                            "id": 1267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1954:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:51:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "1954:51:9"
                      },
                      {
                        "id": 1273,
                        "nodeType": "PlaceholderStatement",
                        "src": "2015:1:9"
                      }
                    ]
                  },
                  "id": 1275,
                  "name": "notInEmergencyMode",
                  "nameLocation": "1923:18:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1941:2:9"
                  },
                  "src": "1914:109:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1381,
                    "nodeType": "Block",
                    "src": "2172:1155:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1289,
                                "name": "_treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1279,
                                "src": "2190:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2218:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2210:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1290,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2210:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2210:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2190:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2222:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              },
                              "value": "Treasury cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512",
                                "typeString": "literal_string \"Treasury cannot be zero address\""
                              }
                            ],
                            "id": 1288,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2182:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2182:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1297,
                        "nodeType": "ExpressionStatement",
                        "src": "2182:74:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1299,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "2287:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1300,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "2310:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2287:39:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1302,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "2330:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1303,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1167,
                                  "src": "2353:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2330:39:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2287:82:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2384:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              },
                              "value": "Fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1298,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2266:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2266:160:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "2266:160:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1309,
                            "name": "_storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "2441:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2469:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2461:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2461:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2461:10:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2441:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1328,
                        "nodeType": "IfStatement",
                        "src": "2437:184:9",
                        "trueBody": {
                          "id": 1327,
                          "nodeType": "Block",
                          "src": "2473:148:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1315,
                                  "name": "storageContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "2487:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1317,
                                      "name": "_storageContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1277,
                                      "src": "2519:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1316,
                                    "name": "ZaaNetStorage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3796,
                                    "src": "2505:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                      "typeString": "type(contract ZaaNetStorage)"
                                    }
                                  },
                                  "id": 1318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2505:31:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                    "typeString": "contract ZaaNetStorage"
                                  }
                                },
                                "src": "2487:49:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 1320,
                              "nodeType": "ExpressionStatement",
                              "src": "2487:49:9"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1322,
                                    "name": "_storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1277,
                                    "src": "2576:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1323,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2594:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2600:9:9",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "2594:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1321,
                                  "name": "ContractsInitialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1247,
                                  "src": "2555:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2555:55:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1326,
                              "nodeType": "EmitStatement",
                              "src": "2550:60:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1329,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "2639:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1330,
                            "name": "_treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "2657:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2639:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1332,
                        "nodeType": "ExpressionStatement",
                        "src": "2639:34:9"
                      },
                      {
                        "expression": {
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1333,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "2683:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1334,
                            "name": "_platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "2704:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2683:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1336,
                        "nodeType": "ExpressionStatement",
                        "src": "2683:40:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2817:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1342,
                                  "name": "_platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "2840:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1343,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2884:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2890:9:9",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2884:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1345,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2924:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2928:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2924:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1340,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "2785:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1186_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2809:6:9",
                                "2832:6:9",
                                "2873:9:9",
                                "2913:9:9"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2785:160:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1337,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "2769:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2780:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2769:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1186_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2769:177:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1349,
                        "nodeType": "ExpressionStatement",
                        "src": "2769:177:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1356,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3028:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3020:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1354,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3020:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3020:10:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1358,
                                  "name": "_treasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "3057:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1359,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3098:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3104:9:9",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3098:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1361,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3138:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3142:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3138:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1353,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "2978:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1199_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3007:11:9",
                                "3044:11:9",
                                "3087:9:9",
                                "3127:9:9"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2978:181:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1199_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1199_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1350,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "2957:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2973:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2957:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1199_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2957:203:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1365,
                        "nodeType": "ExpressionStatement",
                        "src": "2957:203:9"
                      },
                      {
                        "expression": {
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1366,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1177,
                              "src": "3214:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1369,
                            "indexExpression": {
                              "expression": {
                                "id": 1367,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3233:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3237:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3233:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3214:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3247:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3214:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1372,
                        "nodeType": "ExpressionStatement",
                        "src": "3214:37:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1374,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3291:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3295:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3291:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3303:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 1377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3309:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3313:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3309:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1373,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "3266:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3266:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1380,
                        "nodeType": "EmitStatement",
                        "src": "3261:59:9"
                      }
                    ]
                  },
                  "id": 1382,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2160:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2164:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2160:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1286,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1283,
                        "name": "Ownable",
                        "nameLocations": [
                          "2152:7:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2152:7:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2152:19:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "2058:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "2050:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2050:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "_treasuryAddress",
                        "nameLocation": "2092:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "2084:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1278,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2084:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "_platformFeePercent",
                        "nameLocation": "2126:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "2118:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2040:111:9"
                  },
                  "returnParameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2172:0:9"
                  },
                  "scope": 1866,
                  "src": "2029:1298:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "3483:310:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1391,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1385,
                                "src": "3501:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3529:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3521:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1392,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3521:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3521:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3501:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073746f7261676520636f6e7472616374",
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3533:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e09dcfeb6cd904fa6d321e0a814828e94535ad85ecac27ebd3573a6078f1bc42",
                                "typeString": "literal_string \"Invalid storage contract\""
                              },
                              "value": "Invalid storage contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e09dcfeb6cd904fa6d321e0a814828e94535ad85ecac27ebd3573a6078f1bc42",
                                "typeString": "literal_string \"Invalid storage contract\""
                              }
                            ],
                            "id": 1390,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3493:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:67:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1399,
                        "nodeType": "ExpressionStatement",
                        "src": "3493:67:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1403,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1160,
                                    "src": "3586:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  ],
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3578:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1401,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3578:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3578:24:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3614:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3606:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1405,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3606:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3606:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3578:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746f7261676520616c726561647920696e697469616c697a6564",
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3618:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_81289e1f1dc69754f46eb5d14fd8d89605a941592d73c0ee006a6585e2239c52",
                                "typeString": "literal_string \"Storage already initialized\""
                              },
                              "value": "Storage already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_81289e1f1dc69754f46eb5d14fd8d89605a941592d73c0ee006a6585e2239c52",
                                "typeString": "literal_string \"Storage already initialized\""
                              }
                            ],
                            "id": 1400,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3570:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3570:78:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1412,
                        "nodeType": "ExpressionStatement",
                        "src": "3570:78:9"
                      },
                      {
                        "expression": {
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1413,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "3667:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1415,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1385,
                                "src": "3699:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1414,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3796,
                              "src": "3685:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3685:31:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "3667:49:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 1418,
                        "nodeType": "ExpressionStatement",
                        "src": "3667:49:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1420,
                              "name": "_storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1385,
                              "src": "3752:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1421,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3770:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3776:9:9",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3770:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1419,
                            "name": "ContractsInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "3731:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3731:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1424,
                        "nodeType": "EmitStatement",
                        "src": "3726:60:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1383,
                    "nodeType": "StructuredDocumentation",
                    "src": "3333:65:9",
                    "text": "@notice Initialize storage contract if not set in constructor"
                  },
                  "functionSelector": "10c28619",
                  "id": 1426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1388,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1387,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3473:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3473:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3473:9:9"
                    }
                  ],
                  "name": "initializeStorageContract",
                  "nameLocation": "3412:25:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1385,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "3446:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "3438:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3438:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3437:26:9"
                  },
                  "returnParameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3483:0:9"
                  },
                  "scope": 1866,
                  "src": "3403:390:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1481,
                    "nodeType": "Block",
                    "src": "3885:617:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1436,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1428,
                                  "src": "3916:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1437,
                                  "name": "MIN_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "3934:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3916:34:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1439,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1428,
                                  "src": "3954:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1440,
                                  "name": "MAX_PLATFORM_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1167,
                                  "src": "3972:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3954:34:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3916:72:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466565206d757374206265206265747765656e20312520616e6420323025",
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4003:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              },
                              "value": "Fee must be between 1% and 20%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d94d2ca419eaacb351b7948b7af739baad982e852e68b60589813741b6c863f",
                                "typeString": "literal_string \"Fee must be between 1% and 20%\""
                              }
                            ],
                            "id": 1435,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3895:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:150:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1445,
                        "nodeType": "ExpressionStatement",
                        "src": "3895:150:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1447,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1428,
                                "src": "4063:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1448,
                                "name": "platformFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1164,
                                "src": "4081:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4063:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46656520756e6368616e676564",
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4101:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              },
                              "value": "Fee unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5b9f70a7cc6330ed00e19e510fb0b601f5a7566aa7c8d8eac26f1c5409cc606",
                                "typeString": "literal_string \"Fee unchanged\""
                              }
                            ],
                            "id": 1446,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4055:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4055:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1452,
                        "nodeType": "ExpressionStatement",
                        "src": "4055:62:9"
                      },
                      {
                        "assignments": [
                          1454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1454,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "4136:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1481,
                            "src": "4128:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1453,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4128:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1456,
                        "initialValue": {
                          "id": 1455,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "4145:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4128:35:9"
                      },
                      {
                        "expression": {
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1457,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "4173:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1458,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "4194:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4173:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1460,
                        "nodeType": "ExpressionStatement",
                        "src": "4173:35:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1465,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1454,
                                  "src": "4296:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1466,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1428,
                                  "src": "4324:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1467,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4363:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4369:9:9",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4363:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1469,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4403:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4407:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4403:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1464,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "4264:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1186_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4288:6:9",
                                "4316:6:9",
                                "4352:9:9",
                                "4392:9:9"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4264:160:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1461,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "4248:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4259:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4248:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1186_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4248:177:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1473,
                        "nodeType": "ExpressionStatement",
                        "src": "4248:177:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1475,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "4460:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1476,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1428,
                              "src": "4468:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1477,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4484:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4488:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4484:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1474,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1211,
                            "src": "4441:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4441:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1480,
                        "nodeType": "EmitStatement",
                        "src": "4436:59:9"
                      }
                    ]
                  },
                  "functionSelector": "12e8e2c3",
                  "id": 1482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1431,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1430,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3856:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3856:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3856:9:9"
                    },
                    {
                      "id": 1433,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1432,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "3866:18:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1275,
                        "src": "3866:18:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3866:18:9"
                    }
                  ],
                  "name": "setPlatformFee",
                  "nameLocation": "3808:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1428,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "3831:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1482,
                        "src": "3823:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1427,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3823:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3822:24:9"
                  },
                  "returnParameters": {
                    "id": 1434,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3885:0:9"
                  },
                  "scope": 1866,
                  "src": "3799:703:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1536,
                    "nodeType": "Block",
                    "src": "4603:590:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1492,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1484,
                                "src": "4621:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4652:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4644:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1493,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4644:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4644:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4621:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074726561737572792061646472657373",
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4656:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              },
                              "value": "Invalid treasury address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              }
                            ],
                            "id": 1491,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4613:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4613:70:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1500,
                        "nodeType": "ExpressionStatement",
                        "src": "4613:70:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1502,
                                "name": "_newTreasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1484,
                                "src": "4701:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1503,
                                "name": "treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "4724:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4701:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "547265617375727920756e6368616e676564",
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              },
                              "value": "Treasury unchanged"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8173890bbafbce9334fc44523b57c04aecc013fd57fc2b0c602bc5bf1e7d2665",
                                "typeString": "literal_string \"Treasury unchanged\""
                              }
                            ],
                            "id": 1501,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4693:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4693:69:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "4693:69:9"
                      },
                      {
                        "assignments": [
                          1509
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1509,
                            "mutability": "mutable",
                            "name": "oldTreasury",
                            "nameLocation": "4781:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1536,
                            "src": "4773:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1508,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4773:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1511,
                        "initialValue": {
                          "id": 1510,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1162,
                          "src": "4795:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4773:37:9"
                      },
                      {
                        "expression": {
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1512,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "4820:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1513,
                            "name": "_newTreasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "4838:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4820:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "4820:37:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1520,
                                  "name": "oldTreasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1509,
                                  "src": "4965:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1521,
                                  "name": "_newTreasuryAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1484,
                                  "src": "5003:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1522,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5047:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5053:9:9",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5047:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1524,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5087:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5091:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5087:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1519,
                                "name": "TreasuryChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "4923:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TreasuryChange_$1199_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.TreasuryChange storage pointer)"
                                }
                              },
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "4952:11:9",
                                "4990:11:9",
                                "5036:9:9",
                                "5076:9:9"
                              ],
                              "names": [
                                "oldTreasury",
                                "newTreasury",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4923:185:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1199_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TreasuryChange_$1199_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1516,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "4902:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4918:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4902:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr_$_t_struct$_TreasuryChange_$1199_storage_$returns$__$attached_to$_t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.TreasuryChange storage ref[] storage pointer,struct ZaaNetAdmin.TreasuryChange storage ref)"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:207:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "4902:207:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1530,
                              "name": "oldTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1509,
                              "src": "5141:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1531,
                              "name": "_newTreasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "5154:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1532,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5175:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5179:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5175:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1529,
                            "name": "TreasuryUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "5125:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5125:61:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1535,
                        "nodeType": "EmitStatement",
                        "src": "5120:66:9"
                      }
                    ]
                  },
                  "functionSelector": "6605bfda",
                  "id": 1537,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1487,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1486,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4574:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4574:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4574:9:9"
                    },
                    {
                      "id": 1489,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1488,
                        "name": "notInEmergencyMode",
                        "nameLocations": [
                          "4584:18:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1275,
                        "src": "4584:18:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4584:18:9"
                    }
                  ],
                  "name": "setTreasuryAddress",
                  "nameLocation": "4517:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "_newTreasuryAddress",
                        "nameLocation": "4544:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "4536:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4536:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4535:29:9"
                  },
                  "returnParameters": {
                    "id": 1490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4603:0:9"
                  },
                  "scope": 1866,
                  "src": "4508:685:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1550,
                    "nodeType": "Block",
                    "src": "5235:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1542,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "5245:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5245:8:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1544,
                        "nodeType": "ExpressionStatement",
                        "src": "5245:8:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1546,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5280:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5284:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5280:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1545,
                            "name": "AdminPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "5268:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5268:23:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1549,
                        "nodeType": "EmitStatement",
                        "src": "5263:28:9"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1551,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1540,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1539,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5225:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5225:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5225:9:9"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "5208:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5213:2:9"
                  },
                  "returnParameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5235:0:9"
                  },
                  "scope": 1866,
                  "src": "5199:99:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1564,
                    "nodeType": "Block",
                    "src": "5342:67:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1556,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "5352:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5352:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1558,
                        "nodeType": "ExpressionStatement",
                        "src": "5352:10:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1560,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5391:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5395:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5391:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1559,
                            "name": "AdminUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "5377:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5377:25:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1563,
                        "nodeType": "EmitStatement",
                        "src": "5372:30:9"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1565,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1554,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1553,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5332:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5332:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5332:9:9"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "5313:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5320:2:9"
                  },
                  "returnParameters": {
                    "id": 1555,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5342:0:9"
                  },
                  "scope": 1866,
                  "src": "5304:105:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1582,
                    "nodeType": "Block",
                    "src": "5539:109:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1571,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "5549:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5565:14:9",
                            "subExpression": {
                              "id": 1572,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "5566:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5549:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "5549:30:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1577,
                              "name": "emergencyMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "5615:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1578,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5630:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5634:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5630:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1576,
                            "name": "EmergencyModeToggled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "5594:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bool,address)"
                            }
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5594:47:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1581,
                        "nodeType": "EmitStatement",
                        "src": "5589:52:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1566,
                    "nodeType": "StructuredDocumentation",
                    "src": "5415:57:9",
                    "text": "@notice Toggle emergency mode (stops most operations)"
                  },
                  "functionSelector": "4c17b530",
                  "id": 1583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1569,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1568,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "5517:21:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1265,
                        "src": "5517:21:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5517:21:9"
                    }
                  ],
                  "name": "toggleEmergencyMode",
                  "nameLocation": "5486:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5505:2:9"
                  },
                  "returnParameters": {
                    "id": 1570,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5539:0:9"
                  },
                  "scope": 1866,
                  "src": "5477:171:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1616,
                    "nodeType": "Block",
                    "src": "5784:192:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1594,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1586,
                                "src": "5802:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5822:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1596,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5814:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1595,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5814:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5814:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5802:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                              "id": 1600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5826:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              },
                              "value": "Invalid operator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                                "typeString": "literal_string \"Invalid operator address\""
                              }
                            ],
                            "id": 1593,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5794:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5794:59:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1602,
                        "nodeType": "ExpressionStatement",
                        "src": "5794:59:9"
                      },
                      {
                        "expression": {
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1603,
                              "name": "emergencyOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1177,
                              "src": "5863:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1605,
                            "indexExpression": {
                              "id": 1604,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "5882:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5863:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1606,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "5894:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5863:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1608,
                        "nodeType": "ExpressionStatement",
                        "src": "5863:37:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1610,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "5940:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1611,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "5950:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1612,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5958:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5962:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5958:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1609,
                            "name": "EmergencyOperatorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "5915:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,bool,address)"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5915:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1615,
                        "nodeType": "EmitStatement",
                        "src": "5910:59:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1584,
                    "nodeType": "StructuredDocumentation",
                    "src": "5654:45:9",
                    "text": "@notice Add or remove emergency operators"
                  },
                  "functionSelector": "02e88899",
                  "id": 1617,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1591,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1590,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5774:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5774:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5774:9:9"
                    }
                  ],
                  "name": "setEmergencyOperator",
                  "nameLocation": "5713:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1586,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5742:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1617,
                        "src": "5734:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5734:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1588,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "5757:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1617,
                        "src": "5752:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1587,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5752:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5733:31:9"
                  },
                  "returnParameters": {
                    "id": 1592,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5784:0:9"
                  },
                  "scope": 1866,
                  "src": "5704:272:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1644,
                    "nodeType": "Block",
                    "src": "6127:154:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1628,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1160,
                                    "src": "6153:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  ],
                                  "id": 1627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6145:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1626,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6145:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6145:24:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6181:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6173:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1630,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6173:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6173:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6145:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746f72616765206e6f7420696e697469616c697a6564",
                              "id": 1635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6185:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              },
                              "value": "Storage not initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2023538f64727753263af97fb236e4ca5fd392e4beb26d70beb0b687afd58eae",
                                "typeString": "literal_string \"Storage not initialized\""
                              }
                            ],
                            "id": 1625,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6137:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6137:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1637,
                        "nodeType": "ExpressionStatement",
                        "src": "6137:74:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1641,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1620,
                              "src": "6264:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1638,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "6221:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6237:26:9",
                            "memberName": "emergencyDeactivateNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3795,
                            "src": "6221:42:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6221:53:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1643,
                        "nodeType": "ExpressionStatement",
                        "src": "6221:53:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1618,
                    "nodeType": "StructuredDocumentation",
                    "src": "5982:54:9",
                    "text": "@notice Emergency function to deactivate a network"
                  },
                  "functionSelector": "5a2f406f",
                  "id": 1645,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1623,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1622,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "6105:21:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1265,
                        "src": "6105:21:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6105:21:9"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "6050:26:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1620,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "6085:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1645,
                        "src": "6077:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6077:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6076:19:9"
                  },
                  "returnParameters": {
                    "id": 1624,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6127:0:9"
                  },
                  "scope": 1866,
                  "src": "6041:240:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1688,
                    "nodeType": "Block",
                    "src": "6447:446:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1654,
                                "name": "_newFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1648,
                                "src": "6465:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1655,
                                "name": "MAX_PLATFORM_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1167,
                                "src": "6483:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6465:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4665652063616e6e6f7420657863656564206d6178696d756d",
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6501:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              },
                              "value": "Fee cannot exceed maximum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d20cf87969f5a2104c71f9ad4b252fb86c200a633fd874260d3db4f2b259ef5",
                                "typeString": "literal_string \"Fee cannot exceed maximum\""
                              }
                            ],
                            "id": 1653,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6457:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6457:72:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1659,
                        "nodeType": "ExpressionStatement",
                        "src": "6457:72:9"
                      },
                      {
                        "assignments": [
                          1661
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1661,
                            "mutability": "mutable",
                            "name": "oldFee",
                            "nameLocation": "6556:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1688,
                            "src": "6548:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1660,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6548:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1663,
                        "initialValue": {
                          "id": 1662,
                          "name": "platformFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "6565:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6548:35:9"
                      },
                      {
                        "expression": {
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1664,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "6593:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1665,
                            "name": "_newFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1648,
                            "src": "6614:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6593:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1667,
                        "nodeType": "ExpressionStatement",
                        "src": "6593:35:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1672,
                                  "name": "oldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1661,
                                  "src": "6687:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1673,
                                  "name": "_newFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1648,
                                  "src": "6715:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1674,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6754:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6760:9:9",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6754:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1676,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6794:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6798:6:9",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6794:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1671,
                                "name": "FeeChange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "6655:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FeeChange_$1186_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetAdmin.FeeChange storage pointer)"
                                }
                              },
                              "id": 1678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "6679:6:9",
                                "6707:6:9",
                                "6743:9:9",
                                "6783:9:9"
                              ],
                              "names": [
                                "oldFee",
                                "newFee",
                                "timestamp",
                                "changedBy"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6655:160:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                                "typeString": "struct ZaaNetAdmin.FeeChange memory"
                              }
                            ],
                            "expression": {
                              "id": 1668,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "6639:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6650:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6639:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$_t_struct$_FeeChange_$1186_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ZaaNetAdmin.FeeChange storage ref[] storage pointer,struct ZaaNetAdmin.FeeChange storage ref)"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6639:177:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1680,
                        "nodeType": "ExpressionStatement",
                        "src": "6639:177:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1682,
                              "name": "oldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1661,
                              "src": "6851:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1683,
                              "name": "_newFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1648,
                              "src": "6859:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1684,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6875:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6879:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6875:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1681,
                            "name": "PlatformFeeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1211,
                            "src": "6832:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6832:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1687,
                        "nodeType": "EmitStatement",
                        "src": "6827:59:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1646,
                    "nodeType": "StructuredDocumentation",
                    "src": "6287:67:9",
                    "text": "@notice Emergency fee adjustment (bypasses normal restrictions)"
                  },
                  "functionSelector": "18b4f23b",
                  "id": 1689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1651,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1650,
                        "name": "onlyEmergencyOperator",
                        "nameLocations": [
                          "6425:21:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1265,
                        "src": "6425:21:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6425:21:9"
                    }
                  ],
                  "name": "emergencySetPlatformFee",
                  "nameLocation": "6368:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1648,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "6400:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "6392:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6392:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6391:24:9"
                  },
                  "returnParameters": {
                    "id": 1652,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6447:0:9"
                  },
                  "scope": 1866,
                  "src": "6359:534:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1698,
                    "nodeType": "Block",
                    "src": "7062:31:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1695,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "7079:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7079:7:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1694,
                        "id": 1697,
                        "nodeType": "Return",
                        "src": "7072:14:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1690,
                    "nodeType": "StructuredDocumentation",
                    "src": "6930:78:9",
                    "text": "@notice Expose admin address for other contracts (interface compatibility)"
                  },
                  "functionSelector": "f851a440",
                  "id": 1699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "7022:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7027:2:9"
                  },
                  "returnParameters": {
                    "id": 1694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1693,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1699,
                        "src": "7053:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7053:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7052:9:9"
                  },
                  "scope": 1866,
                  "src": "7013:80:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1709,
                    "nodeType": "Block",
                    "src": "7206:34:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1707,
                          "name": "feeHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "7223:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1706,
                        "id": 1708,
                        "nodeType": "Return",
                        "src": "7216:17:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1700,
                    "nodeType": "StructuredDocumentation",
                    "src": "7099:34:9",
                    "text": "@notice Get fee change history"
                  },
                  "functionSelector": "5707ed45",
                  "id": 1710,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeHistory",
                  "nameLocation": "7147:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7160:2:9"
                  },
                  "returnParameters": {
                    "id": 1706,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1705,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1710,
                        "src": "7186:18:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1703,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1702,
                              "name": "FeeChange",
                              "nameLocations": [
                                "7186:9:9"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1186,
                              "src": "7186:9:9"
                            },
                            "referencedDeclaration": 1186,
                            "src": "7186:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FeeChange_$1186_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.FeeChange"
                            }
                          },
                          "id": 1704,
                          "nodeType": "ArrayTypeName",
                          "src": "7186:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7185:20:9"
                  },
                  "scope": 1866,
                  "src": "7138:102:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1720,
                    "nodeType": "Block",
                    "src": "7368:39:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1718,
                          "name": "treasuryHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "7385:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1717,
                        "id": 1719,
                        "nodeType": "Return",
                        "src": "7378:22:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1711,
                    "nodeType": "StructuredDocumentation",
                    "src": "7246:39:9",
                    "text": "@notice Get treasury change history"
                  },
                  "functionSelector": "492adaa8",
                  "id": 1721,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTreasuryHistory",
                  "nameLocation": "7299:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1712,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7317:2:9"
                  },
                  "returnParameters": {
                    "id": 1717,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1716,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1721,
                        "src": "7343:23:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1714,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1713,
                              "name": "TreasuryChange",
                              "nameLocations": [
                                "7343:14:9"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1199,
                              "src": "7343:14:9"
                            },
                            "referencedDeclaration": 1199,
                            "src": "7343:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TreasuryChange_$1199_storage_ptr",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange"
                            }
                          },
                          "id": 1715,
                          "nodeType": "ArrayTypeName",
                          "src": "7343:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7342:25:9"
                  },
                  "scope": 1866,
                  "src": "7290:117:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1731,
                    "nodeType": "Block",
                    "src": "7562:86:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1727,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "7579:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7600:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "7579:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1726,
                        "id": 1730,
                        "nodeType": "Return",
                        "src": "7572:31:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1722,
                    "nodeType": "StructuredDocumentation",
                    "src": "7413:75:9",
                    "text": "@notice Get current fee in basis points (for more precise calculations)"
                  },
                  "functionSelector": "7a9b93c6",
                  "id": 1732,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlatformFeeBasisPoints",
                  "nameLocation": "7502:25:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7527:2:9"
                  },
                  "returnParameters": {
                    "id": 1726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1725,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1732,
                        "src": "7553:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1724,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7553:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7552:9:9"
                  },
                  "scope": 1866,
                  "src": "7493:155:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1747,
                    "nodeType": "Block",
                    "src": "7790:59:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1740,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1735,
                                  "src": "7808:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1741,
                                  "name": "platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "7817:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7808:27:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1743,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7807:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7839:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "7807:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1739,
                        "id": 1746,
                        "nodeType": "Return",
                        "src": "7800:42:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1733,
                    "nodeType": "StructuredDocumentation",
                    "src": "7654:53:9",
                    "text": "@notice Calculate platform fee for a given amount"
                  },
                  "functionSelector": "0cbab4f7",
                  "id": 1748,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePlatformFee",
                  "nameLocation": "7721:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1736,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1735,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7750:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1748,
                        "src": "7742:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1734,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7742:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7741:16:9"
                  },
                  "returnParameters": {
                    "id": 1739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1738,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1748,
                        "src": "7781:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7781:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7780:9:9"
                  },
                  "scope": 1866,
                  "src": "7712:137:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1784,
                    "nodeType": "Block",
                    "src": "8108:232:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1762,
                            "name": "totalFeeChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "8118:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1763,
                              "name": "feeHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "8136:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                              }
                            },
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8147:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8136:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8118:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1766,
                        "nodeType": "ExpressionStatement",
                        "src": "8118:35:9"
                      },
                      {
                        "expression": {
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1767,
                            "name": "totalTreasuryChanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1754,
                            "src": "8163:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1768,
                              "name": "treasuryHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "8186:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                                "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                              }
                            },
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8202:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8186:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8163:45:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1771,
                        "nodeType": "ExpressionStatement",
                        "src": "8163:45:9"
                      },
                      {
                        "expression": {
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1772,
                            "name": "isEmergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1756,
                            "src": "8218:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1773,
                            "name": "emergencyMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "8236:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8218:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1775,
                        "nodeType": "ExpressionStatement",
                        "src": "8218:31:9"
                      },
                      {
                        "expression": {
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1776,
                            "name": "currentFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1758,
                            "src": "8259:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1777,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "8272:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8259:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "8259:31:9"
                      },
                      {
                        "expression": {
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1780,
                            "name": "currentTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "8300:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1781,
                            "name": "treasuryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "8318:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8300:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "8300:33:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1749,
                    "nodeType": "StructuredDocumentation",
                    "src": "7855:32:9",
                    "text": "@notice Get admin statistics"
                  },
                  "functionSelector": "c116d936",
                  "id": 1785,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdminStats",
                  "nameLocation": "7901:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7914:2:9"
                  },
                  "returnParameters": {
                    "id": 1761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1752,
                        "mutability": "mutable",
                        "name": "totalFeeChanges",
                        "nameLocation": "7957:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "7949:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1751,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7949:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1754,
                        "mutability": "mutable",
                        "name": "totalTreasuryChanges",
                        "nameLocation": "7990:20:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "7982:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1753,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7982:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1756,
                        "mutability": "mutable",
                        "name": "isEmergencyMode",
                        "nameLocation": "8025:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "8020:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8020:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1758,
                        "mutability": "mutable",
                        "name": "currentFee",
                        "nameLocation": "8058:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "8050:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1757,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8050:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1760,
                        "mutability": "mutable",
                        "name": "currentTreasury",
                        "nameLocation": "8086:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "8078:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8078:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7939:168:9"
                  },
                  "scope": 1866,
                  "src": "7892:448:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1797,
                    "nodeType": "Block",
                    "src": "8477:52:9",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1793,
                            "name": "emergencyOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "8494:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1795,
                          "indexExpression": {
                            "id": 1794,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "8513:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8494:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1792,
                        "id": 1796,
                        "nodeType": "Return",
                        "src": "8487:35:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1786,
                    "nodeType": "StructuredDocumentation",
                    "src": "8346:50:9",
                    "text": "@notice Check if address is emergency operator"
                  },
                  "functionSelector": "a10eb354",
                  "id": 1798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmergencyOperator",
                  "nameLocation": "8410:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "8438:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1798,
                        "src": "8430:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8430:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8429:18:9"
                  },
                  "returnParameters": {
                    "id": 1792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1791,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1798,
                        "src": "8471:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1790,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8471:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8470:6:9"
                  },
                  "scope": 1866,
                  "src": "8401:128:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1820,
                    "nodeType": "Block",
                    "src": "8652:124:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1806,
                                  "name": "feeHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "8670:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8681:6:9",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8670:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8690:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8670:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20666565206368616e676573207265636f72646564",
                              "id": 1810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8693:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              },
                              "value": "No fee changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc8db7d8e1ea43532de30b244d617a8938afdef51027bcacf4eb88002a8b30fe",
                                "typeString": "literal_string \"No fee changes recorded\""
                              }
                            ],
                            "id": 1805,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8662:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8662:57:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1812,
                        "nodeType": "ExpressionStatement",
                        "src": "8662:57:9"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1813,
                            "name": "feeHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "8736:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                            }
                          },
                          "id": 1818,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1814,
                                "name": "feeHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "8747:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_FeeChange_$1186_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.FeeChange storage ref[] storage ref"
                                }
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8758:6:9",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8747:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8767:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8747:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8736:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1186_storage",
                            "typeString": "struct ZaaNetAdmin.FeeChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1804,
                        "id": 1819,
                        "nodeType": "Return",
                        "src": "8729:40:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1799,
                    "nodeType": "StructuredDocumentation",
                    "src": "8535:41:9",
                    "text": "@notice Get latest fee change details"
                  },
                  "functionSelector": "5071f27b",
                  "id": 1821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestFeeChange",
                  "nameLocation": "8590:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1800,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8608:2:9"
                  },
                  "returnParameters": {
                    "id": 1804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1821,
                        "src": "8634:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeChange_$1186_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.FeeChange"
                        },
                        "typeName": {
                          "id": 1802,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1801,
                            "name": "FeeChange",
                            "nameLocations": [
                              "8634:9:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1186,
                            "src": "8634:9:9"
                          },
                          "referencedDeclaration": 1186,
                          "src": "8634:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeChange_$1186_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.FeeChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8633:18:9"
                  },
                  "scope": 1866,
                  "src": "8581:195:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1843,
                    "nodeType": "Block",
                    "src": "8914:144:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1829,
                                  "name": "treasuryHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "8932:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                                    "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                  }
                                },
                                "id": 1830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8948:6:9",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8932:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8957:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8932:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207472656173757279206368616e676573207265636f72646564",
                              "id": 1833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8960:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              },
                              "value": "No treasury changes recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4e47ca2bca752e588b170d4c5b1a1d7e303331d2c70d184100b710867b7893e3",
                                "typeString": "literal_string \"No treasury changes recorded\""
                              }
                            ],
                            "id": 1828,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8924:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8924:67:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1835,
                        "nodeType": "ExpressionStatement",
                        "src": "8924:67:9"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1836,
                            "name": "treasuryHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "9008:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                              "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                            }
                          },
                          "id": 1841,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1837,
                                "name": "treasuryHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "9024:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TreasuryChange_$1199_storage_$dyn_storage",
                                  "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref[] storage ref"
                                }
                              },
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9040:6:9",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9024:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9049:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9024:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9008:43:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1199_storage",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange storage ref"
                          }
                        },
                        "functionReturnParameters": 1827,
                        "id": 1842,
                        "nodeType": "Return",
                        "src": "9001:50:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1822,
                    "nodeType": "StructuredDocumentation",
                    "src": "8782:46:9",
                    "text": "@notice Get latest treasury change details"
                  },
                  "functionSelector": "4863687e",
                  "id": 1844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestTreasuryChange",
                  "nameLocation": "8842:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8865:2:9"
                  },
                  "returnParameters": {
                    "id": 1827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1826,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1844,
                        "src": "8891:21:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TreasuryChange_$1199_memory_ptr",
                          "typeString": "struct ZaaNetAdmin.TreasuryChange"
                        },
                        "typeName": {
                          "id": 1825,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1824,
                            "name": "TreasuryChange",
                            "nameLocations": [
                              "8891:14:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1199,
                            "src": "8891:14:9"
                          },
                          "referencedDeclaration": 1199,
                          "src": "8891:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TreasuryChange_$1199_storage_ptr",
                            "typeString": "struct ZaaNetAdmin.TreasuryChange"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8890:23:9"
                  },
                  "scope": 1866,
                  "src": "8833:225:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1852,
                    "nodeType": "Block",
                    "src": "9262:39:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1850,
                          "name": "treasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1162,
                          "src": "9279:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1849,
                        "id": 1851,
                        "nodeType": "Return",
                        "src": "9272:22:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1845,
                    "nodeType": "StructuredDocumentation",
                    "src": "9130:75:9",
                    "text": "@notice Alternative name for treasury address (interface compatibility)"
                  },
                  "functionSelector": "61d027b3",
                  "id": 1853,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasury",
                  "nameLocation": "9219:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9227:2:9"
                  },
                  "returnParameters": {
                    "id": 1849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1848,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1853,
                        "src": "9253:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9253:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9252:9:9"
                  },
                  "scope": 1866,
                  "src": "9210:91:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    983
                  ],
                  "body": {
                    "id": 1864,
                    "nodeType": "Block",
                    "src": "9431:38:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1860,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "9448:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ZaaNetAdmin_$1866_$",
                                "typeString": "type(contract super ZaaNetAdmin)"
                              }
                            },
                            "id": 1861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9454:6:9",
                            "memberName": "paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 983,
                            "src": "9448:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9448:14:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1859,
                        "id": 1863,
                        "nodeType": "Return",
                        "src": "9441:21:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1854,
                    "nodeType": "StructuredDocumentation",
                    "src": "9307:65:9",
                    "text": "@notice Check if contract is paused (interface compatibility)"
                  },
                  "functionSelector": "5c975abb",
                  "id": 1865,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "9386:6:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1856,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "9407:8:9"
                  },
                  "parameters": {
                    "id": 1855,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9392:2:9"
                  },
                  "returnParameters": {
                    "id": 1859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1865,
                        "src": "9425:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9425:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9424:6:9"
                  },
                  "scope": 1866,
                  "src": "9377:92:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1867,
              "src": "255:9216:9",
              "usedErrors": [
                13,
                18,
                955,
                958,
                1055
              ],
              "usedEvents": [
                24,
                947,
                952,
                1211,
                1219,
                1223,
                1227,
                1233,
                1241,
                1247
              ]
            }
          ],
          "src": "32:9439:9"
        },
        "id": 9
      },
      "contracts/ZaaNetNetwork.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetNetwork.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IZaaNetNetwork": [
              4099
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              1041
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetNetwork": [
              2618
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 2619,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1868,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1869,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2619,
              "sourceUnit": 148,
              "src": "58:52:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1870,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2619,
              "sourceUnit": 1042,
              "src": "111:52:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1871,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2619,
              "sourceUnit": 1111,
              "src": "164:59:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 1872,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2619,
              "sourceUnit": 3797,
              "src": "224:29:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interface/IZaaNetNetwork.sol",
              "file": "./interface/IZaaNetNetwork.sol",
              "id": 1873,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2619,
              "sourceUnit": 4100,
              "src": "254:40:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1874,
                    "name": "Ownable",
                    "nameLocations": [
                      "322:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "322:7:10"
                  },
                  "id": 1875,
                  "nodeType": "InheritanceSpecifier",
                  "src": "322:7:10"
                },
                {
                  "baseName": {
                    "id": 1876,
                    "name": "Pausable",
                    "nameLocations": [
                      "331:8:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1041,
                    "src": "331:8:10"
                  },
                  "id": 1877,
                  "nodeType": "InheritanceSpecifier",
                  "src": "331:8:10"
                },
                {
                  "baseName": {
                    "id": 1878,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "341:15:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "341:15:10"
                  },
                  "id": 1879,
                  "nodeType": "InheritanceSpecifier",
                  "src": "341:15:10"
                },
                {
                  "baseName": {
                    "id": 1880,
                    "name": "IZaaNetNetwork",
                    "nameLocations": [
                      "358:14:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4099,
                    "src": "358:14:10"
                  },
                  "id": 1881,
                  "nodeType": "InheritanceSpecifier",
                  "src": "358:14:10"
                }
              ],
              "canonicalName": "ZaaNetNetwork",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2618,
              "linearizedBaseContracts": [
                2618,
                4099,
                1110,
                1041,
                147,
                933
              ],
              "name": "ZaaNetNetwork",
              "nameLocation": "305:13:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "400:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "379:36:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 1883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1882,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "379:13:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3796,
                      "src": "379:13:10"
                    },
                    "referencedDeclaration": 3796,
                    "src": "379:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "09115e97",
                  "id": 1887,
                  "mutability": "constant",
                  "name": "MIN_PRICE_PER_SESSION",
                  "nameLocation": "478:21:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "454:52:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32653137",
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "502:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "value": "2e17"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d4f38d04",
                  "id": 1890,
                  "mutability": "constant",
                  "name": "MAX_PRICE_PER_SESSION",
                  "nameLocation": "577:21:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "553:52:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35653138",
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "601:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5000000000000000000_by_1",
                      "typeString": "int_const 5000000000000000000"
                    },
                    "value": "5e18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e67d86f1",
                  "id": 1893,
                  "mutability": "constant",
                  "name": "MAX_MONGO_DATA_LENGTH",
                  "nameLocation": "674:21:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "650:51:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "698:3:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eb2931b7",
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "isHost",
                  "nameLocation": "772:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "740:38:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1896,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1894,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "748:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "740:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1895,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "759:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "hostNetworks",
                  "nameLocation": "822:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "784:50:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 1901,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1898,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "792:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "784:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1899,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1900,
                      "nodeType": "ArrayTypeName",
                      "src": "803:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "43355214",
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "networkToHost",
                  "nameLocation": "875:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "840:48:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 1905,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1903,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "848:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "840:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1904,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "859:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7f6e8cbf",
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "lastRegistrationTime",
                  "nameLocation": "972:20:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "937:55:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1909,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1907,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "945:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "937:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1908,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "956:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b0ff6383",
                  "id": 1913,
                  "mutability": "constant",
                  "name": "REGISTRATION_COOLDOWN",
                  "nameLocation": "1022:21:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "998:57:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1046:9:10",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1938,
                    "nodeType": "Block",
                    "src": "1120:185:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1923,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1915,
                                "src": "1151:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1179:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1171:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1924,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1171:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1171:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1151:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073746f7261676520636f6e74726163742061646472657373",
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1195:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              },
                              "value": "Invalid storage contract address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a830ce972982ee3de82e9ad79878c0e45747d502806a2b710d19be6639ee91b",
                                "typeString": "literal_string \"Invalid storage contract address\""
                              }
                            ],
                            "id": 1922,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1130:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1130:109:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1931,
                        "nodeType": "ExpressionStatement",
                        "src": "1130:109:10"
                      },
                      {
                        "expression": {
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1932,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1884,
                            "src": "1249:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1934,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1915,
                                "src": "1281:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1933,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3796,
                              "src": "1267:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 1935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1267:31:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "1249:49:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 1937,
                        "nodeType": "ExpressionStatement",
                        "src": "1249:49:10"
                      }
                    ]
                  },
                  "id": 1939,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1918,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1108:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1112:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1108:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1920,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1917,
                        "name": "Ownable",
                        "nameLocations": [
                          "1100:7:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1100:7:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1100:19:10"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "1082:16:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1939,
                        "src": "1074:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1073:26:10"
                  },
                  "returnParameters": {
                    "id": 1921,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1120:0:10"
                  },
                  "scope": 2618,
                  "src": "1062:243:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4062
                  ],
                  "body": {
                    "id": 2071,
                    "nodeType": "Block",
                    "src": "1534:1465:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1955,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1565:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1571:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1565:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1957,
                                    "name": "lastRegistrationTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1910,
                                    "src": "1600:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1960,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1958,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1621:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1625:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1621:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1600:32:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1961,
                                  "name": "REGISTRATION_COOLDOWN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1913,
                                  "src": "1635:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1600:56:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1565:91:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526567697374726174696f6e20636f6f6c646f776e20616374697665",
                              "id": 1964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1670:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              },
                              "value": "Registration cooldown active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3928d3829a766243016fa669b9ece86bf23c83eaec126e54d328bddced3f2cb",
                                "typeString": "literal_string \"Registration cooldown active\""
                              }
                            ],
                            "id": 1954,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1544:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:166:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1966,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:166:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1968,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1942,
                                  "src": "1741:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1969,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1887,
                                  "src": "1758:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1741:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1971,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1942,
                                  "src": "1799:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1972,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1890,
                                  "src": "1816:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1799:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1741:96:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 1975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1851:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 1967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1720:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1720:169:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1977,
                        "nodeType": "ExpressionStatement",
                        "src": "1720:169:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1981,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1944,
                                        "src": "1926:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 1980,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1920:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1979,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1920:5:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1920:19:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1940:6:10",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1920:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1949:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1920:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1988,
                                        "name": "_mongoDataId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1944,
                                        "src": "1976:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 1987,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1970:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1986,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1970:5:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1970:19:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1990:6:10",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1970:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1991,
                                  "name": "MAX_MONGO_DATA_LENGTH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1893,
                                  "src": "2000:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1970:51:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1920:101:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964204d6f6e676f446174614944206c656e677468",
                              "id": 1994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2035:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              },
                              "value": "Invalid MongoDataID length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_325aca93e8a7c7b2b7298dc6a52067a69714ff93e8ce01e9ad81313b11951b0c",
                                "typeString": "literal_string \"Invalid MongoDataID length\""
                              }
                            ],
                            "id": 1978,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1899:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1899:174:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1996,
                        "nodeType": "ExpressionStatement",
                        "src": "1899:174:10"
                      },
                      {
                        "assignments": [
                          1998
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1998,
                            "mutability": "mutable",
                            "name": "networkId",
                            "nameLocation": "2133:9:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2071,
                            "src": "2125:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1997,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2125:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2002,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1999,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "2145:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2161:18:10",
                            "memberName": "incrementNetworkId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3301,
                            "src": "2145:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2145:36:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2125:56:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2006,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "2281:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2009,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1998,
                                  "src": "2348:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2010,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2388:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2392:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2388:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2012,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1942,
                                  "src": "2433:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2013,
                                  "name": "_mongoDataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1944,
                                  "src": "2477:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2014,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1946,
                                  "src": "2517:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2015,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2555:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2561:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2555:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2017,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2599:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2605:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2599:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2007,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3796,
                                  "src": "2304:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2318:7:10",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3096,
                                "src": "2304:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$3096_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2344:2:10",
                                "2375:11:10",
                                "2416:15:10",
                                "2464:11:10",
                                "2507:8:10",
                                "2544:9:10",
                                "2588:9:10"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2304:325:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2003,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "2241:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2257:10:10",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3416,
                            "src": "2241:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$3096_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2241:398:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2021,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:398:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2027,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "2680:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2022,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1902,
                                "src": "2650:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2025,
                              "indexExpression": {
                                "expression": {
                                  "id": 2023,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2663:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2667:6:10",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2663:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2650:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2675:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2650:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2650:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2029,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:40:10"
                      },
                      {
                        "expression": {
                          "id": 2035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2030,
                              "name": "networkToHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "2700:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 2032,
                            "indexExpression": {
                              "id": 2031,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "2714:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2700:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2033,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2727:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2731:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2727:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2700:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2036,
                        "nodeType": "ExpressionStatement",
                        "src": "2700:37:10"
                      },
                      {
                        "expression": {
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2037,
                              "name": "lastRegistrationTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "2747:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2040,
                            "indexExpression": {
                              "expression": {
                                "id": 2038,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2768:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2772:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2768:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2747:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2041,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2782:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2788:9:10",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2782:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2747:50:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2044,
                        "nodeType": "ExpressionStatement",
                        "src": "2747:50:10"
                      },
                      {
                        "condition": {
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2812:19:10",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2045,
                              "name": "isHost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1897,
                              "src": "2813:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2048,
                            "indexExpression": {
                              "expression": {
                                "id": 2046,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2820:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2824:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2820:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2813:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2063,
                        "nodeType": "IfStatement",
                        "src": "2808:115:10",
                        "trueBody": {
                          "id": 2062,
                          "nodeType": "Block",
                          "src": "2833:90:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 2055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2050,
                                    "name": "isHost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1897,
                                    "src": "2847:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2053,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2051,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2854:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2858:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2854:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2847:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2868:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2847:25:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2056,
                              "nodeType": "ExpressionStatement",
                              "src": "2847:25:10"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2058,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2901:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2905:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2901:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2057,
                                  "name": "HostAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4036,
                                  "src": "2891:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 2060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2891:21:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2061,
                              "nodeType": "EmitStatement",
                              "src": "2886:26:10"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2065,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "2956:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2066,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2967:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2971:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2967:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2068,
                              "name": "_mongoDataId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1944,
                              "src": "2979:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2064,
                            "name": "NetworkRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4020,
                            "src": "2938:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,address,string memory)"
                            }
                          },
                          "id": 2069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2938:54:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2070,
                        "nodeType": "EmitStatement",
                        "src": "2933:59:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1940,
                    "nodeType": "StructuredDocumentation",
                    "src": "1311:51:10",
                    "text": "@notice Register a new network with mongoDataID"
                  },
                  "functionSelector": "900e41b1",
                  "id": 2072,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1950,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1949,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1507:13:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "1507:13:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1507:13:10"
                    },
                    {
                      "id": 1952,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1951,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1521:12:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "1521:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1521:12:10"
                    }
                  ],
                  "name": "registerNetwork",
                  "nameLocation": "1376:15:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1948,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1498:8:10"
                  },
                  "parameters": {
                    "id": 1947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1942,
                        "mutability": "mutable",
                        "name": "_pricePerHour",
                        "nameLocation": "1409:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "1401:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1401:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1944,
                        "mutability": "mutable",
                        "name": "_mongoDataId",
                        "nameLocation": "1446:12:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "1432:26:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1943,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1946,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "1473:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "1468:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1945,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1468:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1391:97:10"
                  },
                  "returnParameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1534:0:10"
                  },
                  "scope": 2618,
                  "src": "1367:1632:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2173,
                    "nodeType": "Block",
                    "src": "3211:1442:10",
                    "statements": [
                      {
                        "assignments": [
                          2088
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2088,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "3250:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2173,
                            "src": "3221:36:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2087,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2086,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "3221:13:10",
                                  "3235:7:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3096,
                                "src": "3221:21:10"
                              },
                              "referencedDeclaration": 3096,
                              "src": "3221:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2093,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2091,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "3300:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2089,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "3260:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3276:10:10",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "3260:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3260:60:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3221:99:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2095,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2088,
                                  "src": "3338:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2096,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3346:11:10",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3085,
                                "src": "3338:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2097,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2081,
                                "src": "3361:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3338:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e20757064617465",
                              "id": 2099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3369:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              },
                              "value": "Only host can update"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dc9bc8e6ce8339eecedb81ad5feb02e8994fb2c38504449806f1c2f5a392ba8c",
                                "typeString": "literal_string \"Only host can update\""
                              }
                            ],
                            "id": 2094,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3330:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3330:62:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2101,
                        "nodeType": "ExpressionStatement",
                        "src": "3330:62:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2103,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2077,
                                  "src": "3423:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2104,
                                  "name": "MIN_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1887,
                                  "src": "3440:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3423:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2106,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2077,
                                  "src": "3481:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2107,
                                  "name": "MAX_PRICE_PER_SESSION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1890,
                                  "src": "3498:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3481:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3423:96:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206f7574206f6620616c6c6f7765642072616e6765",
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3533:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              },
                              "value": "Price out of allowed range"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bfd36a2c6a76547d946d173bdd7c20cdf31a29df602bd5d8efe2a922d73883e1",
                                "typeString": "literal_string \"Price out of allowed range\""
                              }
                            ],
                            "id": 2102,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3402:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3402:169:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2112,
                        "nodeType": "ExpressionStatement",
                        "src": "3402:169:10"
                      },
                      {
                        "assignments": [
                          2114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2114,
                            "mutability": "mutable",
                            "name": "oldPrice",
                            "nameLocation": "3629:8:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2173,
                            "src": "3621:16:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2113,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3621:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2117,
                        "initialValue": {
                          "expression": {
                            "id": 2115,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2088,
                            "src": "3640:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3648:15:10",
                          "memberName": "pricePerSession",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3087,
                          "src": "3640:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3621:42:10"
                      },
                      {
                        "assignments": [
                          2119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2119,
                            "mutability": "mutable",
                            "name": "oldStatus",
                            "nameLocation": "3678:9:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2173,
                            "src": "3673:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2118,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3673:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2122,
                        "initialValue": {
                          "expression": {
                            "id": 2120,
                            "name": "network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2088,
                            "src": "3690:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3698:8:10",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3091,
                          "src": "3690:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3673:33:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2126,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "3757:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2129,
                                  "name": "_networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2075,
                                  "src": "3825:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2130,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2081,
                                  "src": "3866:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2131,
                                  "name": "_pricePerHour",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2077,
                                  "src": "3907:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2132,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2088,
                                    "src": "3951:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2133,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3959:11:10",
                                  "memberName": "mongoDataId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3089,
                                  "src": "3951:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2134,
                                  "name": "_isActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2079,
                                  "src": "4024:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2135,
                                    "name": "network",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2088,
                                    "src": "4062:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory"
                                    }
                                  },
                                  "id": 2136,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4070:9:10",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3093,
                                  "src": "4062:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2137,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4139:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4145:9:10",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4139:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2127,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3796,
                                  "src": "3781:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3795:7:10",
                                "memberName": "Network",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3096,
                                "src": "3781:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Network_$3096_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                                }
                              },
                              "id": 2139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3821:2:10",
                                "3853:11:10",
                                "3890:15:10",
                                "3938:11:10",
                                "4014:8:10",
                                "4051:9:10",
                                "4128:9:10"
                              ],
                              "names": [
                                "id",
                                "hostAddress",
                                "pricePerSession",
                                "mongoDataId",
                                "isActive",
                                "createdAt",
                                "updatedAt"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "3781:388:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory"
                              }
                            ],
                            "expression": {
                              "id": 2123,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "3717:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3733:10:10",
                            "memberName": "setNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3416,
                            "src": "3717:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Network_$3096_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Network memory) external"
                            }
                          },
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3717:462:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2141,
                        "nodeType": "ExpressionStatement",
                        "src": "3717:462:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2142,
                            "name": "oldPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "4246:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2143,
                            "name": "_pricePerHour",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2077,
                            "src": "4258:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4246:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2152,
                        "nodeType": "IfStatement",
                        "src": "4242:117:10",
                        "trueBody": {
                          "id": 2151,
                          "nodeType": "Block",
                          "src": "4273:86:10",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2146,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2075,
                                    "src": "4312:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2147,
                                    "name": "oldPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2114,
                                    "src": "4324:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2148,
                                    "name": "_pricePerHour",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2077,
                                    "src": "4334:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2145,
                                  "name": "NetworkPriceUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4044,
                                  "src": "4292:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4292:56:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2150,
                              "nodeType": "EmitStatement",
                              "src": "4287:61:10"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2153,
                            "name": "oldStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "4372:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2154,
                            "name": "_isActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2079,
                            "src": "4385:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4372:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2163,
                        "nodeType": "IfStatement",
                        "src": "4368:112:10",
                        "trueBody": {
                          "id": 2162,
                          "nodeType": "Block",
                          "src": "4396:84:10",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2157,
                                    "name": "_networkId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2075,
                                    "src": "4436:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2158,
                                    "name": "oldStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2119,
                                    "src": "4448:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 2159,
                                    "name": "_isActive",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2079,
                                    "src": "4459:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2156,
                                  "name": "NetworkStatusChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4052,
                                  "src": "4415:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
                                    "typeString": "function (uint256,bool,bool)"
                                  }
                                },
                                "id": 2160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4415:54:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2161,
                              "nodeType": "EmitStatement",
                              "src": "4410:59:10"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2165,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "4523:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2166,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2081,
                              "src": "4547:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2167,
                              "name": "_pricePerHour",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2077,
                              "src": "4567:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2168,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2088,
                                "src": "4594:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2169,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4602:11:10",
                              "memberName": "mongoDataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3089,
                              "src": "4594:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2170,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2079,
                              "src": "4627:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2164,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4032,
                            "src": "4495:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,uint256,string memory,bool)"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4495:151:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2172,
                        "nodeType": "EmitStatement",
                        "src": "4490:156:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2073,
                    "nodeType": "StructuredDocumentation",
                    "src": "3005:55:10",
                    "text": "@notice Internal function to update network details"
                  },
                  "id": 2174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateNetwork",
                  "nameLocation": "3074:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2075,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "3106:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2174,
                        "src": "3098:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3098:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2077,
                        "mutability": "mutable",
                        "name": "_pricePerHour",
                        "nameLocation": "3134:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2174,
                        "src": "3126:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2076,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2079,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "3162:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2174,
                        "src": "3157:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2078,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3157:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2081,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3189:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2174,
                        "src": "3181:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3181:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3088:113:10"
                  },
                  "returnParameters": {
                    "id": 2083,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3211:0:10"
                  },
                  "scope": 2618,
                  "src": "3065:1588:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    4072
                  ],
                  "body": {
                    "id": 2197,
                    "nodeType": "Block",
                    "src": "4873:81:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2190,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2177,
                              "src": "4898:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2191,
                              "name": "_pricePerHour",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2179,
                              "src": "4910:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2192,
                              "name": "_isActive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2181,
                              "src": "4925:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4936:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4940:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4936:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2189,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "4883:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4883:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "4883:64:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2175,
                    "nodeType": "StructuredDocumentation",
                    "src": "4659:52:10",
                    "text": "@notice Update existing network with new details"
                  },
                  "functionSelector": "1b63fe67",
                  "id": 2198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2185,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2184,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "4846:13:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "4846:13:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4846:13:10"
                    },
                    {
                      "id": 2187,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2186,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4860:12:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "4860:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4860:12:10"
                    }
                  ],
                  "name": "updateNetwork",
                  "nameLocation": "4725:13:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2183,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4837:8:10"
                  },
                  "parameters": {
                    "id": 2182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2177,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "4756:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2198,
                        "src": "4748:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4748:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2179,
                        "mutability": "mutable",
                        "name": "_pricePerHour",
                        "nameLocation": "4784:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2198,
                        "src": "4776:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4776:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2181,
                        "mutability": "mutable",
                        "name": "_isActive",
                        "nameLocation": "4812:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2198,
                        "src": "4807:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2180,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4807:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4738:89:10"
                  },
                  "returnParameters": {
                    "id": 2188,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4873:0:10"
                  },
                  "scope": 2618,
                  "src": "4716:238:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2240,
                    "nodeType": "Block",
                    "src": "5081:340:10",
                    "statements": [
                      {
                        "assignments": [
                          2210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2210,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "5120:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2240,
                            "src": "5091:36:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2209,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2208,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "5091:13:10",
                                  "5105:7:10"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3096,
                                "src": "5091:21:10"
                              },
                              "referencedDeclaration": 3096,
                              "src": "5091:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2215,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2213,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "5170:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2211,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "5130:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5146:10:10",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "5130:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5130:60:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5091:99:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2217,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2210,
                                  "src": "5208:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5216:11:10",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3085,
                                "src": "5208:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2219,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5231:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5235:6:10",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5231:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5208:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920686f73742063616e2064656163746976617465",
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5243:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              },
                              "value": "Only host can deactivate"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2336c29a223fb08cb5cc0d43975e601887f454478cfb59ae5ff308746390bb36",
                                "typeString": "literal_string \"Only host can deactivate\""
                              }
                            ],
                            "id": 2216,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5200:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5200:70:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "ExpressionStatement",
                        "src": "5200:70:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2226,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2210,
                                "src": "5288:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5296:8:10",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3091,
                              "src": "5288:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20616c726561647920696e616374697665",
                              "id": 2228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5306:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              },
                              "value": "Network already inactive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3414eedb2ccbca8bce504953e4d1eced8c7392291620164aa9c8b9c994f60537",
                                "typeString": "literal_string \"Network already inactive\""
                              }
                            ],
                            "id": 2225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5280:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5280:53:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2230,
                        "nodeType": "ExpressionStatement",
                        "src": "5280:53:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2232,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "5359:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2233,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2210,
                                "src": "5371:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5379:15:10",
                              "memberName": "pricePerSession",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3087,
                              "src": "5371:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 2235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5396:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 2236,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5403:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5407:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5403:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2231,
                            "name": "_updateNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "5344:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,bool,address)"
                            }
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5344:70:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2239,
                        "nodeType": "ExpressionStatement",
                        "src": "5344:70:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2199,
                    "nodeType": "StructuredDocumentation",
                    "src": "4960:46:10",
                    "text": "@notice Deactivate a network (soft delete)"
                  },
                  "functionSelector": "4b9791e8",
                  "id": 2241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2204,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2203,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "5067:13:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "5067:13:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5067:13:10"
                    }
                  ],
                  "name": "deactivateNetwork",
                  "nameLocation": "5020:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2201,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "5046:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2241,
                        "src": "5038:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5038:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5037:20:10"
                  },
                  "returnParameters": {
                    "id": 2205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5081:0:10"
                  },
                  "scope": 2618,
                  "src": "5011:410:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4081
                  ],
                  "body": {
                    "id": 2256,
                    "nodeType": "Block",
                    "src": "5607:62:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2253,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2244,
                              "src": "5651:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2251,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "5624:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5640:10:10",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "5624:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5624:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "functionReturnParameters": 2250,
                        "id": 2255,
                        "nodeType": "Return",
                        "src": "5617:45:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2242,
                    "nodeType": "StructuredDocumentation",
                    "src": "5427:49:10",
                    "text": "@notice Get full network details from storage"
                  },
                  "functionSelector": "cd83fb9a",
                  "id": 2257,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostedNetworkById",
                  "nameLocation": "5490:20:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2246,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5559:8:10"
                  },
                  "parameters": {
                    "id": 2245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2244,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "5528:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2257,
                        "src": "5520:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5520:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5510:34:10"
                  },
                  "returnParameters": {
                    "id": 2250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2249,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2257,
                        "src": "5577:28:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 2248,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2247,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "5577:13:10",
                              "5591:7:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "5577:21:10"
                          },
                          "referencedDeclaration": 3096,
                          "src": "5577:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5576:30:10"
                  },
                  "scope": 2618,
                  "src": "5481:188:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4090
                  ],
                  "body": {
                    "id": 2271,
                    "nodeType": "Block",
                    "src": "5842:49:10",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2267,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1902,
                            "src": "5859:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2269,
                          "indexExpression": {
                            "id": 2268,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "5872:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5859:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2266,
                        "id": 2270,
                        "nodeType": "Return",
                        "src": "5852:32:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2258,
                    "nodeType": "StructuredDocumentation",
                    "src": "5675:52:10",
                    "text": "@notice Get all network IDs registered by a host"
                  },
                  "functionSelector": "79f0dc57",
                  "id": 2272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "5741:15:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2262,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5806:8:10"
                  },
                  "parameters": {
                    "id": 2261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2260,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5774:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2272,
                        "src": "5766:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5766:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5756:35:10"
                  },
                  "returnParameters": {
                    "id": 2266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2265,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2272,
                        "src": "5824:16:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2263,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5824:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2264,
                          "nodeType": "ArrayTypeName",
                          "src": "5824:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5823:18:10"
                  },
                  "scope": 2618,
                  "src": "5732:159:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2384,
                    "nodeType": "Block",
                    "src": "6065:959:10",
                    "statements": [
                      {
                        "assignments": [
                          2286
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2286,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "6092:10:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2384,
                            "src": "6075:27:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2284,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6075:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2285,
                              "nodeType": "ArrayTypeName",
                              "src": "6075:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2290,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2287,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1902,
                            "src": "6105:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2289,
                          "indexExpression": {
                            "id": 2288,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "6118:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6105:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6075:55:10"
                      },
                      {
                        "assignments": [
                          2292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2292,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "6148:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2384,
                            "src": "6140:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2291,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6140:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2294,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6162:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6140:23:10"
                      },
                      {
                        "body": {
                          "id": 2325,
                          "nodeType": "Block",
                          "src": "6267:216:10",
                          "statements": [
                            {
                              "assignments": [
                                2310
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2310,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "6310:7:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2325,
                                  "src": "6281:36:10",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2309,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2308,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "6281:13:10",
                                        "6295:7:10"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3096,
                                      "src": "6281:21:10"
                                    },
                                    "referencedDeclaration": 3096,
                                    "src": "6281:21:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2317,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2313,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2286,
                                      "src": "6364:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2315,
                                    "indexExpression": {
                                      "id": 2314,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2296,
                                      "src": "6375:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6364:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2311,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1884,
                                    "src": "6320:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6336:10:10",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3436,
                                  "src": "6320:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6320:71:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6281:110:10"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2318,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "6409:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2319,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6417:8:10",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "6409:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2324,
                              "nodeType": "IfStatement",
                              "src": "6405:68:10",
                              "trueBody": {
                                "id": 2323,
                                "nodeType": "Block",
                                "src": "6427:46:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "6445:13:10",
                                      "subExpression": {
                                        "id": 2320,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2292,
                                        "src": "6445:11:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2322,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6445:13:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2299,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2296,
                            "src": "6239:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2300,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "6243:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6254:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6243:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6239:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2326,
                        "initializationExpression": {
                          "assignments": [
                            2296
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2296,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6232:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2326,
                              "src": "6224:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2295,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6224:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2298,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6236:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6224:13:10"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6262:3:10",
                            "subExpression": {
                              "id": 2303,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2296,
                              "src": "6262:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2305,
                          "nodeType": "ExpressionStatement",
                          "src": "6262:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "6219:264:10"
                      },
                      {
                        "assignments": [
                          2332
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2332,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "6585:14:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2384,
                            "src": "6542:57:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2330,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2329,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "6542:13:10",
                                    "6556:7:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "6542:21:10"
                                },
                                "referencedDeclaration": 3096,
                                "src": "6542:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2331,
                              "nodeType": "ArrayTypeName",
                              "src": "6542:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2339,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2337,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2292,
                              "src": "6630:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6602:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2334,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2333,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "6606:13:10",
                                    "6620:7:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "6606:21:10"
                                },
                                "referencedDeclaration": 3096,
                                "src": "6606:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2335,
                              "nodeType": "ArrayTypeName",
                              "src": "6606:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6602:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6542:100:10"
                      },
                      {
                        "assignments": [
                          2341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2341,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "6660:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2384,
                            "src": "6652:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2340,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6652:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2343,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6668:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6652:17:10"
                      },
                      {
                        "body": {
                          "id": 2380,
                          "nodeType": "Block",
                          "src": "6727:259:10",
                          "statements": [
                            {
                              "assignments": [
                                2359
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2359,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "6770:7:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2380,
                                  "src": "6741:36:10",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2358,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2357,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "6741:13:10",
                                        "6755:7:10"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3096,
                                      "src": "6741:21:10"
                                    },
                                    "referencedDeclaration": 3096,
                                    "src": "6741:21:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2366,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2362,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2286,
                                      "src": "6824:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2364,
                                    "indexExpression": {
                                      "id": 2363,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2345,
                                      "src": "6835:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6824:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2360,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1884,
                                    "src": "6780:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6796:10:10",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3436,
                                  "src": "6780:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6780:71:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6741:110:10"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2367,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2359,
                                  "src": "6869:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2368,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6877:8:10",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "6869:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2379,
                              "nodeType": "IfStatement",
                              "src": "6865:111:10",
                              "trueBody": {
                                "id": 2378,
                                "nodeType": "Block",
                                "src": "6887:89:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2373,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2369,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2332,
                                          "src": "6905:14:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2371,
                                        "indexExpression": {
                                          "id": 2370,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2341,
                                          "src": "6920:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6905:21:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2372,
                                        "name": "network",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2359,
                                        "src": "6929:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "6905:31:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2374,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6905:31:10"
                                  },
                                  {
                                    "expression": {
                                      "id": 2376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "6954:7:10",
                                      "subExpression": {
                                        "id": 2375,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2341,
                                        "src": "6954:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2377,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6954:7:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2348,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2345,
                            "src": "6699:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2349,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "6703:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6714:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6703:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6699:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2381,
                        "initializationExpression": {
                          "assignments": [
                            2345
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2345,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6692:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2381,
                              "src": "6684:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2344,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6684:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2347,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6696:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6684:13:10"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6722:3:10",
                            "subExpression": {
                              "id": 2352,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "6722:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2354,
                          "nodeType": "ExpressionStatement",
                          "src": "6722:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "6679:307:10"
                      },
                      {
                        "expression": {
                          "id": 2382,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "7003:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2281,
                        "id": 2383,
                        "nodeType": "Return",
                        "src": "6996:21:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2273,
                    "nodeType": "StructuredDocumentation",
                    "src": "5897:42:10",
                    "text": "@notice Get active networks for a host"
                  },
                  "functionSelector": "2b2a748c",
                  "id": 2385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveHostNetworks",
                  "nameLocation": "5953:21:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2275,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5992:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2385,
                        "src": "5984:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5984:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5974:35:10"
                  },
                  "returnParameters": {
                    "id": 2281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2385,
                        "src": "6033:30:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2278,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2277,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "6033:13:10",
                                "6047:7:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3096,
                              "src": "6033:21:10"
                            },
                            "referencedDeclaration": 3096,
                            "src": "6033:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2279,
                          "nodeType": "ArrayTypeName",
                          "src": "6033:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6032:32:10"
                  },
                  "scope": 2618,
                  "src": "5944:1080:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4098
                  ],
                  "body": {
                    "id": 2398,
                    "nodeType": "Block",
                    "src": "7203:43:10",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2394,
                            "name": "isHost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1897,
                            "src": "7220:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2396,
                          "indexExpression": {
                            "id": 2395,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "7227:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7220:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2393,
                        "id": 2397,
                        "nodeType": "Return",
                        "src": "7213:26:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2386,
                    "nodeType": "StructuredDocumentation",
                    "src": "7030:69:10",
                    "text": "@notice Public method to check if an address is a registered host"
                  },
                  "functionSelector": "867f1a09",
                  "id": 2399,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRegisteredHost",
                  "nameLocation": "7113:16:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2390,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7179:8:10"
                  },
                  "parameters": {
                    "id": 2389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2388,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "7147:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2399,
                        "src": "7139:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7139:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7129:35:10"
                  },
                  "returnParameters": {
                    "id": 2393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2392,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2399,
                        "src": "7197:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2391,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7197:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7196:6:10"
                  },
                  "scope": 2618,
                  "src": "7104:142:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2466,
                    "nodeType": "Block",
                    "src": "7512:510:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 2416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2411,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2405,
                            "src": "7522:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2412,
                                "name": "hostNetworks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1902,
                                "src": "7538:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2414,
                              "indexExpression": {
                                "id": 2413,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2402,
                                "src": "7551:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7538:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7564:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7538:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7522:48:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2417,
                        "nodeType": "ExpressionStatement",
                        "src": "7522:48:10"
                      },
                      {
                        "expression": {
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2418,
                            "name": "totalEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2409,
                            "src": "7580:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2421,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2402,
                                "src": "7628:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2419,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1884,
                                "src": "7596:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7612:15:10",
                              "memberName": "getHostEarnings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3695,
                              "src": "7596:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7596:44:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7580:60:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2424,
                        "nodeType": "ExpressionStatement",
                        "src": "7580:60:10"
                      },
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "mutability": "mutable",
                            "name": "networkIds",
                            "nameLocation": "7701:10:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2466,
                            "src": "7684:27:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2427,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7684:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2428,
                              "nodeType": "ArrayTypeName",
                              "src": "7684:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2433,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2430,
                            "name": "hostNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1902,
                            "src": "7714:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 2432,
                          "indexExpression": {
                            "id": 2431,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2402,
                            "src": "7727:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7714:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7684:55:10"
                      },
                      {
                        "body": {
                          "id": 2464,
                          "nodeType": "Block",
                          "src": "7797:219:10",
                          "statements": [
                            {
                              "assignments": [
                                2449
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2449,
                                  "mutability": "mutable",
                                  "name": "network",
                                  "nameLocation": "7840:7:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2464,
                                  "src": "7811:36:10",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network"
                                  },
                                  "typeName": {
                                    "id": 2448,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2447,
                                      "name": "ZaaNetStorage.Network",
                                      "nameLocations": [
                                        "7811:13:10",
                                        "7825:7:10"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3096,
                                      "src": "7811:21:10"
                                    },
                                    "referencedDeclaration": 3096,
                                    "src": "7811:21:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                      "typeString": "struct ZaaNetStorage.Network"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2456,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2452,
                                      "name": "networkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2429,
                                      "src": "7894:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 2454,
                                    "indexExpression": {
                                      "id": 2453,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2435,
                                      "src": "7905:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7894:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2450,
                                    "name": "storageContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1884,
                                    "src": "7850:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                      "typeString": "contract ZaaNetStorage"
                                    }
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7866:10:10",
                                  "memberName": "getNetwork",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3436,
                                  "src": "7850:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                                    "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                                  }
                                },
                                "id": 2455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7850:71:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7811:110:10"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "id": 2457,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2449,
                                  "src": "7939:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7947:8:10",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "7939:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2463,
                              "nodeType": "IfStatement",
                              "src": "7935:71:10",
                              "trueBody": {
                                "id": 2462,
                                "nodeType": "Block",
                                "src": "7957:49:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2460,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "7975:16:10",
                                      "subExpression": {
                                        "id": 2459,
                                        "name": "activeNetworks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2407,
                                        "src": "7975:14:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2461,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7975:16:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2438,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2435,
                            "src": "7769:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2439,
                              "name": "networkIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "7773:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7784:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7773:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7769:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2465,
                        "initializationExpression": {
                          "assignments": [
                            2435
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2435,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7762:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2465,
                              "src": "7754:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2434,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7754:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2437,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7766:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7754:13:10"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7792:3:10",
                            "subExpression": {
                              "id": 2442,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2435,
                              "src": "7792:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2444,
                          "nodeType": "ExpressionStatement",
                          "src": "7792:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "7749:267:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2400,
                    "nodeType": "StructuredDocumentation",
                    "src": "7252:31:10",
                    "text": "@notice Get host statistics"
                  },
                  "functionSelector": "764ac734",
                  "id": 2467,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostStats",
                  "nameLocation": "7297:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2402,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "7327:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7319:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7319:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7309:35:10"
                  },
                  "returnParameters": {
                    "id": 2410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2405,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "7413:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7405:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7405:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2407,
                        "mutability": "mutable",
                        "name": "activeNetworks",
                        "nameLocation": "7448:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7440:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7440:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2409,
                        "mutability": "mutable",
                        "name": "totalEarnings",
                        "nameLocation": "7484:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2467,
                        "src": "7476:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7476:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7391:116:10"
                  },
                  "scope": 2618,
                  "src": "7288:734:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2487,
                    "nodeType": "Block",
                    "src": "8374:75:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2483,
                              "name": "offset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "8428:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2484,
                              "name": "limit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2472,
                              "src": "8436:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2481,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "8391:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8407:20:10",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3532,
                            "src": "8391:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8391:51:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 2480,
                        "id": 2486,
                        "nodeType": "Return",
                        "src": "8384:58:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2468,
                    "nodeType": "StructuredDocumentation",
                    "src": "8028:61:10",
                    "text": "@notice Retrieve networks with pagination (gas-optimized)"
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 2488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "8103:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2470,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "8141:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8133:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8133:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2472,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "8183:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8175:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8175:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8123:138:10"
                  },
                  "returnParameters": {
                    "id": 2480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2477,
                        "mutability": "mutable",
                        "name": "networks",
                        "nameLocation": "8340:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8309:39:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2475,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2474,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "8309:13:10",
                                "8323:7:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3096,
                              "src": "8309:21:10"
                            },
                            "referencedDeclaration": 3096,
                            "src": "8309:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2476,
                          "nodeType": "ArrayTypeName",
                          "src": "8309:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2479,
                        "mutability": "mutable",
                        "name": "totalCount",
                        "nameLocation": "8358:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8350:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8350:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8308:61:10"
                  },
                  "scope": 2618,
                  "src": "8094:355:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2583,
                    "nodeType": "Block",
                    "src": "8642:766:10",
                    "statements": [
                      {
                        "assignments": [
                          2501,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2501,
                            "mutability": "mutable",
                            "name": "allNetworks",
                            "nameLocation": "8684:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2583,
                            "src": "8653:42:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2499,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2498,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "8653:13:10",
                                    "8667:7:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "8653:21:10"
                                },
                                "referencedDeclaration": 3096,
                                "src": "8653:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2500,
                              "nodeType": "ArrayTypeName",
                              "src": "8653:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2507,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8751:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "313030",
                              "id": 2505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8754:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 2502,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "8701:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8730:20:10",
                            "memberName": "getNetworksPaginated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3532,
                            "src": "8701:49:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view external returns (struct ZaaNetStorage.Network memory[] memory,uint256)"
                            }
                          },
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8701:57:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8652:106:10"
                      },
                      {
                        "assignments": [
                          2509
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2509,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "8816:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2583,
                            "src": "8808:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2508,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8808:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2511,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8830:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8808:23:10"
                      },
                      {
                        "body": {
                          "id": 2532,
                          "nodeType": "Block",
                          "src": "8890:99:10",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2523,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2501,
                                    "src": "8908:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2525,
                                  "indexExpression": {
                                    "id": 2524,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2513,
                                    "src": "8920:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8908:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2526,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8923:8:10",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "8908:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2531,
                              "nodeType": "IfStatement",
                              "src": "8904:75:10",
                              "trueBody": {
                                "id": 2530,
                                "nodeType": "Block",
                                "src": "8933:46:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "8951:13:10",
                                      "subExpression": {
                                        "id": 2527,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2509,
                                        "src": "8951:11:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2529,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8951:13:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2516,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2513,
                            "src": "8861:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2517,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2501,
                              "src": "8865:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8877:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8865:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8861:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2533,
                        "initializationExpression": {
                          "assignments": [
                            2513
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2513,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8854:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2533,
                              "src": "8846:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2512,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8846:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2515,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8858:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8846:13:10"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8885:3:10",
                            "subExpression": {
                              "id": 2520,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2513,
                              "src": "8885:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2522,
                          "nodeType": "ExpressionStatement",
                          "src": "8885:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "8841:148:10"
                      },
                      {
                        "assignments": [
                          2539
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2539,
                            "mutability": "mutable",
                            "name": "activeNetworks",
                            "nameLocation": "9078:14:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2583,
                            "src": "9035:57:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2537,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2536,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9035:13:10",
                                    "9049:7:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "9035:21:10"
                                },
                                "referencedDeclaration": 3096,
                                "src": "9035:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2538,
                              "nodeType": "ArrayTypeName",
                              "src": "9035:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2546,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2544,
                              "name": "activeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2509,
                              "src": "9123:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9095:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2541,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2540,
                                  "name": "ZaaNetStorage.Network",
                                  "nameLocations": [
                                    "9099:13:10",
                                    "9113:7:10"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "9099:21:10"
                                },
                                "referencedDeclaration": 3096,
                                "src": "9099:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 2542,
                              "nodeType": "ArrayTypeName",
                              "src": "9099:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 2545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9095:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9035:100:10"
                      },
                      {
                        "assignments": [
                          2548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2548,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "9153:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2583,
                            "src": "9145:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9145:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2550,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9161:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9145:17:10"
                      },
                      {
                        "body": {
                          "id": 2579,
                          "nodeType": "Block",
                          "src": "9221:149:10",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2562,
                                    "name": "allNetworks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2501,
                                    "src": "9239:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 2564,
                                  "indexExpression": {
                                    "id": 2563,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2552,
                                    "src": "9251:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9239:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2565,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9254:8:10",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "9239:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2578,
                              "nodeType": "IfStatement",
                              "src": "9235:125:10",
                              "trueBody": {
                                "id": 2577,
                                "nodeType": "Block",
                                "src": "9264:96:10",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2566,
                                          "name": "activeNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2539,
                                          "src": "9282:14:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2568,
                                        "indexExpression": {
                                          "id": 2567,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2548,
                                          "src": "9297:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "9282:21:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 2569,
                                          "name": "allNetworks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2501,
                                          "src": "9306:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                          }
                                        },
                                        "id": 2571,
                                        "indexExpression": {
                                          "id": 2570,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2552,
                                          "src": "9318:1:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9306:14:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                          "typeString": "struct ZaaNetStorage.Network memory"
                                        }
                                      },
                                      "src": "9282:38:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                        "typeString": "struct ZaaNetStorage.Network memory"
                                      }
                                    },
                                    "id": 2573,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9282:38:10"
                                  },
                                  {
                                    "expression": {
                                      "id": 2575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9338:7:10",
                                      "subExpression": {
                                        "id": 2574,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2548,
                                        "src": "9338:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2576,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9338:7:10"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2555,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2552,
                            "src": "9192:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2556,
                              "name": "allNetworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2501,
                              "src": "9196:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            "id": 2557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9208:6:10",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9196:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9192:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2580,
                        "initializationExpression": {
                          "assignments": [
                            2552
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2552,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9185:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 2580,
                              "src": "9177:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2551,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9177:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2554,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9189:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9177:13:10"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9216:3:10",
                            "subExpression": {
                              "id": 2559,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2552,
                              "src": "9216:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2561,
                          "nodeType": "ExpressionStatement",
                          "src": "9216:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "9172:198:10"
                      },
                      {
                        "expression": {
                          "id": 2581,
                          "name": "activeNetworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "9387:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2495,
                        "id": 2582,
                        "nodeType": "Return",
                        "src": "9380:21:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2489,
                    "nodeType": "StructuredDocumentation",
                    "src": "8455:67:10",
                    "text": "@notice Get all active networks (limited to prevent gas issues)"
                  },
                  "functionSelector": "16cb6eff",
                  "id": 2584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllActiveNetworks",
                  "nameLocation": "8536:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8556:2:10"
                  },
                  "returnParameters": {
                    "id": 2495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2494,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2584,
                        "src": "8606:30:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2492,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2491,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "8606:13:10",
                                "8620:7:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3096,
                              "src": "8606:21:10"
                            },
                            "referencedDeclaration": 3096,
                            "src": "8606:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 2493,
                          "nodeType": "ArrayTypeName",
                          "src": "8606:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8605:32:10"
                  },
                  "scope": 2618,
                  "src": "8527:881:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2593,
                    "nodeType": "Block",
                    "src": "9527:25:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2590,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "9537:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9537:8:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2592,
                        "nodeType": "ExpressionStatement",
                        "src": "9537:8:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2585,
                    "nodeType": "StructuredDocumentation",
                    "src": "9446:40:10",
                    "text": "@notice Emergency pause (only owner)"
                  },
                  "functionSelector": "8456cb59",
                  "id": 2594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2588,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2587,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "9517:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "9517:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9517:9:10"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "9500:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9505:2:10"
                  },
                  "returnParameters": {
                    "id": 2589,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9527:0:10"
                  },
                  "scope": 2618,
                  "src": "9491:61:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2603,
                    "nodeType": "Block",
                    "src": "9633:27:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2600,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "9643:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9643:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2602,
                        "nodeType": "ExpressionStatement",
                        "src": "9643:10:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2595,
                    "nodeType": "StructuredDocumentation",
                    "src": "9558:32:10",
                    "text": "@notice Unpause (only owner)"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2604,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2598,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2597,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "9623:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "9623:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9623:9:10"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "9604:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9611:2:10"
                  },
                  "returnParameters": {
                    "id": 2599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9633:0:10"
                  },
                  "scope": 2618,
                  "src": "9595:65:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2616,
                    "nodeType": "Block",
                    "src": "9780:145:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 2614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2610,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "9868:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2611,
                                "name": "storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1884,
                                "src": "9884:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                  "typeString": "contract ZaaNetStorage"
                                }
                              },
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9900:16:10",
                              "memberName": "networkIdCounter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3119,
                              "src": "9884:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9884:34:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9868:50:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2615,
                        "nodeType": "ExpressionStatement",
                        "src": "9868:50:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2605,
                    "nodeType": "StructuredDocumentation",
                    "src": "9666:35:10",
                    "text": "@notice Get contract statistics"
                  },
                  "functionSelector": "dfe6b5d6",
                  "id": 2617,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractStats",
                  "nameLocation": "9715:16:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9731:2:10"
                  },
                  "returnParameters": {
                    "id": 2609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2608,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "9765:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2617,
                        "src": "9757:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2607,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9757:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9756:23:10"
                  },
                  "scope": 2618,
                  "src": "9706:219:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2619,
              "src": "296:9631:10",
              "usedErrors": [
                13,
                18,
                955,
                958,
                1055
              ],
              "usedEvents": [
                24,
                947,
                952,
                4020,
                4032,
                4036,
                4044,
                4052
              ]
            }
          ],
          "src": "32:9896:10"
        },
        "id": 10
      },
      "contracts/ZaaNetPayment.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetPayment.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "IZaaNetPayment": [
              4135
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              1041
            ],
            "ReentrancyGuard": [
              1110
            ],
            "TestUSDT": [
              1145
            ],
            "ZaaNetAdmin": [
              1866
            ],
            "ZaaNetPayment": [
              3067
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 3068,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2620,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2621,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 148,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 2622,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 1042,
              "src": "111:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2623,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 1111,
              "src": "164:59:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 2624,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 3797,
              "src": "224:29:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interface/IZaaNetPayment.sol",
              "file": "./interface/IZaaNetPayment.sol",
              "id": 2625,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 4136,
              "src": "254:40:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/TestUSDT.sol",
              "file": "./TestUSDT.sol",
              "id": 2626,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 1146,
              "src": "295:24:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetAdmin.sol",
              "file": "./ZaaNetAdmin.sol",
              "id": 2627,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3068,
              "sourceUnit": 1867,
              "src": "320:27:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2628,
                    "name": "Ownable",
                    "nameLocations": [
                      "375:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "375:7:11"
                  },
                  "id": 2629,
                  "nodeType": "InheritanceSpecifier",
                  "src": "375:7:11"
                },
                {
                  "baseName": {
                    "id": 2630,
                    "name": "Pausable",
                    "nameLocations": [
                      "384:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1041,
                    "src": "384:8:11"
                  },
                  "id": 2631,
                  "nodeType": "InheritanceSpecifier",
                  "src": "384:8:11"
                },
                {
                  "baseName": {
                    "id": 2632,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "394:15:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "394:15:11"
                  },
                  "id": 2633,
                  "nodeType": "InheritanceSpecifier",
                  "src": "394:15:11"
                }
              ],
              "canonicalName": "ZaaNetPayment",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3067,
              "linearizedBaseContracts": [
                3067,
                1110,
                1041,
                147,
                933
              ],
              "name": "ZaaNetPayment",
              "nameLocation": "358:13:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "2f48ab7d",
                  "id": 2636,
                  "mutability": "mutable",
                  "name": "usdt",
                  "nameLocation": "432:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "416:20:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestUSDT_$1145",
                    "typeString": "contract TestUSDT"
                  },
                  "typeName": {
                    "id": 2635,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2634,
                      "name": "TestUSDT",
                      "nameLocations": [
                        "416:8:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1145,
                      "src": "416:8:11"
                    },
                    "referencedDeclaration": 1145,
                    "src": "416:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestUSDT_$1145",
                      "typeString": "contract TestUSDT"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "11ce0267",
                  "id": 2639,
                  "mutability": "mutable",
                  "name": "storageContract",
                  "nameLocation": "463:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "442:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 2638,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2637,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "442:13:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3796,
                      "src": "442:13:11"
                    },
                    "referencedDeclaration": 3796,
                    "src": "442:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c05c5e94",
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "adminContract",
                  "nameLocation": "503:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "484:32:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                    "typeString": "contract ZaaNetAdmin"
                  },
                  "typeName": {
                    "id": 2641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2640,
                      "name": "ZaaNetAdmin",
                      "nameLocations": [
                        "484:11:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1866,
                      "src": "484:11:11"
                    },
                    "referencedDeclaration": 1866,
                    "src": "484:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                      "typeString": "contract ZaaNetAdmin"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5197f2d5",
                  "id": 2645,
                  "mutability": "constant",
                  "name": "MAX_PAYMENT_AMOUNT",
                  "nameLocation": "564:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "540:53:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030653138",
                    "id": 2644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "585:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    },
                    "value": "10000e18"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2646,
                    "nodeType": "StructuredDocumentation",
                    "src": "653:41:11",
                    "text": "@notice Emitted when a session starts"
                  },
                  "eventSelector": "4cf76f1607429a1ba564f99e3071202cedecedced41885abc9d7faf015984157",
                  "id": 2664,
                  "name": "SessionStarted",
                  "nameLocation": "705:14:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2648,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "745:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "729:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "729:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2650,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "780:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "764:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "764:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2652,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "815:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "799:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2654,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "847:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "839:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2656,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "active",
                        "nameLocation": "868:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "863:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2655,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2658,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voucherId",
                        "nameLocation": "891:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "884:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2657,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2660,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "userId",
                        "nameLocation": "917:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "910:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2659,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "910:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2662,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nameLocation": "941:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "933:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:237:11"
                  },
                  "src": "699:258:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2665,
                    "nodeType": "StructuredDocumentation",
                    "src": "963:44:11",
                    "text": "@notice Emitted when payment is received"
                  },
                  "eventSelector": "5cd7214f6a35088a9d01c8364579ef0efbf9eab3a80310601fbaef534bbb69af",
                  "id": 2677,
                  "name": "PaymentReceived",
                  "nameLocation": "1018:15:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2667,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1059:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2677,
                        "src": "1043:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2669,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1094:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2677,
                        "src": "1078:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2671,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "1129:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2677,
                        "src": "1113:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2670,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2673,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1161:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2677,
                        "src": "1153:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1153:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2675,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "platformFee",
                        "nameLocation": "1185:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2677,
                        "src": "1177:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2674,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1177:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1033:169:11"
                  },
                  "src": "1012:191:11"
                },
                {
                  "body": {
                    "id": 2738,
                    "nodeType": "Block",
                    "src": "1336:362:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2691,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2679,
                                "src": "1354:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2694,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1371:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1363:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2692,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1363:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1363:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1354:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420555344542061646472657373",
                              "id": 2697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1375:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
                                "typeString": "literal_string \"Invalid USDT address\""
                              },
                              "value": "Invalid USDT address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
                                "typeString": "literal_string \"Invalid USDT address\""
                              }
                            ],
                            "id": 2690,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1346:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:52:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2699,
                        "nodeType": "ExpressionStatement",
                        "src": "1346:52:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2701,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2681,
                                "src": "1416:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1444:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1436:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2702,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1436:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1436:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1416:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642053746f726167652061646472657373",
                              "id": 2707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1448:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dae0199d6ce4c90e0212d1a2da51d0a61dc785965212fcb973e997ef131c425e",
                                "typeString": "literal_string \"Invalid Storage address\""
                              },
                              "value": "Invalid Storage address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dae0199d6ce4c90e0212d1a2da51d0a61dc785965212fcb973e997ef131c425e",
                                "typeString": "literal_string \"Invalid Storage address\""
                              }
                            ],
                            "id": 2700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1408:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1408:66:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2709,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:66:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2711,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2683,
                                "src": "1492:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1518:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1510:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2712,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1510:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1510:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1492:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642041646d696e2061646472657373",
                              "id": 2717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f8a5d22c2ceb7573757547dab81cde17aac9fa09fda682708dc0edc99e9ab32",
                                "typeString": "literal_string \"Invalid Admin address\""
                              },
                              "value": "Invalid Admin address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f8a5d22c2ceb7573757547dab81cde17aac9fa09fda682708dc0edc99e9ab32",
                                "typeString": "literal_string \"Invalid Admin address\""
                              }
                            ],
                            "id": 2710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1484:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1484:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2719,
                        "nodeType": "ExpressionStatement",
                        "src": "1484:62:11"
                      },
                      {
                        "expression": {
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2720,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2636,
                            "src": "1557:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2722,
                                "name": "_usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2679,
                                "src": "1573:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2721,
                              "name": "TestUSDT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "1564:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestUSDT_$1145_$",
                                "typeString": "type(contract TestUSDT)"
                              }
                            },
                            "id": 2723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1564:15:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "src": "1557:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestUSDT_$1145",
                            "typeString": "contract TestUSDT"
                          }
                        },
                        "id": 2725,
                        "nodeType": "ExpressionStatement",
                        "src": "1557:22:11"
                      },
                      {
                        "expression": {
                          "id": 2730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2726,
                            "name": "storageContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2639,
                            "src": "1589:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2728,
                                "name": "_storageContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2681,
                                "src": "1621:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2727,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3796,
                              "src": "1607:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 2729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1607:31:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "1589:49:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 2731,
                        "nodeType": "ExpressionStatement",
                        "src": "1589:49:11"
                      },
                      {
                        "expression": {
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2732,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "1648:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                              "typeString": "contract ZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2734,
                                "name": "_adminContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2683,
                                "src": "1676:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2733,
                              "name": "ZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1866,
                              "src": "1664:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetAdmin_$1866_$",
                                "typeString": "type(contract ZaaNetAdmin)"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1664:27:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                              "typeString": "contract ZaaNetAdmin"
                            }
                          },
                          "src": "1648:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                            "typeString": "contract ZaaNetAdmin"
                          }
                        },
                        "id": 2737,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:43:11"
                      }
                    ]
                  },
                  "id": 2739,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2686,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1324:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1328:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1324:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2688,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2685,
                        "name": "Ownable",
                        "nameLocations": [
                          "1316:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1316:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1316:19:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2679,
                        "mutability": "mutable",
                        "name": "_usdt",
                        "nameLocation": "1238:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2739,
                        "src": "1230:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1230:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2681,
                        "mutability": "mutable",
                        "name": "_storageContract",
                        "nameLocation": "1261:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2739,
                        "src": "1253:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2683,
                        "mutability": "mutable",
                        "name": "_adminContract",
                        "nameLocation": "1295:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2739,
                        "src": "1287:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2682,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1287:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:95:11"
                  },
                  "returnParameters": {
                    "id": 2689,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1336:0:11"
                  },
                  "scope": 3067,
                  "src": "1209:489:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2919,
                    "nodeType": "Block",
                    "src": "1887:2432:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2755,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2743,
                                  "src": "1945:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1955:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1945:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2758,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2743,
                                  "src": "1960:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2759,
                                  "name": "MAX_PAYMENT_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2645,
                                  "src": "1971:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1960:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1945:44:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e7420616d6f756e74",
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2003:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_31abbd0ed2b9e8faf5c1118eb5955eeb9201915fb1c187e92b72e48044438aaa",
                                "typeString": "literal_string \"Invalid payment amount\""
                              },
                              "value": "Invalid payment amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_31abbd0ed2b9e8faf5c1118eb5955eeb9201915fb1c187e92b72e48044438aaa",
                                "typeString": "literal_string \"Invalid payment amount\""
                              }
                            ],
                            "id": 2754,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1924:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1924:113:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2764,
                        "nodeType": "ExpressionStatement",
                        "src": "1924:113:11"
                      },
                      {
                        "assignments": [
                          2769
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2769,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "2113:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2084:36:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 2768,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2767,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "2084:13:11",
                                  "2098:7:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3096,
                                "src": "2084:21:11"
                              },
                              "referencedDeclaration": 3096,
                              "src": "2084:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2774,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2772,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "2163:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2770,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "2123:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2139:10:11",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "2123:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2123:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2084:99:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2776,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2769,
                                "src": "2201:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2777,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2209:8:11",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3091,
                              "src": "2201:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b206973206e6f7420616374697665",
                              "id": 2778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2219:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e0cbec50eafc172d4d33af3f38ab4558e9157de242863f3509bd46123fcbf1e",
                                "typeString": "literal_string \"Network is not active\""
                              },
                              "value": "Network is not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e0cbec50eafc172d4d33af3f38ab4558e9157de242863f3509bd46123fcbf1e",
                                "typeString": "literal_string \"Network is not active\""
                              }
                            ],
                            "id": 2775,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2193:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2193:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2780,
                        "nodeType": "ExpressionStatement",
                        "src": "2193:50:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2782,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2743,
                                "src": "2261:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2783,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2769,
                                  "src": "2272:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 2784,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2280:15:11",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3087,
                                "src": "2272:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2261:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e7420616d6f756e7420746f6f206c6f77",
                              "id": 2786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2297:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9e45d0ee68a533e4a087cd5c394fdc87c8d87896209f220abd5d6fc13200caa",
                                "typeString": "literal_string \"Payment amount too low\""
                              },
                              "value": "Payment amount too low"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9e45d0ee68a533e4a087cd5c394fdc87c8d87896209f220abd5d6fc13200caa",
                                "typeString": "literal_string \"Payment amount too low\""
                              }
                            ],
                            "id": 2781,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2253:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2253:69:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2788,
                        "nodeType": "ExpressionStatement",
                        "src": "2253:69:11"
                      },
                      {
                        "assignments": [
                          2790
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2790,
                            "mutability": "mutable",
                            "name": "platformFeePercent",
                            "nameLocation": "2411:18:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2403:26:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2789,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2403:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2794,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2791,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2642,
                              "src": "2432:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                                "typeString": "contract ZaaNetAdmin"
                              }
                            },
                            "id": 2792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2446:18:11",
                            "memberName": "platformFeePercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1164,
                            "src": "2432:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2432:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2403:63:11"
                      },
                      {
                        "assignments": [
                          2796
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2796,
                            "mutability": "mutable",
                            "name": "treasuryAddress",
                            "nameLocation": "2484:15:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2476:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2795,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2476:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2800,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2797,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2642,
                              "src": "2502:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                                "typeString": "contract ZaaNetAdmin"
                              }
                            },
                            "id": 2798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2516:15:11",
                            "memberName": "treasuryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1162,
                            "src": "2502:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2502:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2476:57:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2802,
                                "name": "treasuryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2796,
                                "src": "2552:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2805,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2579:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2571:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2803,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2571:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2571:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2552:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074726561737572792061646472657373",
                              "id": 2808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2583:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              },
                              "value": "Invalid treasury address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
                                "typeString": "literal_string \"Invalid treasury address\""
                              }
                            ],
                            "id": 2801,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2544:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2544:66:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2810,
                        "nodeType": "ExpressionStatement",
                        "src": "2544:66:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2812,
                                "name": "platformFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2790,
                                "src": "2628:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "3230",
                                "id": 2813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2650:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_20_by_1",
                                  "typeString": "int_const 20"
                                },
                                "value": "20"
                              },
                              "src": "2628:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c6174666f726d2066656520746f6f2068696768",
                              "id": 2815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2654:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b42428e1236248cef2596667d3cadafe404dc77a356e6cfd627e40954351cf32",
                                "typeString": "literal_string \"Platform fee too high\""
                              },
                              "value": "Platform fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b42428e1236248cef2596667d3cadafe404dc77a356e6cfd627e40954351cf32",
                                "typeString": "literal_string \"Platform fee too high\""
                              }
                            ],
                            "id": 2811,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2620:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2620:58:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2817,
                        "nodeType": "ExpressionStatement",
                        "src": "2620:58:11"
                      },
                      {
                        "assignments": [
                          2819
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2819,
                            "mutability": "mutable",
                            "name": "platformFee",
                            "nameLocation": "2697:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2689:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2818,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2689:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2826,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2820,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2743,
                                  "src": "2712:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2821,
                                  "name": "platformFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2790,
                                  "src": "2722:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2712:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2823,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2711:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 2824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2744:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "2711:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2689:58:11"
                      },
                      {
                        "assignments": [
                          2828
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2828,
                            "mutability": "mutable",
                            "name": "hostAmount",
                            "nameLocation": "2765:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2757:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2827,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2757:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2832,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2829,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2743,
                            "src": "2778:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2830,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2819,
                            "src": "2788:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2778:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2757:42:11"
                      },
                      {
                        "assignments": [
                          2834
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2834,
                            "mutability": "mutable",
                            "name": "sessionId",
                            "nameLocation": "2866:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "2858:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2833,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2858:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2838,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2835,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "2878:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2894:18:11",
                            "memberName": "incrementSessionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3556,
                            "src": "2878:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2858:56:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2842,
                              "name": "sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "2964:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2845,
                                  "name": "sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2834,
                                  "src": "3038:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2846,
                                  "name": "_networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2741,
                                  "src": "3076:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2847,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3120:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3124:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3120:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2849,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2743,
                                  "src": "3156:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "74727565",
                                  "id": 2850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3189:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 2851,
                                  "name": "_voucherId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2745,
                                  "src": "3222:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2852,
                                  "name": "_userId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2747,
                                  "src": "3258:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2853,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3294:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3300:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3294:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2843,
                                  "name": "ZaaNetStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3796,
                                  "src": "2987:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                    "typeString": "type(contract ZaaNetStorage)"
                                  }
                                },
                                "id": 2844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3001:7:11",
                                "memberName": "Session",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3113,
                                "src": "2987:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Session_$3113_storage_ptr_$",
                                  "typeString": "type(struct ZaaNetStorage.Session storage pointer)"
                                }
                              },
                              "id": 2855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "3027:9:11",
                                "3065:9:11",
                                "3104:14:11",
                                "3148:6:11",
                                "3181:6:11",
                                "3211:9:11",
                                "3250:6:11",
                                "3283:9:11"
                              ],
                              "names": [
                                "sessionId",
                                "networkId",
                                "paymentAddress",
                                "amount",
                                "active",
                                "voucherId",
                                "userId",
                                "startTime"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2987:337:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Session memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Session memory"
                              }
                            ],
                            "expression": {
                              "id": 2839,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "2924:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2940:10:11",
                            "memberName": "setSession",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3621,
                            "src": "2924:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Session_$3113_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct ZaaNetStorage.Session memory) external"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2924:410:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2857,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:410:11"
                      },
                      {
                        "assignments": [
                          2859
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2859,
                            "mutability": "mutable",
                            "name": "feeTransferSuccess",
                            "nameLocation": "3407:18:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "3402:23:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2858,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3402:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2867,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2862,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3459:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3463:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3459:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2864,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2796,
                              "src": "3483:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2865,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "3512:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2860,
                              "name": "usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2636,
                              "src": "3428:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestUSDT_$1145",
                                "typeString": "contract TestUSDT"
                              }
                            },
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3433:12:11",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 482,
                            "src": "3428:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3428:105:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3402:131:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2869,
                              "name": "feeTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "3551:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c6174666f726d20666565207472616e73666572206661696c6564",
                              "id": 2870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3571:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3",
                                "typeString": "literal_string \"Platform fee transfer failed\""
                              },
                              "value": "Platform fee transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3",
                                "typeString": "literal_string \"Platform fee transfer failed\""
                              }
                            ],
                            "id": 2868,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3543:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3543:59:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2872,
                        "nodeType": "ExpressionStatement",
                        "src": "3543:59:11"
                      },
                      {
                        "assignments": [
                          2874
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2874,
                            "mutability": "mutable",
                            "name": "hostTransferSuccess",
                            "nameLocation": "3618:19:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2919,
                            "src": "3613:24:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2873,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3613:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2883,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2877,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3671:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3675:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3671:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2879,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2769,
                                "src": "3695:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2880,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3703:11:11",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3085,
                              "src": "3695:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2881,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3728:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2875,
                              "name": "usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2636,
                              "src": "3640:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestUSDT_$1145",
                                "typeString": "contract TestUSDT"
                              }
                            },
                            "id": 2876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3645:12:11",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 482,
                            "src": "3640:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3640:108:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3613:135:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2885,
                              "name": "hostTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2874,
                              "src": "3766:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "486f7374207061796d656e74207472616e73666572206661696c6564",
                              "id": 2886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3787:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fdb83e984216c10e84aa28a762c765a0ffd1a4526f0e556ace8a2756e5ad53a9",
                                "typeString": "literal_string \"Host payment transfer failed\""
                              },
                              "value": "Host payment transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fdb83e984216c10e84aa28a762c765a0ffd1a4526f0e556ace8a2756e5ad53a9",
                                "typeString": "literal_string \"Host payment transfer failed\""
                              }
                            ],
                            "id": 2884,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3758:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3758:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2888,
                        "nodeType": "ExpressionStatement",
                        "src": "3758:60:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2892,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2769,
                                "src": "3898:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 2893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3906:11:11",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3085,
                              "src": "3898:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2894,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3919:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2889,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "3861:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3877:20:11",
                            "memberName": "increaseHostEarnings",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3683,
                            "src": "3861:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 2895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3861:69:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2896,
                        "nodeType": "ExpressionStatement",
                        "src": "3861:69:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2898,
                              "name": "sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "3974:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2899,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "3997:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2900,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4021:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4025:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4021:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2902,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2743,
                              "src": "4045:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 2903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4066:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "id": 2904,
                              "name": "_voucherId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2745,
                              "src": "4084:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2905,
                              "name": "_userId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "4108:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 2906,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4129:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4135:9:11",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4129:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2897,
                            "name": "SessionStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2664,
                            "src": "3946:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address,uint256,bool,string memory,string memory,uint256)"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3946:208:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2909,
                        "nodeType": "EmitStatement",
                        "src": "3941:213:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2911,
                              "name": "sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "4199:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2912,
                              "name": "_networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "4222:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2913,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4246:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4250:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4246:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2915,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2743,
                              "src": "4270:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2916,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "4291:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2910,
                            "name": "PaymentReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2677,
                            "src": "4170:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address,uint256,uint256)"
                            }
                          },
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4170:142:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2918,
                        "nodeType": "EmitStatement",
                        "src": "4165:147:11"
                      }
                    ]
                  },
                  "functionSelector": "30624709",
                  "id": 2920,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2750,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2749,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1860:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "1860:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1860:13:11"
                    },
                    {
                      "id": 2752,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2751,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1874:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "1874:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1874:12:11"
                    }
                  ],
                  "name": "acceptPayment",
                  "nameLocation": "1713:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2748,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2741,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "1744:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2920,
                        "src": "1736:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1736:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2743,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1772:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2920,
                        "src": "1764:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2742,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2745,
                        "mutability": "mutable",
                        "name": "_voucherId",
                        "nameLocation": "1803:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2920,
                        "src": "1789:24:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2744,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1789:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2747,
                        "mutability": "mutable",
                        "name": "_userId",
                        "nameLocation": "1837:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2920,
                        "src": "1823:21:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2746,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1726:124:11"
                  },
                  "returnParameters": {
                    "id": 2753,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1887:0:11"
                  },
                  "scope": 3067,
                  "src": "1704:2615:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2933,
                    "nodeType": "Block",
                    "src": "4432:62:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2930,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "4476:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2928,
                              "name": "storageContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2639,
                              "src": "4449:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 2929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4465:10:11",
                            "memberName": "getSession",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3641,
                            "src": "4449:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Session_$3113_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Session memory)"
                            }
                          },
                          "id": 2931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Session memory"
                          }
                        },
                        "functionReturnParameters": 2927,
                        "id": 2932,
                        "nodeType": "Return",
                        "src": "4442:45:11"
                      }
                    ]
                  },
                  "functionSelector": "402ff0db",
                  "id": 2934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSession",
                  "nameLocation": "4334:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2922,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "4362:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2934,
                        "src": "4354:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4354:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4344:34:11"
                  },
                  "returnParameters": {
                    "id": 2927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2926,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2934,
                        "src": "4402:28:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 2925,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2924,
                            "name": "ZaaNetStorage.Session",
                            "nameLocations": [
                              "4402:13:11",
                              "4416:7:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "4402:21:11"
                          },
                          "referencedDeclaration": 3113,
                          "src": "4402:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4401:30:11"
                  },
                  "scope": 3067,
                  "src": "4325:169:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2969,
                    "nodeType": "Block",
                    "src": "4682:208:11",
                    "statements": [
                      {
                        "assignments": [
                          2945
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2945,
                            "mutability": "mutable",
                            "name": "feePercent",
                            "nameLocation": "4700:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2969,
                            "src": "4692:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2944,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4692:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2949,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2946,
                              "name": "adminContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2642,
                              "src": "4713:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                                "typeString": "contract ZaaNetAdmin"
                              }
                            },
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4727:18:11",
                            "memberName": "platformFeePercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1164,
                            "src": "4713:32:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4713:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4692:55:11"
                      },
                      {
                        "expression": {
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2950,
                            "name": "platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2942,
                            "src": "4757:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2951,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2937,
                                    "src": "4772:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2952,
                                    "name": "feePercent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2945,
                                    "src": "4781:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4772:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2954,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4771:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4795:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4771:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4757:41:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2958,
                        "nodeType": "ExpressionStatement",
                        "src": "4757:41:11"
                      },
                      {
                        "expression": {
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2959,
                            "name": "hostAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2940,
                            "src": "4808:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2960,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "4821:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2961,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "4830:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4821:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4808:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "4808:33:11"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2965,
                              "name": "hostAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2940,
                              "src": "4859:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2966,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "4871:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2967,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4858:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 2943,
                        "id": 2968,
                        "nodeType": "Return",
                        "src": "4851:32:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2935,
                    "nodeType": "StructuredDocumentation",
                    "src": "4500:60:11",
                    "text": "@notice Helper to calculate fee breakdown before payment"
                  },
                  "functionSelector": "52238fdd",
                  "id": 2970,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateFees",
                  "nameLocation": "4574:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2937,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4605:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2970,
                        "src": "4597:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2936,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4597:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4587:30:11"
                  },
                  "returnParameters": {
                    "id": 2943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2940,
                        "mutability": "mutable",
                        "name": "hostAmount",
                        "nameLocation": "4649:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2970,
                        "src": "4641:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4641:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2942,
                        "mutability": "mutable",
                        "name": "platformFee",
                        "nameLocation": "4669:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2970,
                        "src": "4661:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4661:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4640:41:11"
                  },
                  "scope": 3067,
                  "src": "4565:325:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2992,
                    "nodeType": "Block",
                    "src": "4954:165:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2974,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4985:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2975,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4989:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4985:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2976,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "4999:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 2977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4999:7:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4985:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2979,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5010:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5014:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5010:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2981,
                                      "name": "adminContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2642,
                                      "src": "5024:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                                        "typeString": "contract ZaaNetAdmin"
                                      }
                                    },
                                    "id": 2982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5038:5:11",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 67,
                                    "src": "5024:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 2983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5024:21:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5010:35:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4985:60:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a656420746f207061757365",
                              "id": 2986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5059:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc058d4461809b877364f3f7787a2b53b5b533eee9771a7dbaa9297a31214e07",
                                "typeString": "literal_string \"Not authorized to pause\""
                              },
                              "value": "Not authorized to pause"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc058d4461809b877364f3f7787a2b53b5b533eee9771a7dbaa9297a31214e07",
                                "typeString": "literal_string \"Not authorized to pause\""
                              }
                            ],
                            "id": 2973,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4964:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4964:130:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2988,
                        "nodeType": "ExpressionStatement",
                        "src": "4964:130:11"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2989,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "5104:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5104:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2991,
                        "nodeType": "ExpressionStatement",
                        "src": "5104:8:11"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 2993,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pause",
                  "nameLocation": "4937:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4942:2:11"
                  },
                  "returnParameters": {
                    "id": 2972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4954:0:11"
                  },
                  "scope": 3067,
                  "src": "4928:191:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3015,
                    "nodeType": "Block",
                    "src": "5153:169:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2997,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5184:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2998,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5188:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5184:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2999,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "5198:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 3000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5198:7:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5184:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3002,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5209:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5213:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5209:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 3004,
                                      "name": "adminContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2642,
                                      "src": "5223:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                                        "typeString": "contract ZaaNetAdmin"
                                      }
                                    },
                                    "id": 3005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5237:5:11",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 67,
                                    "src": "5223:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5223:21:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5209:35:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5184:60:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a656420746f20756e7061757365",
                              "id": 3009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5258:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b052924ae22b0e0b2a85876bc84e7a89b1652fe2312d8e27284aa33c95ff8f97",
                                "typeString": "literal_string \"Not authorized to unpause\""
                              },
                              "value": "Not authorized to unpause"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b052924ae22b0e0b2a85876bc84e7a89b1652fe2312d8e27284aa33c95ff8f97",
                                "typeString": "literal_string \"Not authorized to unpause\""
                              }
                            ],
                            "id": 2996,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5163:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5163:132:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3011,
                        "nodeType": "ExpressionStatement",
                        "src": "5163:132:11"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3012,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "5305:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5305:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3014,
                        "nodeType": "ExpressionStatement",
                        "src": "5305:10:11"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 3016,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unpause",
                  "nameLocation": "5134:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5141:2:11"
                  },
                  "returnParameters": {
                    "id": 2995,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5153:0:11"
                  },
                  "scope": 3067,
                  "src": "5125:197:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3040,
                    "nodeType": "Block",
                    "src": "5454:107:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3025,
                                "name": "_newUSDT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3019,
                                "src": "5472:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3028,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5492:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5484:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3026,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5484:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5484:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5472:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420555344542061646472657373",
                              "id": 3031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5496:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
                                "typeString": "literal_string \"Invalid USDT address\""
                              },
                              "value": "Invalid USDT address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
                                "typeString": "literal_string \"Invalid USDT address\""
                              }
                            ],
                            "id": 3024,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5464:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5464:55:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3033,
                        "nodeType": "ExpressionStatement",
                        "src": "5464:55:11"
                      },
                      {
                        "expression": {
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3034,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2636,
                            "src": "5529:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3036,
                                "name": "_newUSDT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3019,
                                "src": "5545:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3035,
                              "name": "TestUSDT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "5536:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestUSDT_$1145_$",
                                "typeString": "type(contract TestUSDT)"
                              }
                            },
                            "id": 3037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5536:18:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "src": "5529:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestUSDT_$1145",
                            "typeString": "contract TestUSDT"
                          }
                        },
                        "id": 3039,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:25:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3017,
                    "nodeType": "StructuredDocumentation",
                    "src": "5328:57:11",
                    "text": "@notice Update USDT contract address (emergency only)"
                  },
                  "functionSelector": "75d60372",
                  "id": 3041,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3022,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3021,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5444:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5444:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5444:9:11"
                    }
                  ],
                  "name": "updateUSDTAddress",
                  "nameLocation": "5399:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3019,
                        "mutability": "mutable",
                        "name": "_newUSDT",
                        "nameLocation": "5425:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 3041,
                        "src": "5417:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5417:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5416:18:11"
                  },
                  "returnParameters": {
                    "id": 3023,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5454:0:11"
                  },
                  "scope": 3067,
                  "src": "5390:171:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3065,
                    "nodeType": "Block",
                    "src": "5697:122:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3050,
                                "name": "_newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3044,
                                "src": "5715:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3053,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5736:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5728:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3051,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5728:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5728:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5715:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646d696e2061646472657373",
                              "id": 3056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5740:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                                "typeString": "literal_string \"Invalid admin address\""
                              },
                              "value": "Invalid admin address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                                "typeString": "literal_string \"Invalid admin address\""
                              }
                            ],
                            "id": 3049,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5707:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5707:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3058,
                        "nodeType": "ExpressionStatement",
                        "src": "5707:57:11"
                      },
                      {
                        "expression": {
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3059,
                            "name": "adminContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "5774:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                              "typeString": "contract ZaaNetAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3061,
                                "name": "_newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3044,
                                "src": "5802:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3060,
                              "name": "ZaaNetAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1866,
                              "src": "5790:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetAdmin_$1866_$",
                                "typeString": "type(contract ZaaNetAdmin)"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5790:22:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                              "typeString": "contract ZaaNetAdmin"
                            }
                          },
                          "src": "5774:38:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetAdmin_$1866",
                            "typeString": "contract ZaaNetAdmin"
                          }
                        },
                        "id": 3064,
                        "nodeType": "ExpressionStatement",
                        "src": "5774:38:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3042,
                    "nodeType": "StructuredDocumentation",
                    "src": "5567:58:11",
                    "text": "@notice Update admin contract address (emergency only)"
                  },
                  "functionSelector": "388d2c24",
                  "id": 3066,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3047,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3046,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5687:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5687:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5687:9:11"
                    }
                  ],
                  "name": "updateAdminContract",
                  "nameLocation": "5639:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3044,
                        "mutability": "mutable",
                        "name": "_newAdmin",
                        "nameLocation": "5667:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 3066,
                        "src": "5659:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5659:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5658:19:11"
                  },
                  "returnParameters": {
                    "id": 3048,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5697:0:11"
                  },
                  "scope": 3067,
                  "src": "5630:189:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3068,
              "src": "349:5472:11",
              "usedErrors": [
                13,
                18,
                955,
                958,
                1055
              ],
              "usedEvents": [
                24,
                947,
                952,
                2664,
                2677
              ]
            }
          ],
          "src": "32:5790:11"
        },
        "id": 11
      },
      "contracts/ZaaNetStorage.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetStorage.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 3797,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3069,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 3070,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3797,
              "sourceUnit": 148,
              "src": "58:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 3071,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3797,
              "sourceUnit": 1111,
              "src": "111:59:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3072,
                    "name": "Ownable",
                    "nameLocations": [
                      "198:7:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "198:7:12"
                  },
                  "id": 3073,
                  "nodeType": "InheritanceSpecifier",
                  "src": "198:7:12"
                },
                {
                  "baseName": {
                    "id": 3074,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "207:15:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "207:15:12"
                  },
                  "id": 3075,
                  "nodeType": "InheritanceSpecifier",
                  "src": "207:15:12"
                }
              ],
              "canonicalName": "ZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3796,
              "linearizedBaseContracts": [
                3796,
                1110,
                147,
                933
              ],
              "name": "ZaaNetStorage",
              "nameLocation": "181:13:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "52f51f8b",
                  "id": 3078,
                  "mutability": "constant",
                  "name": "MAX_NETWORKS_PER_QUERY",
                  "nameLocation": "297:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "273:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "322:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "71f7cd5b",
                  "id": 3081,
                  "mutability": "constant",
                  "name": "MAX_SESSIONS_PER_QUERY",
                  "nameLocation": "355:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "331:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 3080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetStorage.Network",
                  "id": 3096,
                  "members": [
                    {
                      "constant": false,
                      "id": 3083,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "423:2:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "415:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3085,
                      "mutability": "mutable",
                      "name": "hostAddress",
                      "nameLocation": "443:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "435:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3084,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "435:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3087,
                      "mutability": "mutable",
                      "name": "pricePerSession",
                      "nameLocation": "472:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "464:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3086,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "464:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3089,
                      "mutability": "mutable",
                      "name": "mongoDataId",
                      "nameLocation": "504:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "497:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3088,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "497:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3091,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "530:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "525:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3090,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "525:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3093,
                      "mutability": "mutable",
                      "name": "createdAt",
                      "nameLocation": "556:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "548:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "548:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3095,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "583:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3096,
                      "src": "575:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "575:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Network",
                  "nameLocation": "397:7:12",
                  "nodeType": "StructDefinition",
                  "scope": 3796,
                  "src": "390:209:12",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ZaaNetStorage.Session",
                  "id": 3113,
                  "members": [
                    {
                      "constant": false,
                      "id": 3098,
                      "mutability": "mutable",
                      "name": "sessionId",
                      "nameLocation": "638:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "630:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3097,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "630:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "networkId",
                      "nameLocation": "665:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "657:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3102,
                      "mutability": "mutable",
                      "name": "paymentAddress",
                      "nameLocation": "692:14:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "684:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3101,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "684:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3104,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "724:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "716:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "716:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3106,
                      "mutability": "mutable",
                      "name": "active",
                      "nameLocation": "745:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "740:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3105,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "740:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3108,
                      "mutability": "mutable",
                      "name": "voucherId",
                      "nameLocation": "768:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "761:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3107,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "761:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3110,
                      "mutability": "mutable",
                      "name": "userId",
                      "nameLocation": "794:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "787:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3109,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "787:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "818:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3113,
                      "src": "810:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "810:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Session",
                  "nameLocation": "612:7:12",
                  "nodeType": "StructDefinition",
                  "scope": 3796,
                  "src": "605:229:12",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7b334154",
                  "id": 3117,
                  "mutability": "mutable",
                  "name": "allowedCallers",
                  "nameLocation": "872:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "840:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 3116,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3114,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "848:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "840:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3115,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "859:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "217c682d",
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "networkIdCounter",
                  "nameLocation": "954:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "939:31:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a29352d",
                  "id": 3121,
                  "mutability": "mutable",
                  "name": "sessionIdCounter",
                  "nameLocation": "1018:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1003:31:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8bb0a17c",
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "networks",
                  "nameLocation": "1102:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1067:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                  },
                  "typeName": {
                    "id": 3125,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3122,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1075:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1067:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3124,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3123,
                        "name": "Network",
                        "nameLocations": [
                          "1086:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3096,
                        "src": "1086:7:12"
                      },
                      "referencedDeclaration": 3096,
                      "src": "1086:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                        "typeString": "struct ZaaNetStorage.Network"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "83c4b7a3",
                  "id": 3131,
                  "mutability": "mutable",
                  "name": "sessions",
                  "nameLocation": "1151:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1116:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$3113_storage_$",
                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Session)"
                  },
                  "typeName": {
                    "id": 3130,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3127,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1124:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1116:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$3113_storage_$",
                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Session)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3129,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3128,
                        "name": "Session",
                        "nameLocations": [
                          "1135:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3113,
                        "src": "1135:7:12"
                      },
                      "referencedDeclaration": 3113,
                      "src": "1135:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                        "typeString": "struct ZaaNetStorage.Session"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29c718b5",
                  "id": 3135,
                  "mutability": "mutable",
                  "name": "hostEarnings",
                  "nameLocation": "1200:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1165:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 3134,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3132,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1173:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1165:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3133,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1184:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7bae8f5e",
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "hostNetworkIds",
                  "nameLocation": "1303:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1266:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 3139,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3136,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1274:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1266:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 3137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1285:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3138,
                      "nodeType": "ArrayTypeName",
                      "src": "1285:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec13f2a1",
                  "id": 3144,
                  "mutability": "mutable",
                  "name": "networkExists",
                  "nameLocation": "1355:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1323:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 3143,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3141,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1331:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1323:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3142,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1342:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "879ecf10",
                  "id": 3148,
                  "mutability": "mutable",
                  "name": "sessionExists",
                  "nameLocation": "1406:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "1374:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 3147,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3145,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1382:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1374:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3146,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1393:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3165,
                    "nodeType": "Block",
                    "src": "1449:106:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 3151,
                                  "name": "allowedCallers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3117,
                                  "src": "1467:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 3154,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3152,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1482:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1486:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1482:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1467:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3155,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1497:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1501:6:12",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1497:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3157,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "1511:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 3158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1511:7:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1497:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1467:51:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 3161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1520:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 3150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1459:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1459:78:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3163,
                        "nodeType": "ExpressionStatement",
                        "src": "1459:78:12"
                      },
                      {
                        "id": 3164,
                        "nodeType": "PlaceholderStatement",
                        "src": "1547:1:12"
                      }
                    ]
                  },
                  "id": 3166,
                  "name": "onlyAllowed",
                  "nameLocation": "1435:11:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1446:2:12"
                  },
                  "src": "1426:129:12",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f",
                  "id": 3172,
                  "name": "AllowedCallerUpdated",
                  "nameLocation": "1567:20:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3168,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1604:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3172,
                        "src": "1588:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1588:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3170,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "1617:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3172,
                        "src": "1612:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3169,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1587:37:12"
                  },
                  "src": "1561:64:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e",
                  "id": 3180,
                  "name": "NetworkStored",
                  "nameLocation": "1636:13:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3174,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1666:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3180,
                        "src": "1650:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1650:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3176,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1686:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3180,
                        "src": "1670:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1670:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3178,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerSession",
                        "nameLocation": "1707:15:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3180,
                        "src": "1699:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1649:74:12"
                  },
                  "src": "1630:94:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c",
                  "id": 3186,
                  "name": "NetworkUpdated",
                  "nameLocation": "1735:14:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1766:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3186,
                        "src": "1750:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1750:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3184,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1786:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3186,
                        "src": "1770:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1770:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1749:49:12"
                  },
                  "src": "1729:70:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c8",
                  "id": 3194,
                  "name": "SessionStored",
                  "nameLocation": "1810:13:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3188,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1840:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3194,
                        "src": "1824:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3190,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymentAddress",
                        "nameLocation": "1867:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3194,
                        "src": "1851:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3192,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1891:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3194,
                        "src": "1883:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1883:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1823:75:12"
                  },
                  "src": "1804:95:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be0",
                  "id": 3200,
                  "name": "HostEarningsUpdated",
                  "nameLocation": "1910:19:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3196,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1946:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3200,
                        "src": "1930:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1930:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3198,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalEarned",
                        "nameLocation": "1967:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3200,
                        "src": "1959:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1929:50:12"
                  },
                  "src": "1904:76:12"
                },
                {
                  "body": {
                    "id": 3207,
                    "nodeType": "Block",
                    "src": "2020:2:12",
                    "statements": []
                  },
                  "id": 3208,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2008:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2012:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2008:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3205,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3202,
                        "name": "Ownable",
                        "nameLocations": [
                          "2000:7:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2000:7:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2000:19:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1997:2:12"
                  },
                  "returnParameters": {
                    "id": 3206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2020:0:12"
                  },
                  "scope": 3796,
                  "src": "1986:36:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3238,
                    "nodeType": "Block",
                    "src": "2103:167:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3218,
                                "name": "_caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3210,
                                "src": "2121:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2140:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2132:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3219,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2132:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2132:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2121:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063616c6c65722061646472657373",
                              "id": 3224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2144:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              },
                              "value": "Invalid caller address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                "typeString": "literal_string \"Invalid caller address\""
                              }
                            ],
                            "id": 3217,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2113:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2113:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3226,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:56:12"
                      },
                      {
                        "expression": {
                          "id": 3231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3227,
                              "name": "allowedCallers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3117,
                              "src": "2179:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3229,
                            "indexExpression": {
                              "id": 3228,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3210,
                              "src": "2194:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2179:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3230,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3212,
                            "src": "2205:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2179:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3232,
                        "nodeType": "ExpressionStatement",
                        "src": "2179:32:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3234,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3210,
                              "src": "2247:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3235,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3212,
                              "src": "2256:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3233,
                            "name": "AllowedCallerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3172,
                            "src": "2226:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 3236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2226:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3237,
                        "nodeType": "EmitStatement",
                        "src": "2221:42:12"
                      }
                    ]
                  },
                  "functionSelector": "d8b0e716",
                  "id": 3239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3215,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3214,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2093:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2093:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2093:9:12"
                    }
                  ],
                  "name": "setAllowedCaller",
                  "nameLocation": "2037:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3210,
                        "mutability": "mutable",
                        "name": "_caller",
                        "nameLocation": "2062:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3239,
                        "src": "2054:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3212,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2076:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3239,
                        "src": "2071:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3211,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2071:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:30:12"
                  },
                  "returnParameters": {
                    "id": 3216,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2103:0:12"
                  },
                  "scope": 3796,
                  "src": "2028:242:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3289,
                    "nodeType": "Block",
                    "src": "2415:257:12",
                    "statements": [
                      {
                        "body": {
                          "id": 3287,
                          "nodeType": "Block",
                          "src": "2471:195:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 3268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 3261,
                                        "name": "_callers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3242,
                                        "src": "2493:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 3263,
                                      "indexExpression": {
                                        "id": 3262,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3250,
                                        "src": "2502:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2493:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 3266,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2516:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 3265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2508:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3264,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2508:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3267,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2508:10:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2493:25:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e76616c69642063616c6c65722061646472657373",
                                    "id": 3269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2520:24:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    },
                                    "value": "Invalid caller address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6ca8074b241f285965f8df696b9fe8ebaeea62c50e746ae24dd6bb8bc8c6b3a4",
                                      "typeString": "literal_string \"Invalid caller address\""
                                    }
                                  ],
                                  "id": 3260,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2485:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2485:60:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3271,
                              "nodeType": "ExpressionStatement",
                              "src": "2485:60:12"
                            },
                            {
                              "expression": {
                                "id": 3278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3272,
                                    "name": "allowedCallers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3117,
                                    "src": "2559:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3276,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3273,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3242,
                                      "src": "2574:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3275,
                                    "indexExpression": {
                                      "id": 3274,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3250,
                                      "src": "2583:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2574:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2559:27:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3277,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3244,
                                  "src": "2589:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2559:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3279,
                              "nodeType": "ExpressionStatement",
                              "src": "2559:36:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3281,
                                      "name": "_callers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3242,
                                      "src": "2635:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3283,
                                    "indexExpression": {
                                      "id": 3282,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3250,
                                      "src": "2644:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2635:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3284,
                                    "name": "status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3244,
                                    "src": "2648:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 3280,
                                  "name": "AllowedCallerUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3172,
                                  "src": "2614:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 3285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2614:41:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3286,
                              "nodeType": "EmitStatement",
                              "src": "2609:46:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3253,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3250,
                            "src": "2445:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3254,
                              "name": "_callers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3242,
                              "src": "2449:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 3255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2458:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2449:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2445:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3288,
                        "initializationExpression": {
                          "assignments": [
                            3250
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3250,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2438:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3288,
                              "src": "2430:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3249,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2430:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3252,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2442:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2430:13:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2466:3:12",
                            "subExpression": {
                              "id": 3257,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3250,
                              "src": "2466:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3259,
                          "nodeType": "ExpressionStatement",
                          "src": "2466:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "2425:241:12"
                      }
                    ]
                  },
                  "functionSelector": "73f9a5d7",
                  "id": 3290,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3247,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3246,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2405:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2405:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2405:9:12"
                    }
                  ],
                  "name": "setAllowedCallers",
                  "nameLocation": "2336:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3242,
                        "mutability": "mutable",
                        "name": "_callers",
                        "nameLocation": "2373:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3290,
                        "src": "2354:27:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2354:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3241,
                          "nodeType": "ArrayTypeName",
                          "src": "2354:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3244,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "2388:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3290,
                        "src": "2383:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3243,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2353:42:12"
                  },
                  "returnParameters": {
                    "id": 3248,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2415:0:12"
                  },
                  "scope": 3796,
                  "src": "2327:345:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3300,
                    "nodeType": "Block",
                    "src": "2780:42:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "2797:18:12",
                          "subExpression": {
                            "id": 3297,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "2799:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3296,
                        "id": 3299,
                        "nodeType": "Return",
                        "src": "2790:25:12"
                      }
                    ]
                  },
                  "functionSelector": "5290ffc6",
                  "id": 3301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3293,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3292,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2750:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3166,
                        "src": "2750:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2750:11:12"
                    }
                  ],
                  "name": "incrementNetworkId",
                  "nameLocation": "2720:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3291,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2738:2:12"
                  },
                  "returnParameters": {
                    "id": 3296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3295,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3301,
                        "src": "2771:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:9:12"
                  },
                  "scope": 3796,
                  "src": "2711:111:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3415,
                    "nodeType": "Block",
                    "src": "2903:968:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3312,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3303,
                                "src": "2921:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2926:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2921:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206e6574776f726b204944",
                              "id": 3315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2929:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              },
                              "value": "Invalid network ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e0378fd91276cf2d1eb2c93fd43f1222cc240c032c3dc15352aeace0c1cd550",
                                "typeString": "literal_string \"Invalid network ID\""
                              }
                            ],
                            "id": 3311,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2913:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2913:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3317,
                        "nodeType": "ExpressionStatement",
                        "src": "2913:37:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3319,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "2968:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2972:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3085,
                                "src": "2968:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2995:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2987:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3321,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2987:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2987:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2968:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 3326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2999:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 3318,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2960:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3328,
                        "nodeType": "ExpressionStatement",
                        "src": "2960:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3330,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3040:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3044:15:12",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3087,
                                "src": "3040:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3062:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3040:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 3334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3065:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 3329,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3032:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3032:64:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3336,
                        "nodeType": "ExpressionStatement",
                        "src": "3032:64:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3340,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3306,
                                        "src": "3120:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 3341,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3124:11:12",
                                      "memberName": "mongoDataId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3089,
                                      "src": "3120:15:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 3339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3114:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 3338,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3114:5:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3114:22:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 3343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3137:6:12",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3114:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3146:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3114:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6f6e676f446174614944207265717569726564",
                              "id": 3346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3149:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              },
                              "value": "MongoDataID required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63e0a91235b82882ae36fd20b4e9aa5277bcaaee4744335f869888bfb6cf38a6",
                                "typeString": "literal_string \"MongoDataID required\""
                              }
                            ],
                            "id": 3337,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3106:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3106:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3348,
                        "nodeType": "ExpressionStatement",
                        "src": "3106:66:12"
                      },
                      {
                        "assignments": [
                          3350
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3350,
                            "mutability": "mutable",
                            "name": "isNewNetwork",
                            "nameLocation": "3188:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3415,
                            "src": "3183:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3349,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3183:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3355,
                        "initialValue": {
                          "id": 3354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3203:18:12",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3351,
                              "name": "networkExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3144,
                              "src": "3204:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3353,
                            "indexExpression": {
                              "id": 3352,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3303,
                              "src": "3218:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3204:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3183:38:12"
                      },
                      {
                        "expression": {
                          "id": 3381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3356,
                              "name": "networks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3126,
                              "src": "3240:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                              }
                            },
                            "id": 3358,
                            "indexExpression": {
                              "id": 3357,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3303,
                              "src": "3249:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3240:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage",
                              "typeString": "struct ZaaNetStorage.Network storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3360,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3281:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3285:2:12",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3083,
                                "src": "3281:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3362,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3314:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3318:11:12",
                                "memberName": "hostAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3085,
                                "src": "3314:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3364,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3360:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3364:15:12",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3087,
                                "src": "3360:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3366,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3406:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3410:11:12",
                                "memberName": "mongoDataId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3089,
                                "src": "3406:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3368,
                                  "name": "net",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "3445:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Network calldata"
                                  }
                                },
                                "id": 3369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3449:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "3445:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "condition": {
                                  "id": 3370,
                                  "name": "isNewNetwork",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3350,
                                  "src": "3482:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3373,
                                      "name": "networks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3126,
                                      "src": "3515:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                        "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                      }
                                    },
                                    "id": 3375,
                                    "indexExpression": {
                                      "id": 3374,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3303,
                                      "src": "3524:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3515:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Network_$3096_storage",
                                      "typeString": "struct ZaaNetStorage.Network storage ref"
                                    }
                                  },
                                  "id": 3376,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3528:9:12",
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3093,
                                  "src": "3515:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3482:55:12",
                                "trueExpression": {
                                  "expression": {
                                    "id": 3371,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3497:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3503:9:12",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3497:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3378,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3562:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3568:9:12",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3562:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3359,
                              "name": "Network",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3096,
                              "src": "3255:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Network_$3096_storage_ptr_$",
                                "typeString": "type(struct ZaaNetStorage.Network storage pointer)"
                              }
                            },
                            "id": 3380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3277:2:12",
                              "3301:11:12",
                              "3343:15:12",
                              "3393:11:12",
                              "3435:8:12",
                              "3471:9:12",
                              "3551:9:12"
                            ],
                            "names": [
                              "id",
                              "hostAddress",
                              "pricePerSession",
                              "mongoDataId",
                              "isActive",
                              "createdAt",
                              "updatedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3255:333:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network memory"
                            }
                          },
                          "src": "3240:348:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "id": 3382,
                        "nodeType": "ExpressionStatement",
                        "src": "3240:348:12"
                      },
                      {
                        "condition": {
                          "id": 3383,
                          "name": "isNewNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3350,
                          "src": "3603:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3413,
                          "nodeType": "Block",
                          "src": "3800:65:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3408,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3303,
                                    "src": "3834:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3409,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3306,
                                      "src": "3838:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3842:11:12",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3085,
                                    "src": "3838:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3407,
                                  "name": "NetworkUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3186,
                                  "src": "3819:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 3411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3819:35:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3412,
                              "nodeType": "EmitStatement",
                              "src": "3814:40:12"
                            }
                          ]
                        },
                        "id": 3414,
                        "nodeType": "IfStatement",
                        "src": "3599:266:12",
                        "trueBody": {
                          "id": 3406,
                          "nodeType": "Block",
                          "src": "3617:177:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3384,
                                    "name": "networkExists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3144,
                                    "src": "3631:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 3386,
                                  "indexExpression": {
                                    "id": 3385,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3303,
                                    "src": "3645:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3631:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3651:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3631:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3389,
                              "nodeType": "ExpressionStatement",
                              "src": "3631:24:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3395,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3303,
                                    "src": "3706:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3390,
                                      "name": "hostNetworkIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3140,
                                      "src": "3669:14:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 3393,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 3391,
                                        "name": "net",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3306,
                                        "src": "3684:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                          "typeString": "struct ZaaNetStorage.Network calldata"
                                        }
                                      },
                                      "id": 3392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3688:11:12",
                                      "memberName": "hostAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3085,
                                      "src": "3684:15:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3669:31:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 3394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3701:4:12",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "3669:36:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 3396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3669:40:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3397,
                              "nodeType": "ExpressionStatement",
                              "src": "3669:40:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3399,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3303,
                                    "src": "3742:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3400,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3306,
                                      "src": "3746:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3750:11:12",
                                    "memberName": "hostAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3085,
                                    "src": "3746:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3402,
                                      "name": "net",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3306,
                                      "src": "3763:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                                        "typeString": "struct ZaaNetStorage.Network calldata"
                                      }
                                    },
                                    "id": 3403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3767:15:12",
                                    "memberName": "pricePerSession",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3087,
                                    "src": "3763:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3398,
                                  "name": "NetworkStored",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3180,
                                  "src": "3728:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256)"
                                  }
                                },
                                "id": 3404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3728:55:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3405,
                              "nodeType": "EmitStatement",
                              "src": "3723:60:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "50c0d41c",
                  "id": 3416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3309,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3308,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "2891:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3166,
                        "src": "2891:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2891:11:12"
                    }
                  ],
                  "name": "setNetwork",
                  "nameLocation": "2837:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3303,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "2856:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3416,
                        "src": "2848:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2848:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3306,
                        "mutability": "mutable",
                        "name": "net",
                        "nameLocation": "2877:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3416,
                        "src": "2860:20:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3305,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3304,
                            "name": "Network",
                            "nameLocations": [
                              "2860:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "2860:7:12"
                          },
                          "referencedDeclaration": 3096,
                          "src": "2860:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2847:34:12"
                  },
                  "returnParameters": {
                    "id": 3310,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2903:0:12"
                  },
                  "scope": 3796,
                  "src": "2828:1043:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3435,
                    "nodeType": "Block",
                    "src": "3948:98:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3425,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "3966:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3427,
                              "indexExpression": {
                                "id": 3426,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3418,
                                "src": "3980:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3966:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 3428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3985:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 3424,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3958:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3958:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3430,
                        "nodeType": "ExpressionStatement",
                        "src": "3958:52:12"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3431,
                            "name": "networks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "4027:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                              "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                            }
                          },
                          "id": 3433,
                          "indexExpression": {
                            "id": 3432,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3418,
                            "src": "4036:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4027:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage",
                            "typeString": "struct ZaaNetStorage.Network storage ref"
                          }
                        },
                        "functionReturnParameters": 3423,
                        "id": 3434,
                        "nodeType": "Return",
                        "src": "4020:19:12"
                      }
                    ]
                  },
                  "functionSelector": "95ea5717",
                  "id": 3436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "3886:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3418,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3905:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3436,
                        "src": "3897:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3417,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3896:12:12"
                  },
                  "returnParameters": {
                    "id": 3423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3422,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3436,
                        "src": "3932:14:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 3421,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3420,
                            "name": "Network",
                            "nameLocations": [
                              "3932:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "3932:7:12"
                          },
                          "referencedDeclaration": 3096,
                          "src": "3932:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3931:16:12"
                  },
                  "scope": 3796,
                  "src": "3877:169:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3531,
                    "nodeType": "Block",
                    "src": "4192:538:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3450,
                                "name": "limit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3440,
                                "src": "4210:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 3451,
                                "name": "MAX_NETWORKS_PER_QUERY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3078,
                                "src": "4219:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4210:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c696d697420746f6f2068696768",
                              "id": 3453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4243:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c010ca91b8cfc077727fb7b82ca9e45f6d8d6863a057f32ba1e581972a2ca6cb",
                                "typeString": "literal_string \"Limit too high\""
                              },
                              "value": "Limit too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c010ca91b8cfc077727fb7b82ca9e45f6d8d6863a057f32ba1e581972a2ca6cb",
                                "typeString": "literal_string \"Limit too high\""
                              }
                            ],
                            "id": 3449,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4202:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4202:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3455,
                        "nodeType": "ExpressionStatement",
                        "src": "4202:58:12"
                      },
                      {
                        "expression": {
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3456,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3447,
                            "src": "4279:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3457,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "4287:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4279:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3459,
                        "nodeType": "ExpressionStatement",
                        "src": "4279:24:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3460,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4317:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 3461,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3447,
                            "src": "4327:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4317:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3473,
                        "nodeType": "IfStatement",
                        "src": "4313:78:12",
                        "trueBody": {
                          "id": 3472,
                          "nodeType": "Block",
                          "src": "4334:57:12",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3467,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4370:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3466,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4356:13:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                                      },
                                      "typeName": {
                                        "baseType": {
                                          "id": 3464,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 3463,
                                            "name": "Network",
                                            "nameLocations": [
                                              "4360:7:12"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 3096,
                                            "src": "4360:7:12"
                                          },
                                          "referencedDeclaration": 3096,
                                          "src": "4360:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                            "typeString": "struct ZaaNetStorage.Network"
                                          }
                                        },
                                        "id": 3465,
                                        "nodeType": "ArrayTypeName",
                                        "src": "4360:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                          "typeString": "struct ZaaNetStorage.Network[]"
                                        }
                                      }
                                    },
                                    "id": 3468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4356:16:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  {
                                    "id": 3469,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3447,
                                    "src": "4374:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3470,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4355:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                                }
                              },
                              "functionReturnParameters": 3448,
                              "id": 3471,
                              "nodeType": "Return",
                              "src": "4348:32:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3475
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3475,
                            "mutability": "mutable",
                            "name": "end",
                            "nameLocation": "4409:3:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3531,
                            "src": "4401:11:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3474,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4401:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3479,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3476,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4415:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3477,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3440,
                            "src": "4424:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4415:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4401:28:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3480,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3475,
                            "src": "4443:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3481,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3447,
                            "src": "4449:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4443:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3488,
                        "nodeType": "IfStatement",
                        "src": "4439:53:12",
                        "trueBody": {
                          "id": 3487,
                          "nodeType": "Block",
                          "src": "4456:36:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3483,
                                  "name": "end",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3475,
                                  "src": "4470:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3484,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3447,
                                  "src": "4476:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4470:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3486,
                              "nodeType": "ExpressionStatement",
                              "src": "4470:11:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3493
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3493,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4519:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3531,
                            "src": "4502:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3491,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3490,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4502:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "4502:7:12"
                                },
                                "referencedDeclaration": 3096,
                                "src": "4502:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 3492,
                              "nodeType": "ArrayTypeName",
                              "src": "4502:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3502,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3498,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3475,
                                "src": "4542:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 3499,
                                "name": "offset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3438,
                                "src": "4548:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4542:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4528:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct ZaaNetStorage.Network memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3495,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3494,
                                  "name": "Network",
                                  "nameLocations": [
                                    "4532:7:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3096,
                                  "src": "4532:7:12"
                                },
                                "referencedDeclaration": 3096,
                                "src": "4532:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                  "typeString": "struct ZaaNetStorage.Network"
                                }
                              },
                              "id": 3496,
                              "nodeType": "ArrayTypeName",
                              "src": "4532:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network[]"
                              }
                            }
                          },
                          "id": 3501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4528:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4502:53:12"
                      },
                      {
                        "body": {
                          "id": 3525,
                          "nodeType": "Block",
                          "src": "4604:87:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 3523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3513,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3493,
                                    "src": "4618:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ZaaNetStorage.Network memory[] memory"
                                    }
                                  },
                                  "id": 3517,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3514,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3504,
                                      "src": "4625:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 3515,
                                      "name": "offset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3438,
                                      "src": "4629:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4625:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4618:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3518,
                                    "name": "networks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3126,
                                    "src": "4639:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                    }
                                  },
                                  "id": 3522,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3519,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3504,
                                      "src": "4648:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 3520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4652:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4648:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4639:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_storage",
                                    "typeString": "struct ZaaNetStorage.Network storage ref"
                                  }
                                },
                                "src": "4618:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3524,
                              "nodeType": "ExpressionStatement",
                              "src": "4618:36:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3507,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3504,
                            "src": "4590:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3508,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3475,
                            "src": "4594:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4590:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3526,
                        "initializationExpression": {
                          "assignments": [
                            3504
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3504,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4578:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3526,
                              "src": "4570:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3503,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4570:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3506,
                          "initialValue": {
                            "id": 3505,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4582:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4570:18:12"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4599:3:12",
                            "subExpression": {
                              "id": 3510,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3504,
                              "src": "4599:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3512,
                          "nodeType": "ExpressionStatement",
                          "src": "4599:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "4565:126:12"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3527,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3493,
                              "src": "4709:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ZaaNetStorage.Network memory[] memory"
                              }
                            },
                            {
                              "id": 3528,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3447,
                              "src": "4717:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3529,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4708:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct ZaaNetStorage.Network memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 3448,
                        "id": 3530,
                        "nodeType": "Return",
                        "src": "4701:22:12"
                      }
                    ]
                  },
                  "functionSelector": "fa9c81a4",
                  "id": 3532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "4061:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3438,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "4099:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3532,
                        "src": "4091:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4091:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3440,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "4124:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3532,
                        "src": "4116:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4116:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4081:54:12"
                  },
                  "returnParameters": {
                    "id": 3448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3445,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3532,
                        "src": "4159:16:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3443,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3442,
                              "name": "Network",
                              "nameLocations": [
                                "4159:7:12"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3096,
                              "src": "4159:7:12"
                            },
                            "referencedDeclaration": 3096,
                            "src": "4159:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 3444,
                          "nodeType": "ArrayTypeName",
                          "src": "4159:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3447,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "4185:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3532,
                        "src": "4177:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3446,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4177:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4158:33:12"
                  },
                  "scope": 3796,
                  "src": "4052:678:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3544,
                    "nodeType": "Block",
                    "src": "4823:51:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3540,
                            "name": "hostNetworkIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3140,
                            "src": "4840:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 3542,
                          "indexExpression": {
                            "id": 3541,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3534,
                            "src": "4855:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4840:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 3539,
                        "id": 3543,
                        "nodeType": "Return",
                        "src": "4833:34:12"
                      }
                    ]
                  },
                  "functionSelector": "79f0dc57",
                  "id": 3545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "4745:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3534,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "4769:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "4761:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4761:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4760:21:12"
                  },
                  "returnParameters": {
                    "id": 3539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3538,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "4805:16:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3536,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4805:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3537,
                          "nodeType": "ArrayTypeName",
                          "src": "4805:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4804:18:12"
                  },
                  "scope": 3796,
                  "src": "4736:138:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3555,
                    "nodeType": "Block",
                    "src": "4982:42:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "4999:18:12",
                          "subExpression": {
                            "id": 3552,
                            "name": "sessionIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3121,
                            "src": "5001:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3551,
                        "id": 3554,
                        "nodeType": "Return",
                        "src": "4992:25:12"
                      }
                    ]
                  },
                  "functionSelector": "cc507641",
                  "id": 3556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3548,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3547,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "4952:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3166,
                        "src": "4952:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4952:11:12"
                    }
                  ],
                  "name": "incrementSessionId",
                  "nameLocation": "4922:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4940:2:12"
                  },
                  "returnParameters": {
                    "id": 3551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3556,
                        "src": "4973:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4973:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4972:9:12"
                  },
                  "scope": 3796,
                  "src": "4913:111:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3620,
                    "nodeType": "Block",
                    "src": "5109:422:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3567,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3558,
                                "src": "5127:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5132:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5127:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073657373696f6e204944",
                              "id": 3570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5135:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d4fb1af69ee9e7e917151c524c9a8fc4c901128adce661c49fad2853c9ec69b8",
                                "typeString": "literal_string \"Invalid session ID\""
                              },
                              "value": "Invalid session ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d4fb1af69ee9e7e917151c524c9a8fc4c901128adce661c49fad2853c9ec69b8",
                                "typeString": "literal_string \"Invalid session ID\""
                              }
                            ],
                            "id": 3566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5119:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5119:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3572,
                        "nodeType": "ExpressionStatement",
                        "src": "5119:37:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3574,
                                  "name": "session",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3561,
                                  "src": "5174:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Session calldata"
                                  }
                                },
                                "id": 3575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5182:14:12",
                                "memberName": "paymentAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3102,
                                "src": "5174:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5208:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5200:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3576,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5200:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5200:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5174:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e742061646472657373",
                              "id": 3581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5212:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              },
                              "value": "Invalid payment address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c30ffd4d4e62ad6cb5c99115837f313e332d04d4c16e9c74b308088b453c5761",
                                "typeString": "literal_string \"Invalid payment address\""
                              }
                            ],
                            "id": 3573,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5166:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5166:72:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3583,
                        "nodeType": "ExpressionStatement",
                        "src": "5166:72:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3585,
                                  "name": "session",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3561,
                                  "src": "5256:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Session calldata"
                                  }
                                },
                                "id": 3586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5264:6:12",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3104,
                                "src": "5256:14:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5273:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5256:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 3589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5276:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 3584,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5248:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5248:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3591,
                        "nodeType": "ExpressionStatement",
                        "src": "5248:60:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3593,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "5326:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3596,
                              "indexExpression": {
                                "expression": {
                                  "id": 3594,
                                  "name": "session",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3561,
                                  "src": "5340:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                                    "typeString": "struct ZaaNetStorage.Session calldata"
                                  }
                                },
                                "id": 3595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5348:9:12",
                                "memberName": "networkId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3100,
                                "src": "5340:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5326:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 3597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5360:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 3592,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5318:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5318:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3599,
                        "nodeType": "ExpressionStatement",
                        "src": "5318:67:12"
                      },
                      {
                        "expression": {
                          "id": 3604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3600,
                              "name": "sessions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3131,
                              "src": "5396:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$3113_storage_$",
                                "typeString": "mapping(uint256 => struct ZaaNetStorage.Session storage ref)"
                              }
                            },
                            "id": 3602,
                            "indexExpression": {
                              "id": 3601,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "5405:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5396:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Session_$3113_storage",
                              "typeString": "struct ZaaNetStorage.Session storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3603,
                            "name": "session",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3561,
                            "src": "5411:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                              "typeString": "struct ZaaNetStorage.Session calldata"
                            }
                          },
                          "src": "5396:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage",
                            "typeString": "struct ZaaNetStorage.Session storage ref"
                          }
                        },
                        "id": 3605,
                        "nodeType": "ExpressionStatement",
                        "src": "5396:22:12"
                      },
                      {
                        "expression": {
                          "id": 3610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3606,
                              "name": "sessionExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3148,
                              "src": "5428:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 3608,
                            "indexExpression": {
                              "id": 3607,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "5442:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5428:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5448:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5428:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3611,
                        "nodeType": "ExpressionStatement",
                        "src": "5428:24:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3613,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "5481:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3614,
                                "name": "session",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3561,
                                "src": "5485:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                                  "typeString": "struct ZaaNetStorage.Session calldata"
                                }
                              },
                              "id": 3615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5493:14:12",
                              "memberName": "paymentAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3102,
                              "src": "5485:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3616,
                                "name": "session",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3561,
                                "src": "5509:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                                  "typeString": "struct ZaaNetStorage.Session calldata"
                                }
                              },
                              "id": 3617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5517:6:12",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3104,
                              "src": "5509:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3612,
                            "name": "SessionStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3194,
                            "src": "5467:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 3618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5467:57:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3619,
                        "nodeType": "EmitStatement",
                        "src": "5462:62:12"
                      }
                    ]
                  },
                  "functionSelector": "3b9a8016",
                  "id": 3621,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3564,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3563,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5097:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3166,
                        "src": "5097:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5097:11:12"
                    }
                  ],
                  "name": "setSession",
                  "nameLocation": "5039:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3558,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "5058:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3621,
                        "src": "5050:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5050:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3561,
                        "mutability": "mutable",
                        "name": "session",
                        "nameLocation": "5079:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3621,
                        "src": "5062:24:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 3560,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3559,
                            "name": "Session",
                            "nameLocations": [
                              "5062:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "5062:7:12"
                          },
                          "referencedDeclaration": 3113,
                          "src": "5062:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5049:38:12"
                  },
                  "returnParameters": {
                    "id": 3565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5109:0:12"
                  },
                  "scope": 3796,
                  "src": "5030:501:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3640,
                    "nodeType": "Block",
                    "src": "5608:98:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3630,
                                "name": "sessionExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3148,
                                "src": "5626:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3632,
                              "indexExpression": {
                                "id": 3631,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3623,
                                "src": "5640:2:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5626:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53657373696f6e20646f6573206e6f74206578697374",
                              "id": 3633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5645:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd3b49fb6fc2b1ce7721f40a395e8443265bec6722e384cbebbb0e2e2aa3293e",
                                "typeString": "literal_string \"Session does not exist\""
                              },
                              "value": "Session does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd3b49fb6fc2b1ce7721f40a395e8443265bec6722e384cbebbb0e2e2aa3293e",
                                "typeString": "literal_string \"Session does not exist\""
                              }
                            ],
                            "id": 3629,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5618:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5618:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3635,
                        "nodeType": "ExpressionStatement",
                        "src": "5618:52:12"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3636,
                            "name": "sessions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3131,
                            "src": "5687:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$3113_storage_$",
                              "typeString": "mapping(uint256 => struct ZaaNetStorage.Session storage ref)"
                            }
                          },
                          "id": 3638,
                          "indexExpression": {
                            "id": 3637,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3623,
                            "src": "5696:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5687:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage",
                            "typeString": "struct ZaaNetStorage.Session storage ref"
                          }
                        },
                        "functionReturnParameters": 3628,
                        "id": 3639,
                        "nodeType": "Return",
                        "src": "5680:19:12"
                      }
                    ]
                  },
                  "functionSelector": "402ff0db",
                  "id": 3641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSession",
                  "nameLocation": "5546:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3623,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "5565:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3641,
                        "src": "5557:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5557:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5556:12:12"
                  },
                  "returnParameters": {
                    "id": 3628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3627,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3641,
                        "src": "5592:14:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 3626,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3625,
                            "name": "Session",
                            "nameLocations": [
                              "5592:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "5592:7:12"
                          },
                          "referencedDeclaration": 3113,
                          "src": "5592:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5591:16:12"
                  },
                  "scope": 3796,
                  "src": "5537:169:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3682,
                    "nodeType": "Block",
                    "src": "5837:265:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3653,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3643,
                                "src": "5855:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3656,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5878:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5870:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3654,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5870:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5870:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5855:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420686f73742061646472657373",
                              "id": 3659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5882:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              },
                              "value": "Invalid host address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf30c1aa339cd7020288e3bb94785f778c18718a4e929a56fce6eb86fc38673",
                                "typeString": "literal_string \"Invalid host address\""
                              }
                            ],
                            "id": 3652,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5847:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5847:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3661,
                        "nodeType": "ExpressionStatement",
                        "src": "5847:58:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3663,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3645,
                                "src": "5923:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5932:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5923:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                              "id": 3666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5935:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              },
                              "value": "Amount must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                                "typeString": "literal_string \"Amount must be greater than 0\""
                              }
                            ],
                            "id": 3662,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5915:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5915:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3668,
                        "nodeType": "ExpressionStatement",
                        "src": "5915:52:12"
                      },
                      {
                        "expression": {
                          "id": 3673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3669,
                              "name": "hostEarnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3135,
                              "src": "5986:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3671,
                            "indexExpression": {
                              "id": 3670,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "5999:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5986:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3672,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3645,
                            "src": "6015:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5986:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3674,
                        "nodeType": "ExpressionStatement",
                        "src": "5986:35:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3676,
                              "name": "hostAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "6056:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3677,
                                "name": "hostEarnings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3135,
                                "src": "6069:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3679,
                              "indexExpression": {
                                "id": 3678,
                                "name": "hostAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3643,
                                "src": "6082:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6069:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3675,
                            "name": "HostEarningsUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3200,
                            "src": "6036:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6036:59:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3681,
                        "nodeType": "EmitStatement",
                        "src": "6031:64:12"
                      }
                    ]
                  },
                  "functionSelector": "e1c7a8aa",
                  "id": 3683,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3648,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3647,
                        "name": "onlyAllowed",
                        "nameLocations": [
                          "5812:11:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3166,
                        "src": "5812:11:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5812:11:12"
                    },
                    {
                      "id": 3650,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3649,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5824:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "5824:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5824:12:12"
                    }
                  ],
                  "name": "increaseHostEarnings",
                  "nameLocation": "5745:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3643,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "5774:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3683,
                        "src": "5766:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5766:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3645,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5795:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3683,
                        "src": "5787:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5787:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5765:37:12"
                  },
                  "returnParameters": {
                    "id": 3651,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5837:0:12"
                  },
                  "scope": 3796,
                  "src": "5736:366:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3694,
                    "nodeType": "Block",
                    "src": "6186:49:12",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3690,
                            "name": "hostEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3135,
                            "src": "6203:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3692,
                          "indexExpression": {
                            "id": 3691,
                            "name": "hostAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3685,
                            "src": "6216:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6203:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3689,
                        "id": 3693,
                        "nodeType": "Return",
                        "src": "6196:32:12"
                      }
                    ]
                  },
                  "functionSelector": "6d65573f",
                  "id": 3695,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostEarnings",
                  "nameLocation": "6117:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3686,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3685,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "6141:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3695,
                        "src": "6133:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6133:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6132:21:12"
                  },
                  "returnParameters": {
                    "id": 3689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3688,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3695,
                        "src": "6177:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6177:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6176:9:12"
                  },
                  "scope": 3796,
                  "src": "6108:127:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3756,
                    "nodeType": "Block",
                    "src": "6447:449:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3706,
                            "name": "totalNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3698,
                            "src": "6457:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3707,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "6473:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6457:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3709,
                        "nodeType": "ExpressionStatement",
                        "src": "6457:32:12"
                      },
                      {
                        "expression": {
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3710,
                            "name": "totalSessions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3700,
                            "src": "6499:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3711,
                            "name": "sessionIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3121,
                            "src": "6515:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6499:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3713,
                        "nodeType": "ExpressionStatement",
                        "src": "6499:32:12"
                      },
                      {
                        "body": {
                          "id": 3733,
                          "nodeType": "Block",
                          "src": "6636:99:12",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3724,
                                    "name": "networks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3126,
                                    "src": "6654:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                    }
                                  },
                                  "id": 3726,
                                  "indexExpression": {
                                    "id": 3725,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3715,
                                    "src": "6663:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6654:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_storage",
                                    "typeString": "struct ZaaNetStorage.Network storage ref"
                                  }
                                },
                                "id": 3727,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6666:8:12",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3091,
                                "src": "6654:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3732,
                              "nodeType": "IfStatement",
                              "src": "6650:75:12",
                              "trueBody": {
                                "id": 3731,
                                "nodeType": "Block",
                                "src": "6676:49:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "6694:16:12",
                                      "subExpression": {
                                        "id": 3728,
                                        "name": "activeNetworks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3702,
                                        "src": "6694:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3730,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6694:16:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3718,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3715,
                            "src": "6608:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 3719,
                            "name": "networkIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "6613:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6608:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3734,
                        "initializationExpression": {
                          "assignments": [
                            3715
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3715,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6601:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3734,
                              "src": "6593:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3714,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6593:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3717,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 3716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6605:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6593:13:12"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 3722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6631:3:12",
                            "subExpression": {
                              "id": 3721,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3715,
                              "src": "6631:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3723,
                          "nodeType": "ExpressionStatement",
                          "src": "6631:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "6588:147:12"
                      },
                      {
                        "body": {
                          "id": 3754,
                          "nodeType": "Block",
                          "src": "6793:97:12",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3745,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3131,
                                    "src": "6811:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$3113_storage_$",
                                      "typeString": "mapping(uint256 => struct ZaaNetStorage.Session storage ref)"
                                    }
                                  },
                                  "id": 3747,
                                  "indexExpression": {
                                    "id": 3746,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3736,
                                    "src": "6820:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6811:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$3113_storage",
                                    "typeString": "struct ZaaNetStorage.Session storage ref"
                                  }
                                },
                                "id": 3748,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6823:6:12",
                                "memberName": "active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3106,
                                "src": "6811:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3753,
                              "nodeType": "IfStatement",
                              "src": "6807:73:12",
                              "trueBody": {
                                "id": 3752,
                                "nodeType": "Block",
                                "src": "6831:49:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3750,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "6849:16:12",
                                      "subExpression": {
                                        "id": 3749,
                                        "name": "activeSessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3704,
                                        "src": "6849:14:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3751,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6849:16:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3739,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "6765:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 3740,
                            "name": "sessionIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3121,
                            "src": "6770:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6765:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3755,
                        "initializationExpression": {
                          "assignments": [
                            3736
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3736,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6758:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 3755,
                              "src": "6750:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3735,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6750:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3738,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 3737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6762:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6750:13:12"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 3743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6788:3:12",
                            "subExpression": {
                              "id": 3742,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3736,
                              "src": "6788:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3744,
                          "nodeType": "ExpressionStatement",
                          "src": "6788:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "6745:145:12"
                      }
                    ]
                  },
                  "functionSelector": "c59d4847",
                  "id": 3757,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStats",
                  "nameLocation": "6281:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6289:2:12"
                  },
                  "returnParameters": {
                    "id": 3705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3698,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "6332:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3757,
                        "src": "6324:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3697,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6324:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3700,
                        "mutability": "mutable",
                        "name": "totalSessions",
                        "nameLocation": "6363:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3757,
                        "src": "6355:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3699,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6355:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3702,
                        "mutability": "mutable",
                        "name": "activeNetworks",
                        "nameLocation": "6394:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3757,
                        "src": "6386:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3701,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6386:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3704,
                        "mutability": "mutable",
                        "name": "activeSessions",
                        "nameLocation": "6426:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3757,
                        "src": "6418:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6418:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6314:132:12"
                  },
                  "scope": 3796,
                  "src": "6272:624:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3794,
                    "nodeType": "Block",
                    "src": "7026:252:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3765,
                                "name": "networkExists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "7044:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 3767,
                              "indexExpression": {
                                "id": 3766,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "7058:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7044:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b20646f6573206e6f74206578697374",
                              "id": 3768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7070:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              },
                              "value": "Network does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b08520721f5fde90e0bfd972e15812464d2434639e241fa8521946ebbcf687",
                                "typeString": "literal_string \"Network does not exist\""
                              }
                            ],
                            "id": 3764,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7036:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7036:59:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3770,
                        "nodeType": "ExpressionStatement",
                        "src": "7036:59:12"
                      },
                      {
                        "expression": {
                          "id": 3776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3771,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3126,
                                "src": "7105:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 3773,
                              "indexExpression": {
                                "id": 3772,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "7114:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7105:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 3774,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7125:8:12",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3091,
                            "src": "7105:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7136:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "7105:36:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3777,
                        "nodeType": "ExpressionStatement",
                        "src": "7105:36:12"
                      },
                      {
                        "expression": {
                          "id": 3784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3778,
                                "name": "networks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3126,
                                "src": "7151:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                  "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                }
                              },
                              "id": 3780,
                              "indexExpression": {
                                "id": 3779,
                                "name": "networkId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "7160:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7151:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage",
                                "typeString": "struct ZaaNetStorage.Network storage ref"
                              }
                            },
                            "id": 3781,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7171:9:12",
                            "memberName": "updatedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3095,
                            "src": "7151:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3782,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7183:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7189:9:12",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7183:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7151:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3785,
                        "nodeType": "ExpressionStatement",
                        "src": "7151:47:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3787,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3759,
                              "src": "7228:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 3788,
                                  "name": "networks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3126,
                                  "src": "7239:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Network_$3096_storage_$",
                                    "typeString": "mapping(uint256 => struct ZaaNetStorage.Network storage ref)"
                                  }
                                },
                                "id": 3790,
                                "indexExpression": {
                                  "id": 3789,
                                  "name": "networkId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3759,
                                  "src": "7248:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7239:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_storage",
                                  "typeString": "struct ZaaNetStorage.Network storage ref"
                                }
                              },
                              "id": 3791,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7259:11:12",
                              "memberName": "hostAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3085,
                              "src": "7239:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3786,
                            "name": "NetworkUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3186,
                            "src": "7213:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 3792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7213:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3793,
                        "nodeType": "EmitStatement",
                        "src": "7208:63:12"
                      }
                    ]
                  },
                  "functionSelector": "5a2f406f",
                  "id": 3795,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3762,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3761,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7016:9:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7016:9:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7016:9:12"
                    }
                  ],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "6961:26:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3759,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "6996:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3795,
                        "src": "6988:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3758,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6988:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6987:19:12"
                  },
                  "returnParameters": {
                    "id": 3763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7026:0:12"
                  },
                  "scope": 3796,
                  "src": "6952:326:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3797,
              "src": "172:7108:12",
              "usedErrors": [
                13,
                18,
                1055
              ],
              "usedEvents": [
                24,
                3172,
                3180,
                3186,
                3194,
                3200
              ]
            }
          ],
          "src": "32:7248:12"
        },
        "id": 12
      },
      "contracts/ZaaNetVoucher.sol": {
        "ast": {
          "absolutePath": "contracts/ZaaNetVoucher.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1110
            ],
            "TestUSDT": [
              1145
            ],
            "ZaaNetStorage": [
              3796
            ],
            "ZaaNetVoucher": [
              3942
            ]
          },
          "id": 3943,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3798,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3799,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3943,
              "sourceUnit": 878,
              "src": "58:56:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 3800,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3943,
              "sourceUnit": 1111,
              "src": "115:59:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 3801,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3943,
              "sourceUnit": 148,
              "src": "175:52:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "./ZaaNetStorage.sol",
              "id": 3802,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3943,
              "sourceUnit": 3797,
              "src": "229:29:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/TestUSDT.sol",
              "file": "./TestUSDT.sol",
              "id": 3803,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3943,
              "sourceUnit": 1146,
              "src": "259:24:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3804,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "311:15:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "311:15:13"
                  },
                  "id": 3805,
                  "nodeType": "InheritanceSpecifier",
                  "src": "311:15:13"
                },
                {
                  "baseName": {
                    "id": 3806,
                    "name": "Ownable",
                    "nameLocations": [
                      "328:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "328:7:13"
                  },
                  "id": 3807,
                  "nodeType": "InheritanceSpecifier",
                  "src": "328:7:13"
                }
              ],
              "canonicalName": "ZaaNetVoucher",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3942,
              "linearizedBaseContracts": [
                3942,
                147,
                933,
                1110
              ],
              "name": "ZaaNetVoucher",
              "nameLocation": "294:13:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "2f48ab7d",
                  "id": 3810,
                  "mutability": "mutable",
                  "name": "usdt",
                  "nameLocation": "404:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3942,
                  "src": "388:20:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestUSDT_$1145",
                    "typeString": "contract TestUSDT"
                  },
                  "typeName": {
                    "id": 3809,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3808,
                      "name": "TestUSDT",
                      "nameLocations": [
                        "388:8:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1145,
                      "src": "388:8:13"
                    },
                    "referencedDeclaration": 1145,
                    "src": "388:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestUSDT_$1145",
                      "typeString": "contract TestUSDT"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4626402b",
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "treasuryWallet",
                  "nameLocation": "430:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3942,
                  "src": "415:29:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4d59f94c",
                  "id": 3815,
                  "mutability": "mutable",
                  "name": "zaaNetStorage",
                  "nameLocation": "471:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3942,
                  "src": "450:34:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                    "typeString": "contract ZaaNetStorage"
                  },
                  "typeName": {
                    "id": 3814,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3813,
                      "name": "ZaaNetStorage",
                      "nameLocations": [
                        "450:13:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3796,
                      "src": "450:13:13"
                    },
                    "referencedDeclaration": 3796,
                    "src": "450:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                      "typeString": "contract ZaaNetStorage"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1885e69698a7feb1996880dc751e52fa84140b158c769239d0e04ec35564096f",
                  "id": 3825,
                  "name": "VoucherPurchased",
                  "nameLocation": "501:16:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3817,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "543:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3825,
                        "src": "527:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "527:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3819,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "574:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3825,
                        "src": "558:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3821,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "601:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3825,
                        "src": "593:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3823,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "625:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3825,
                        "src": "617:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "617:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "517:123:13"
                  },
                  "src": "495:146:13"
                },
                {
                  "body": {
                    "id": 3854,
                    "nodeType": "Block",
                    "src": "748:188:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3838,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3810,
                            "src": "805:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3840,
                                "name": "_usdtToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3827,
                                "src": "821:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3839,
                              "name": "TestUSDT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "812:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TestUSDT_$1145_$",
                                "typeString": "type(contract TestUSDT)"
                              }
                            },
                            "id": 3841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "812:20:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUSDT_$1145",
                              "typeString": "contract TestUSDT"
                            }
                          },
                          "src": "805:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestUSDT_$1145",
                            "typeString": "contract TestUSDT"
                          }
                        },
                        "id": 3843,
                        "nodeType": "ExpressionStatement",
                        "src": "805:27:13"
                      },
                      {
                        "expression": {
                          "id": 3846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3844,
                            "name": "treasuryWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "842:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3845,
                            "name": "_treasuryWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3829,
                            "src": "859:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "842:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3847,
                        "nodeType": "ExpressionStatement",
                        "src": "842:32:13"
                      },
                      {
                        "expression": {
                          "id": 3852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3848,
                            "name": "zaaNetStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3815,
                            "src": "884:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3850,
                                "name": "_zaaNetStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3831,
                                "src": "914:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3849,
                              "name": "ZaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3796,
                              "src": "900:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ZaaNetStorage_$3796_$",
                                "typeString": "type(contract ZaaNetStorage)"
                              }
                            },
                            "id": 3851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "900:29:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                              "typeString": "contract ZaaNetStorage"
                            }
                          },
                          "src": "884:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                            "typeString": "contract ZaaNetStorage"
                          }
                        },
                        "id": 3853,
                        "nodeType": "ExpressionStatement",
                        "src": "884:45:13"
                      }
                    ]
                  },
                  "id": 3855,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3834,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "736:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "740:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "736:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3836,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3833,
                        "name": "Ownable",
                        "nameLocations": [
                          "728:7:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "728:7:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "728:19:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3827,
                        "mutability": "mutable",
                        "name": "_usdtToken",
                        "nameLocation": "667:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3855,
                        "src": "659:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3829,
                        "mutability": "mutable",
                        "name": "_treasuryWallet",
                        "nameLocation": "687:15:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3855,
                        "src": "679:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3831,
                        "mutability": "mutable",
                        "name": "_zaaNetStorage",
                        "nameLocation": "712:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3855,
                        "src": "704:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "658:69:13"
                  },
                  "returnParameters": {
                    "id": 3837,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "748:0:13"
                  },
                  "scope": 3942,
                  "src": "647:289:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3918,
                    "nodeType": "Block",
                    "src": "1063:617:13",
                    "statements": [
                      {
                        "assignments": [
                          3870
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3870,
                            "mutability": "mutable",
                            "name": "network",
                            "nameLocation": "1167:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3918,
                            "src": "1138:36:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            },
                            "typeName": {
                              "id": 3869,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3868,
                                "name": "ZaaNetStorage.Network",
                                "nameLocations": [
                                  "1138:13:13",
                                  "1152:7:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3096,
                                "src": "1138:21:13"
                              },
                              "referencedDeclaration": 3096,
                              "src": "1138:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                                "typeString": "struct ZaaNetStorage.Network"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3875,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3873,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3857,
                              "src": "1215:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3871,
                              "name": "zaaNetStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3815,
                              "src": "1177:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZaaNetStorage_$3796",
                                "typeString": "contract ZaaNetStorage"
                              }
                            },
                            "id": 3872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1191:10:13",
                            "memberName": "getNetwork",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3436,
                            "src": "1177:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Network_$3096_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct ZaaNetStorage.Network memory)"
                            }
                          },
                          "id": 3874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1177:57:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                            "typeString": "struct ZaaNetStorage.Network memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1138:96:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3877,
                                "name": "network",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3870,
                                "src": "1252:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                  "typeString": "struct ZaaNetStorage.Network memory"
                                }
                              },
                              "id": 3878,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1260:8:13",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3091,
                              "src": "1252:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6574776f726b206973206e6f7420616374697665",
                              "id": 3879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1270:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e0cbec50eafc172d4d33af3f38ab4558e9157de242863f3509bd46123fcbf1e",
                                "typeString": "literal_string \"Network is not active\""
                              },
                              "value": "Network is not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e0cbec50eafc172d4d33af3f38ab4558e9157de242863f3509bd46123fcbf1e",
                                "typeString": "literal_string \"Network is not active\""
                              }
                            ],
                            "id": 3876,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1244:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1244:50:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3881,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3883,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3859,
                                "src": "1312:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 3884,
                                  "name": "network",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3870,
                                  "src": "1321:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                                    "typeString": "struct ZaaNetStorage.Network memory"
                                  }
                                },
                                "id": 3885,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1329:15:13",
                                "memberName": "pricePerSession",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3087,
                                "src": "1321:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1312:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20746865207072696365207065722073657373696f6e",
                              "id": 3887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1346:51:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b792145fb828181206c68443a102ddc8d15f33908427299450512354414db4b8",
                                "typeString": "literal_string \"Amount must be greater than the price per session\""
                              },
                              "value": "Amount must be greater than the price per session"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b792145fb828181206c68443a102ddc8d15f33908427299450512354414db4b8",
                                "typeString": "literal_string \"Amount must be greater than the price per session\""
                              }
                            ],
                            "id": 3882,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1304:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1304:94:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3889,
                        "nodeType": "ExpressionStatement",
                        "src": "1304:94:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3891,
                                "name": "buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3861,
                                "src": "1416:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1433:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1425:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3892,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1425:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1425:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1416:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642062757965722061646472657373",
                              "id": 3897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1437:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04e8711769a70703e5bbfb836b9b6186ce54ee4710f13455346ea1e8f3aaf6c9",
                                "typeString": "literal_string \"Invalid buyer address\""
                              },
                              "value": "Invalid buyer address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04e8711769a70703e5bbfb836b9b6186ce54ee4710f13455346ea1e8f3aaf6c9",
                                "typeString": "literal_string \"Invalid buyer address\""
                              }
                            ],
                            "id": 3890,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1408:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1408:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3899,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:53:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3903,
                                  "name": "buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3861,
                                  "src": "1519:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3904,
                                  "name": "treasuryWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3812,
                                  "src": "1526:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3905,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3859,
                                  "src": "1542:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3901,
                                  "name": "usdt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3810,
                                  "src": "1501:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestUSDT_$1145",
                                    "typeString": "contract TestUSDT"
                                  }
                                },
                                "id": 3902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1506:12:13",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 482,
                                "src": "1501:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 3906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1501:48:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 3907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1563:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 3900,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1480:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1480:110:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3909,
                        "nodeType": "ExpressionStatement",
                        "src": "1480:110:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3911,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3861,
                              "src": "1631:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3912,
                              "name": "networkId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3857,
                              "src": "1638:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3913,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3859,
                              "src": "1649:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3914,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1657:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1663:9:13",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1657:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3910,
                            "name": "VoucherPurchased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3825,
                            "src": "1614:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 3916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1614:59:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3917,
                        "nodeType": "EmitStatement",
                        "src": "1609:64:13"
                      }
                    ]
                  },
                  "functionSelector": "45891680",
                  "id": 3919,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3864,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3863,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1050:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "1050:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1050:12:13"
                    }
                  ],
                  "name": "buyVoucher",
                  "nameLocation": "950:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3857,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "978:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3919,
                        "src": "970:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3856,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3859,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1005:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3919,
                        "src": "997:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3861,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "1029:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3919,
                        "src": "1021:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "960:80:13"
                  },
                  "returnParameters": {
                    "id": 3865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1063:0:13"
                  },
                  "scope": 3942,
                  "src": "941:739:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3940,
                    "nodeType": "Block",
                    "src": "1760:108:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3927,
                                "name": "newTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3921,
                                "src": "1778:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1801:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1793:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3928,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1793:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1793:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1778:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 3933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1805:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 3926,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1770:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3935,
                        "nodeType": "ExpressionStatement",
                        "src": "1770:53:13"
                      },
                      {
                        "expression": {
                          "id": 3938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3936,
                            "name": "treasuryWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "1833:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3937,
                            "name": "newTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3921,
                            "src": "1850:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1833:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3939,
                        "nodeType": "ExpressionStatement",
                        "src": "1833:28:13"
                      }
                    ]
                  },
                  "functionSelector": "809d458d",
                  "id": 3941,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3924,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3923,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1750:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1750:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1750:9:13"
                    }
                  ],
                  "name": "updateTreasuryWallet",
                  "nameLocation": "1699:20:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3921,
                        "mutability": "mutable",
                        "name": "newTreasury",
                        "nameLocation": "1728:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3941,
                        "src": "1720:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3920,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1720:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1719:21:13"
                  },
                  "returnParameters": {
                    "id": 3925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1760:0:13"
                  },
                  "scope": 3942,
                  "src": "1690:178:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3943,
              "src": "285:1585:13",
              "usedErrors": [
                13,
                18,
                1055
              ],
              "usedEvents": [
                24,
                3825
              ]
            }
          ],
          "src": "32:1840:13"
        },
        "id": 13
      },
      "contracts/interface/IZaaNetAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/interface/IZaaNetAdmin.sol",
          "exportedSymbols": {
            "IZaaNetAdmin": [
              4009
            ]
          },
          "id": 4010,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3944,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetAdmin",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 3945,
                "nodeType": "StructuredDocumentation",
                "src": "58:62:14",
                "text": "@title IZaaNetAdmin - Interface for ZaaNet Admin Contract"
              },
              "fullyImplemented": false,
              "id": 4009,
              "linearizedBaseContracts": [
                4009
              ],
              "name": "IZaaNetAdmin",
              "nameLocation": "130:12:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "12e8e2c3",
                  "id": 3950,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPlatformFee",
                  "nameLocation": "205:14:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3947,
                        "mutability": "mutable",
                        "name": "_newFeePercent",
                        "nameLocation": "228:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3950,
                        "src": "220:22:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3946,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "220:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "219:24:14"
                  },
                  "returnParameters": {
                    "id": 3949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "252:0:14"
                  },
                  "scope": 4009,
                  "src": "196:57:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6605bfda",
                  "id": 3955,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setTreasuryAddress",
                  "nameLocation": "268:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3952,
                        "mutability": "mutable",
                        "name": "_newTreasury",
                        "nameLocation": "295:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3955,
                        "src": "287:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "287:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "286:22:14"
                  },
                  "returnParameters": {
                    "id": 3954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "317:0:14"
                  },
                  "scope": 4009,
                  "src": "259:59:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8456cb59",
                  "id": 3958,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pause",
                  "nameLocation": "333:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3956,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "338:2:14"
                  },
                  "returnParameters": {
                    "id": 3957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "349:0:14"
                  },
                  "scope": 4009,
                  "src": "324:26:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3f4ba83a",
                  "id": 3961,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unpause",
                  "nameLocation": "365:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3959,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "372:2:14"
                  },
                  "returnParameters": {
                    "id": 3960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "383:0:14"
                  },
                  "scope": 4009,
                  "src": "356:28:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4c17b530",
                  "id": 3964,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toggleEmergencyMode",
                  "nameLocation": "399:19:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "418:2:14"
                  },
                  "returnParameters": {
                    "id": 3963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "429:0:14"
                  },
                  "scope": 4009,
                  "src": "390:40:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8c639a85",
                  "id": 3969,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "platformFeePercent",
                  "nameLocation": "490:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "508:2:14"
                  },
                  "returnParameters": {
                    "id": 3968,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3967,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3969,
                        "src": "534:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "534:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "533:9:14"
                  },
                  "scope": 4009,
                  "src": "481:62:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c5f956af",
                  "id": 3974,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasuryAddress",
                  "nameLocation": "558:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "573:2:14"
                  },
                  "returnParameters": {
                    "id": 3973,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3972,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3974,
                        "src": "599:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3971,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "599:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "598:9:14"
                  },
                  "scope": 4009,
                  "src": "549:59:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3975,
                    "nodeType": "StructuredDocumentation",
                    "src": "614:64:14",
                    "text": "@notice Alternative name for treasuryAddress (compatibility)"
                  },
                  "functionSelector": "61d027b3",
                  "id": 3980,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "treasury",
                  "nameLocation": "692:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "700:2:14"
                  },
                  "returnParameters": {
                    "id": 3979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3980,
                        "src": "726:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "726:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "725:9:14"
                  },
                  "scope": 4009,
                  "src": "683:52:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8da5cb5b",
                  "id": 3985,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "750:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3981,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "755:2:14"
                  },
                  "returnParameters": {
                    "id": 3984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3983,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3985,
                        "src": "781:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3982,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "781:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "780:9:14"
                  },
                  "scope": 4009,
                  "src": "741:49:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c975abb",
                  "id": 3990,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "805:6:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "811:2:14"
                  },
                  "returnParameters": {
                    "id": 3989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3988,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3990,
                        "src": "837:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3987,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "836:6:14"
                  },
                  "scope": 4009,
                  "src": "796:47:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3991,
                    "nodeType": "StructuredDocumentation",
                    "src": "849:54:14",
                    "text": "@notice Alternative name for owner (compatibility)"
                  },
                  "functionSelector": "f851a440",
                  "id": 3996,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "917:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "922:2:14"
                  },
                  "returnParameters": {
                    "id": 3995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3994,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3996,
                        "src": "948:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3993,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "948:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "947:9:14"
                  },
                  "scope": 4009,
                  "src": "908:49:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0905f560",
                  "id": 4001,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "emergencyMode",
                  "nameLocation": "972:13:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "985:2:14"
                  },
                  "returnParameters": {
                    "id": 4000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3999,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4001,
                        "src": "1011:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3998,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1011:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1010:6:14"
                  },
                  "scope": 4009,
                  "src": "963:54:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0cbab4f7",
                  "id": 4008,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePlatformFee",
                  "nameLocation": "1032:20:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4003,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1061:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 4008,
                        "src": "1053:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1053:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1052:16:14"
                  },
                  "returnParameters": {
                    "id": 4007,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4006,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4008,
                        "src": "1092:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4005,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1091:9:14"
                  },
                  "scope": 4009,
                  "src": "1023:78:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4010,
              "src": "120:983:14",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1071:14"
        },
        "id": 14
      },
      "contracts/interface/IZaaNetNetwork.sol": {
        "ast": {
          "absolutePath": "contracts/interface/IZaaNetNetwork.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IZaaNetNetwork": [
              4099
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 4100,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4011,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:15"
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "../ZaaNetStorage.sol",
              "id": 4012,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4100,
              "sourceUnit": 3797,
              "src": "58:30:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetNetwork",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4099,
              "linearizedBaseContracts": [
                4099
              ],
              "name": "IZaaNetNetwork",
              "nameLocation": "100:14:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "ac8d319e4ba2a19144062917c8cb50cc9cffb2f0eea3004b86b48c06cc6845c8",
                  "id": 4020,
                  "name": "NetworkRegistered",
                  "nameLocation": "164:17:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4014,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "207:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4020,
                        "src": "191:25:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4013,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "191:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4016,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "242:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4020,
                        "src": "226:27:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4015,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4018,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "270:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4020,
                        "src": "263:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4017,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "263:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "181:106:15"
                  },
                  "src": "158:130:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d",
                  "id": 4032,
                  "name": "NetworkUpdated",
                  "nameLocation": "300:14:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4022,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "340:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4032,
                        "src": "324:25:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4024,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "375:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4032,
                        "src": "359:27:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "359:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4026,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pricePerHour",
                        "nameLocation": "404:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4032,
                        "src": "396:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4025,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "396:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4028,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "433:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4032,
                        "src": "426:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4027,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4030,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "459:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4032,
                        "src": "454:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4029,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "454:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:159:15"
                  },
                  "src": "294:180:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b3",
                  "id": 4036,
                  "name": "HostAdded",
                  "nameLocation": "486:9:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4035,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4034,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newHostAddress",
                        "nameLocation": "512:14:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4036,
                        "src": "496:30:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4033,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "496:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "495:32:15"
                  },
                  "src": "480:48:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01",
                  "id": 4044,
                  "name": "NetworkPriceUpdated",
                  "nameLocation": "585:19:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "621:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4044,
                        "src": "605:25:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4037,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "605:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldPrice",
                        "nameLocation": "640:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4044,
                        "src": "632:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4042,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newPrice",
                        "nameLocation": "658:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4044,
                        "src": "650:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "604:63:15"
                  },
                  "src": "579:89:15"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b",
                  "id": 4052,
                  "name": "NetworkStatusChanged",
                  "nameLocation": "679:20:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4046,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "716:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4052,
                        "src": "700:25:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "700:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4048,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldStatus",
                        "nameLocation": "732:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4052,
                        "src": "727:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4047,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "727:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4050,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "748:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4052,
                        "src": "743:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4049,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "699:59:15"
                  },
                  "src": "673:86:15"
                },
                {
                  "documentation": {
                    "id": 4053,
                    "nodeType": "StructuredDocumentation",
                    "src": "814:260:15",
                    "text": "@notice Register a new WiFi network\n @param pricePerHour Cost in USDT per hour\n @param mongoDataId MongoDB document ID for metadata (e.g. JSON with SSID, location, etc.)\n @param isActive Whether network is available for guest discovery"
                  },
                  "functionSelector": "900e41b1",
                  "id": 4062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerNetwork",
                  "nameLocation": "1088:15:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4055,
                        "mutability": "mutable",
                        "name": "pricePerHour",
                        "nameLocation": "1121:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1113:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4057,
                        "mutability": "mutable",
                        "name": "mongoDataId",
                        "nameLocation": "1157:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1143:25:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4056,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1143:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4059,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1183:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1178:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4058,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1178:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:94:15"
                  },
                  "returnParameters": {
                    "id": 4061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1206:0:15"
                  },
                  "scope": 4099,
                  "src": "1079:128:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4063,
                    "nodeType": "StructuredDocumentation",
                    "src": "1213:165:15",
                    "text": "@notice Update an existing network\n @param networkId ID of the network\n @param pricePerHour Updated price\n @param isActive New active status"
                  },
                  "functionSelector": "1b63fe67",
                  "id": 4072,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateNetwork",
                  "nameLocation": "1392:13:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4065,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1423:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4072,
                        "src": "1415:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1415:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4067,
                        "mutability": "mutable",
                        "name": "pricePerHour",
                        "nameLocation": "1450:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4072,
                        "src": "1442:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4066,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4069,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "1477:8:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4072,
                        "src": "1472:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4068,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1405:86:15"
                  },
                  "returnParameters": {
                    "id": 4071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1500:0:15"
                  },
                  "scope": 4099,
                  "src": "1383:118:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4073,
                    "nodeType": "StructuredDocumentation",
                    "src": "1507:125:15",
                    "text": "@notice Fetch a network by ID\n @param networkId ID of the network\n @return Network struct with all metadata"
                  },
                  "functionSelector": "cd83fb9a",
                  "id": 4081,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostedNetworkById",
                  "nameLocation": "1646:20:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4075,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1684:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4081,
                        "src": "1676:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1676:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1666:33:15"
                  },
                  "returnParameters": {
                    "id": 4080,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4079,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4081,
                        "src": "1723:28:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 4078,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4077,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "1723:13:15",
                              "1737:7:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "1723:21:15"
                          },
                          "referencedDeclaration": 3096,
                          "src": "1723:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1722:30:15"
                  },
                  "scope": 4099,
                  "src": "1637:116:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4082,
                    "nodeType": "StructuredDocumentation",
                    "src": "1759:146:15",
                    "text": "@notice Get all network IDs registered by a host\n @param hostAddress Address of the host\n @return networkIds List of network IDs"
                  },
                  "functionSelector": "79f0dc57",
                  "id": 4090,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostNetworks",
                  "nameLocation": "1919:15:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4084,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1952:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4090,
                        "src": "1944:19:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4083,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1944:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1934:35:15"
                  },
                  "returnParameters": {
                    "id": 4089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4088,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4090,
                        "src": "1993:16:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4086,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1993:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4087,
                          "nodeType": "ArrayTypeName",
                          "src": "1993:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1992:18:15"
                  },
                  "scope": 4099,
                  "src": "1910:101:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4091,
                    "nodeType": "StructuredDocumentation",
                    "src": "2017:168:15",
                    "text": "@notice Public method to check if an address is a registered host\n @param hostAddress The address to verify\n @return isHost True if host is registered"
                  },
                  "functionSelector": "867f1a09",
                  "id": 4098,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRegisteredHost",
                  "nameLocation": "2199:16:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4093,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "2224:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 4098,
                        "src": "2216:19:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4092,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2216:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2215:21:15"
                  },
                  "returnParameters": {
                    "id": 4097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4096,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4098,
                        "src": "2260:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4095,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2260:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2259:6:15"
                  },
                  "scope": 4099,
                  "src": "2190:76:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4100,
              "src": "90:2178:15",
              "usedErrors": [],
              "usedEvents": [
                4020,
                4032,
                4036,
                4044,
                4052
              ]
            }
          ],
          "src": "32:2236:15"
        },
        "id": 15
      },
      "contracts/interface/IZaaNetPayment.sol": {
        "ast": {
          "absolutePath": "contracts/interface/IZaaNetPayment.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IZaaNetPayment": [
              4135
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 4136,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4101,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:16"
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "../ZaaNetStorage.sol",
              "id": 4102,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4136,
              "sourceUnit": 3797,
              "src": "58:30:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetPayment",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 4103,
                "nodeType": "StructuredDocumentation",
                "src": "90:66:16",
                "text": "@title IZaaNetPayment - Interface for ZaaNet Payment Contract"
              },
              "fullyImplemented": false,
              "id": 4135,
              "linearizedBaseContracts": [
                4135
              ],
              "name": "IZaaNetPayment",
              "nameLocation": "166:14:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 4104,
                    "nodeType": "StructuredDocumentation",
                    "src": "236:289:16",
                    "text": "@notice Accept a payment to access a hosted network\n @param _networkId The ID of the network being accessed\n @param _amount Total amount paid (pricePerSession)\n @param _voucherId Optional voucher/discount code ID\n @param _userId User identifier for tracking"
                  },
                  "functionSelector": "3da38336",
                  "id": 4115,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptPayment",
                  "nameLocation": "539:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4106,
                        "mutability": "mutable",
                        "name": "_networkId",
                        "nameLocation": "570:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4115,
                        "src": "562:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "562:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4108,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "598:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4115,
                        "src": "590:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4110,
                        "mutability": "mutable",
                        "name": "_voucherId",
                        "nameLocation": "623:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4115,
                        "src": "615:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4112,
                        "mutability": "mutable",
                        "name": "_userId",
                        "nameLocation": "651:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4115,
                        "src": "643:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "552:112:16"
                  },
                  "returnParameters": {
                    "id": 4114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "673:0:16"
                  },
                  "scope": 4135,
                  "src": "530:144:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4116,
                    "nodeType": "StructuredDocumentation",
                    "src": "680:145:16",
                    "text": "@notice Fetch session details by ID\n @param _sessionId The session ID to retrieve\n @return The full session object from storage"
                  },
                  "functionSelector": "402ff0db",
                  "id": 4124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSession",
                  "nameLocation": "839:10:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4118,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "867:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4124,
                        "src": "859:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:34:16"
                  },
                  "returnParameters": {
                    "id": 4123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4124,
                        "src": "907:28:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 4121,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4120,
                            "name": "ZaaNetStorage.Session",
                            "nameLocations": [
                              "907:13:16",
                              "921:7:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "907:21:16"
                          },
                          "referencedDeclaration": 3113,
                          "src": "907:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "906:30:16"
                  },
                  "scope": 4135,
                  "src": "830:107:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 4125,
                    "nodeType": "StructuredDocumentation",
                    "src": "943:227:16",
                    "text": "@notice Calculate fees for a payment amount\n @param amount The payment amount to calculate fees for\n @return hostAmount Amount that goes to the host\n @return platformFee Amount that goes to the platform"
                  },
                  "functionSelector": "52238fdd",
                  "id": 4134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateFees",
                  "nameLocation": "1184:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4127,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1215:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4134,
                        "src": "1207:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1197:30:16"
                  },
                  "returnParameters": {
                    "id": 4133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4130,
                        "mutability": "mutable",
                        "name": "hostAmount",
                        "nameLocation": "1259:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4134,
                        "src": "1251:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1251:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4132,
                        "mutability": "mutable",
                        "name": "platformFee",
                        "nameLocation": "1279:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 4134,
                        "src": "1271:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4131,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1271:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1250:41:16"
                  },
                  "scope": 4135,
                  "src": "1175:117:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4136,
              "src": "156:1138:16",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1262:16"
        },
        "id": 16
      },
      "contracts/interface/IZaaNetStorage.sol": {
        "ast": {
          "absolutePath": "contracts/interface/IZaaNetStorage.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IZaaNetStorage": [
              4255
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1110
            ],
            "ZaaNetStorage": [
              3796
            ]
          },
          "id": 4256,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4137,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:17"
            },
            {
              "absolutePath": "contracts/ZaaNetStorage.sol",
              "file": "../ZaaNetStorage.sol",
              "id": 4138,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4256,
              "sourceUnit": 3797,
              "src": "58:30:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IZaaNetStorage",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 4139,
                "nodeType": "StructuredDocumentation",
                "src": "90:66:17",
                "text": "@title IZaaNetStorage - Interface for ZaaNet Storage Contract"
              },
              "fullyImplemented": false,
              "id": 4255,
              "linearizedBaseContracts": [
                4255
              ],
              "name": "IZaaNetStorage",
              "nameLocation": "166:14:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "d8b0e716",
                  "id": 4146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAllowedCaller",
                  "nameLocation": "246:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4141,
                        "mutability": "mutable",
                        "name": "_caller",
                        "nameLocation": "271:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4146,
                        "src": "263:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "263:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4143,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "285:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4146,
                        "src": "280:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4142,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "280:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:30:17"
                  },
                  "returnParameters": {
                    "id": 4145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "301:0:17"
                  },
                  "scope": 4255,
                  "src": "237:65:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "73f9a5d7",
                  "id": 4154,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAllowedCallers",
                  "nameLocation": "316:17:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4149,
                        "mutability": "mutable",
                        "name": "_callers",
                        "nameLocation": "353:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4154,
                        "src": "334:27:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "334:7:17",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4148,
                          "nodeType": "ArrayTypeName",
                          "src": "334:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4151,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "368:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4154,
                        "src": "363:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4150,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "333:42:17"
                  },
                  "returnParameters": {
                    "id": 4153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "384:0:17"
                  },
                  "scope": 4255,
                  "src": "307:78:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5290ffc6",
                  "id": 4159,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incrementNetworkId",
                  "nameLocation": "452:18:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "470:2:17"
                  },
                  "returnParameters": {
                    "id": 4158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4159,
                        "src": "491:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "491:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "490:9:17"
                  },
                  "scope": 4255,
                  "src": "443:57:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "50c0d41c",
                  "id": 4167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setNetwork",
                  "nameLocation": "514:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4161,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "533:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4167,
                        "src": "525:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "525:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4164,
                        "mutability": "mutable",
                        "name": "network",
                        "nameLocation": "568:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4167,
                        "src": "537:38:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 4163,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4162,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "537:13:17",
                              "551:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "537:21:17"
                          },
                          "referencedDeclaration": 3096,
                          "src": "537:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "524:52:17"
                  },
                  "returnParameters": {
                    "id": 4166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "585:0:17"
                  },
                  "scope": 4255,
                  "src": "505:81:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95ea5717",
                  "id": 4175,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetwork",
                  "nameLocation": "600:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4169,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "619:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4175,
                        "src": "611:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "610:12:17"
                  },
                  "returnParameters": {
                    "id": 4174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4173,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4175,
                        "src": "646:28:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Network_$3096_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network"
                        },
                        "typeName": {
                          "id": 4172,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4171,
                            "name": "ZaaNetStorage.Network",
                            "nameLocations": [
                              "646:13:17",
                              "660:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3096,
                            "src": "646:21:17"
                          },
                          "referencedDeclaration": 3096,
                          "src": "646:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "645:30:17"
                  },
                  "scope": 4255,
                  "src": "591:85:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fa9c81a4",
                  "id": 4188,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetworksPaginated",
                  "nameLocation": "690:20:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4177,
                        "mutability": "mutable",
                        "name": "offset",
                        "nameLocation": "719:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4188,
                        "src": "711:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "711:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4179,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "735:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4188,
                        "src": "727:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "727:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "710:31:17"
                  },
                  "returnParameters": {
                    "id": 4187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4184,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4188,
                        "src": "765:30:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Network_$3096_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Network[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4182,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 4181,
                              "name": "ZaaNetStorage.Network",
                              "nameLocations": [
                                "765:13:17",
                                "779:7:17"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3096,
                              "src": "765:21:17"
                            },
                            "referencedDeclaration": 3096,
                            "src": "765:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Network_$3096_storage_ptr",
                              "typeString": "struct ZaaNetStorage.Network"
                            }
                          },
                          "id": 4183,
                          "nodeType": "ArrayTypeName",
                          "src": "765:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Network_$3096_storage_$dyn_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Network[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4186,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "805:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4188,
                        "src": "797:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "764:47:17"
                  },
                  "scope": 4255,
                  "src": "681:131:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "217c682d",
                  "id": 4193,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "networkIdCounter",
                  "nameLocation": "826:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "842:2:17"
                  },
                  "returnParameters": {
                    "id": 4192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4191,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4193,
                        "src": "868:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "867:9:17"
                  },
                  "scope": 4255,
                  "src": "817:60:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "cc507641",
                  "id": 4198,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incrementSessionId",
                  "nameLocation": "944:18:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "962:2:17"
                  },
                  "returnParameters": {
                    "id": 4197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4196,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4198,
                        "src": "983:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "983:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "982:9:17"
                  },
                  "scope": 4255,
                  "src": "935:57:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3b9a8016",
                  "id": 4206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSession",
                  "nameLocation": "1006:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4200,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1025:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4206,
                        "src": "1017:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4203,
                        "mutability": "mutable",
                        "name": "session",
                        "nameLocation": "1060:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4206,
                        "src": "1029:38:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_calldata_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 4202,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4201,
                            "name": "ZaaNetStorage.Session",
                            "nameLocations": [
                              "1029:13:17",
                              "1043:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "1029:21:17"
                          },
                          "referencedDeclaration": 3113,
                          "src": "1029:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:52:17"
                  },
                  "returnParameters": {
                    "id": 4205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1077:0:17"
                  },
                  "scope": 4255,
                  "src": "997:81:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "402ff0db",
                  "id": 4214,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSession",
                  "nameLocation": "1092:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4208,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1111:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4214,
                        "src": "1103:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1103:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1102:12:17"
                  },
                  "returnParameters": {
                    "id": 4213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4212,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4214,
                        "src": "1138:28:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Session_$3113_memory_ptr",
                          "typeString": "struct ZaaNetStorage.Session"
                        },
                        "typeName": {
                          "id": 4211,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4210,
                            "name": "ZaaNetStorage.Session",
                            "nameLocations": [
                              "1138:13:17",
                              "1152:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3113,
                            "src": "1138:21:17"
                          },
                          "referencedDeclaration": 3113,
                          "src": "1138:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Session_$3113_storage_ptr",
                            "typeString": "struct ZaaNetStorage.Session"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1137:30:17"
                  },
                  "scope": 4255,
                  "src": "1083:85:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "26cc5583",
                  "id": 4219,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endSession",
                  "nameLocation": "1182:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4216,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "1201:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4219,
                        "src": "1193:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1193:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1192:19:17"
                  },
                  "returnParameters": {
                    "id": 4218,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1220:0:17"
                  },
                  "scope": 4255,
                  "src": "1173:48:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a29352d",
                  "id": 4224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sessionIdCounter",
                  "nameLocation": "1235:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1251:2:17"
                  },
                  "returnParameters": {
                    "id": 4223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4224,
                        "src": "1277:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1277:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1276:9:17"
                  },
                  "scope": 4255,
                  "src": "1226:60:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e1c7a8aa",
                  "id": 4231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseHostEarnings",
                  "nameLocation": "1354:20:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4226,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1383:11:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4231,
                        "src": "1375:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4228,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1404:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4231,
                        "src": "1396:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1374:37:17"
                  },
                  "returnParameters": {
                    "id": 4230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1420:0:17"
                  },
                  "scope": 4255,
                  "src": "1345:76:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6d65573f",
                  "id": 4238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHostEarnings",
                  "nameLocation": "1435:15:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4233,
                        "mutability": "mutable",
                        "name": "hostAddress",
                        "nameLocation": "1459:11:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4238,
                        "src": "1451:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1451:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1450:21:17"
                  },
                  "returnParameters": {
                    "id": 4237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4238,
                        "src": "1495:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1495:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1494:9:17"
                  },
                  "scope": 4255,
                  "src": "1426:78:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a2f406f",
                  "id": 4243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "emergencyDeactivateNetwork",
                  "nameLocation": "1569:26:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4240,
                        "mutability": "mutable",
                        "name": "networkId",
                        "nameLocation": "1604:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4243,
                        "src": "1596:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1596:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1595:19:17"
                  },
                  "returnParameters": {
                    "id": 4242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1623:0:17"
                  },
                  "scope": 4255,
                  "src": "1560:64:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c59d4847",
                  "id": 4254,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStats",
                  "nameLocation": "1638:8:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1646:2:17"
                  },
                  "returnParameters": {
                    "id": 4253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4246,
                        "mutability": "mutable",
                        "name": "totalNetworks",
                        "nameLocation": "1680:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4254,
                        "src": "1672:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4248,
                        "mutability": "mutable",
                        "name": "totalSessions",
                        "nameLocation": "1703:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4254,
                        "src": "1695:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4250,
                        "mutability": "mutable",
                        "name": "activeNetworks",
                        "nameLocation": "1726:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4254,
                        "src": "1718:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1718:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4252,
                        "mutability": "mutable",
                        "name": "activeSessions",
                        "nameLocation": "1750:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4254,
                        "src": "1742:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1742:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1671:94:17"
                  },
                  "scope": 4255,
                  "src": "1629:137:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4256,
              "src": "156:1612:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1736:17"
        },
        "id": 17
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/TestUSDT.sol": {
        "TestUSDT": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 951,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346103b257610ad26020813803918261001c816103b7565b9384928339810103126103b2575161003460406103b7565b90600f82526e15195cdd0815195d1a195c881554d1608a1b602083015261005b60406103b7565b60048152631554d11560e21b602082015282519091906001600160401b0381116102bb57600354600181811c911680156103a8575b602082101461029b57601f8111610343575b506020601f82116001146102dc57819293946000926102d1575b50508160011b916000199060031b1c1916176003555b81516001600160401b0381116102bb57600454600181811c911680156102b1575b602082101461029b57601f8111610236575b50602092601f82116001146101d157928192936000926101c6575b50508160011b916000199060031b1c1916176004555b33156101b05760025481810180911161019a57600255600033815280602052604081208281540190556040519182527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516106f590816103dd8239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b015190503880610120565b601f198216936004600052806000209160005b86811061021e5750836001959610610205575b505050811b01600455610136565b015160001960f88460031b161c191690553880806101f7565b919260206001819286850151815501940192016101e4565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610291575b601f0160051c01905b8181106102855750610105565b60008155600101610278565b909150819061026f565b634e487b7160e01b600052602260045260246000fd5b90607f16906100f3565b634e487b7160e01b600052604160045260246000fd5b0151905038806100bc565b601f198216906003600052806000209160005b81811061032b57509583600195969710610312575b505050811b016003556100d2565b015160001960f88460031b161c19169055388080610304565b9192602060018192868b0151815501940192016102ef565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061039e575b601f0160051c01905b81811061039257506100a2565b60008155600101610385565b909150819061037c565b90607f1690610090565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102bb5760405256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104c857508063095ea7b31461044257806318160ddd1461042457806323b872dd14610337578063313ce5671461031b57806340c10f191461026f57806370a082311461023557806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105e4565b6100ae6105fa565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105e4565b6024359033610610565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022b575b602083108114610217578285529081156101fb57506001146101a4575b50819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101e55750602091508201018261015a565b60018160209254838588010152019101906101d0565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102566105e4565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102886105e4565b602435906001600160a01b0316801561030557600254918083018093116102ef576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de576103506105e4565b6103586105fa565b6001600160a01b0382166000818152600160209081526040808320338452909152902054909260443592916000198110610398575b506101099350610610565b8381106104075784156103f15733156103db57610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461038d565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761045b6105e4565b6024359033156103f1576001600160a01b03169081156103db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c90600181168015610591575b602083108114610217578285529081156101fb575060011461053a5750819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061057b5750602091508201018261015a565b6001816020925483858801015201910190610566565b91607f16916104ee565b91909160208152825180602083015260005b8181106105ce575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ad565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a9576001600160a01b031691821561030557600082815280602052604081205482811061068f5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220b44b007db99773c925e500fe75f5aeb5e861eec4bd1e6461399f7000da88daa064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3B2 JUMPI PUSH2 0xAD2 PUSH1 0x20 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1C DUP2 PUSH2 0x3B7 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x3B2 JUMPI MLOAD PUSH2 0x34 PUSH1 0x40 PUSH2 0x3B7 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP3 MSTORE PUSH15 0x15195CDD0815195D1A195C881554D1 PUSH1 0x8A SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5B PUSH1 0x40 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x1554D115 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2BB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3A8 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x29B JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x343 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2DC JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2D1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2BB JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2B1 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x29B JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x236 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1D1 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1C6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x19A JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP1 DUP2 PUSH2 0x3DD DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x21E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x205 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x136 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1F7 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x285 JUMPI POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x278 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xF3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xBC JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32B JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x312 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xD2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x304 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x39E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x392 JUMPI POP PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x385 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x37C JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x90 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2BB JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4C8 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x610 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A4 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E5 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x256 PUSH2 0x5E4 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x288 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x350 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x398 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x610 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x407 JUMPI DUP5 ISZERO PUSH2 0x3F1 JUMPI CALLER ISZERO PUSH2 0x3DB JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x38D JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x45B PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x591 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x53A JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x57B JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x566 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5CE JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68F JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x4B STOP PUSH30 0xB99773C925E500FE75F5AEB5E861EEC4BD1E6461399F7000DA88DAA06473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "114:243:8:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;114:243:8;;;;;;;:::i;:::-;;;;-1:-1:-1;;;114:243:8;;;;;;;;;-1:-1:-1;;;;;114:243:8;;;;1648:13:2;114:243:8;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;;1648:13:2;114:243:8;;;;;1648:13:2;114:243:8;;;;-1:-1:-1;;;;;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;;1648:13:2;114:243:8;;;;;;;;231:10;7432:21:2;7428:91;;6137:21;114:243:8;;;;;;;;;6137:21:2;114:243:8;-1:-1:-1;231:10:8;114:243;;;;;;;;;;;;;;;;;;;6987:25:2;114:243:8;231:10;6987:25:2;;114:243:8;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;7428:91:2;7476:32;;;-1:-1:-1;7476:32:2;-1:-1:-1;114:243:8;;;-1:-1:-1;7476:32:2;114:243:8;;;;-1:-1:-1;114:243:8;;;;;;;;;;;-1:-1:-1;114:243:8;;-1:-1:-1;114:243:8;;-1:-1:-1;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;;;;;;;;;;1648:13:2;-1:-1:-1;114:243:8;;-1:-1:-1;114:243:8;;-1:-1:-1;114:243:8;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;114:243:8;;;;;;;;;;1648:13:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;;;;;-1:-1:-1;;114:243:8;;;-1:-1:-1;;;;;114:243:8;;;;;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1508,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_3365": {
                  "entryPoint": 1530,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1435,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 1552,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104c857508063095ea7b31461044257806318160ddd1461042457806323b872dd14610337578063313ce5671461031b57806340c10f191461026f57806370a082311461023557806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105e4565b6100ae6105fa565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105e4565b6024359033610610565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022b575b602083108114610217578285529081156101fb57506001146101a4575b50819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101e55750602091508201018261015a565b60018160209254838588010152019101906101d0565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102566105e4565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102886105e4565b602435906001600160a01b0316801561030557600254918083018093116102ef576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de576103506105e4565b6103586105fa565b6001600160a01b0382166000818152600160209081526040808320338452909152902054909260443592916000198110610398575b506101099350610610565b8381106104075784156103f15733156103db57610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461038d565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761045b6105e4565b6024359033156103f1576001600160a01b03169081156103db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c90600181168015610591575b602083108114610217578285529081156101fb575060011461053a5750819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061057b5750602091508201018261015a565b6001816020925483858801015201910190610566565b91607f16916104ee565b91909160208152825180602083015260005b8181106105ce575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ad565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a9576001600160a01b031691821561030557600082815280602052604081205482811061068f5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220b44b007db99773c925e500fe75f5aeb5e861eec4bd1e6461399f7000da88daa064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4C8 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x610 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A4 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E5 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x256 PUSH2 0x5E4 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x288 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x350 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x398 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x610 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x407 JUMPI DUP5 ISZERO PUSH2 0x3F1 JUMPI CALLER ISZERO PUSH2 0x3DB JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x38D JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x45B PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x591 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x53A JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x57B JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x566 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5CE JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68F JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x4B STOP PUSH30 0xB99773C925E500FE75F5AEB5E861EEC4BD1E6461399F7000DA88DAA06473 PUSH16 0x6C634300081C00330000000000000000 ",
              "sourceMap": "114:243:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;3388:5:2;114:243:8;;:::i;:::-;;;735:10:5;;3388:5:2;:::i;:::-;114:243:8;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;;114:243:8;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;114:243:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;-1:-1:-1;;;;;114:243:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;114:243:8;7432:21:2;;7428:91;;6137:21;114:243:8;;;;;;;;;;;;6137:21:2;114:243:8;6987:25:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;114:243:8;;;;;;;;;;;;;;7428:91:2;7476:32;;;114:243:8;7476:32:2;114:243:8;;;;;7476:32:2;114:243:8;;;;;;-1:-1:-1;;114:243:8;;;;;;;2761:2:2;114:243:8;;;;;;;;;-1:-1:-1;;114:243:8;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;114:243:8;;;;;;;;;;;;;;;735:10:5;114:243:8;;;;;;;;;;;;;;-1:-1:-1;;10484:36:2;;10480:309;;114:243:8;4890:5:2;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:5;9815:21:2;9811:90;;4890:5;114:243:8;;;;;;;;;;;;;;735:10:5;114:243:8;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;;;;;10480:309:2;;;9811:90;9859:31;;;114:243:8;9859:31:2;114:243:8;;;;;9859:31:2;9713:89;9759:32;;;114:243:8;9759:32:2;114:243:8;;;;;9759:32:2;10536:130;10591:60;;;;;114:243:8;10591:60:2;735:10:5;114:243:8;;;;;;;;10591:60:2;114:243:8;;;;;;-1:-1:-1;;114:243:8;;;;;2881:12:2;114:243:8;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;;;:::i;:::-;;;735:10:5;;9717:19:2;9713:89;;-1:-1:-1;;;;;114:243:8;;9815:21:2;;9811:90;;735:10:5;114:243:8;;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;114:243:8;;;;;;;9989:31:2;114:243:8;735:10:5;9989:31:2;;114:243:8;;;;;;;;;;;;;-1:-1:-1;;114:243:8;;;;;1837:5:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:243:8;;;;;-1:-1:-1;;114:243:8;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;114:243:8;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;114:243:8;;;;;;:::o;5297:300:2:-;-1:-1:-1;;;;;114:243:8;;5380:18:2;;5376:86;;-1:-1:-1;;;;;114:243:8;;5475:16:2;;5471:86;;5396:1;114:243:8;;;;;;;;;;6244:19:2;;;6240:115;;114:243:8;;;;6987:25:2;114:243:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;5297:300::o;6240:115::-;6290:50;114:243:8;6290:50:2;;;;;;;;114:243:8;;;;;6290:50:2;5376:86;5421:30;;;5396:1;5421:30;5396:1;5421:30;114:243:8;;5396:1:2;5421:30"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestUSDT.sol\":\"TestUSDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TestUSDT.sol\":{\"keccak256\":\"0x8a805e1b3df326de0549223cd003595e6de9d7fc7c0f9741b52629af3c3f65d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064bd0f2abe41cc2660a0f8263a9ac29a057cffbfd1a6e1c5e4acf0069862641\",\"dweb:/ipfs/Qmap6umnhknbikJcrsyiRTbiRYf8EzTsroyU9EYsU3iJgq\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetAdmin.sol": {
        "ZaaNetAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasuryAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_platformFeePercent",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "AdminUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "storageContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ContractsInitialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "triggeredBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyModeToggled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "updatedBy",
                  "type": "address"
                }
              ],
              "name": "EmergencyOperatorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "PlatformFeeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "name": "TreasuryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PLATFORM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculatePlatformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyMode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "emergencyOperators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "emergencySetPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "feeHistory",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "oldFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAdminStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalFeeChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalTreasuryChanges",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isEmergencyMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "currentFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currentTreasury",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestFeeChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "oldFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.FeeChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestTreasuryChange",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPlatformFeeBasisPoints",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTreasuryHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "oldTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "newTreasury",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "changedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ZaaNetAdmin.TreasuryChange[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                }
              ],
              "name": "initializeStorageContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isEmergencyOperator",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "setPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newTreasuryAddress",
                  "type": "address"
                }
              ],
              "name": "setTreasuryAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "toggleEmergencyMode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "treasuryHistory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "oldTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "changedBy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 1264,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1233,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346104cc576040516000906119083881900390601f8201601f191683016001600160401b038111848210176103ca57918084926060946040528339810103126104c857610050816104f0565b91604061005f602084016104f0565b9201519233156104b4578154336001600160a01b031982168117845560405194916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a3600180556005805460ff191690556001600160a01b03169283156104725750600184101580610467575b15610422576001600160a01b0316806103de575b50600380546001600160a01b03191683179055600483905561010b6104d1565b928184526020840190815260408401428152606085019133835260075495680100000000000000008710156103ca57600187016007556007548710156103b657600790945292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860029690961b9586015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68985015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a840155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b90920180546001600160a01b039093166001600160a01b0319909316929092179091556102166104d1565b600081526020810191825260408101428152606082019033825260085493680100000000000000008510156103a0576001850160085560009460085481101561038c576008909552925160029490941b7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3810180546001600160a01b03199081166001600160a01b039788161790915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee482018054861691871691909117905590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee582015590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee69091018054909216921691909117905533600081815260066020908152604091829020805460ff19166001908117909155915191825282917f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce9190a360405161140390816105058239f35b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b600280546001600160a01b031916821790556040514281527f7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa890602090a2386100eb565b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b5060148411156100d7565b62461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b631e4fbdf760e01b82526004829052602482fd5b5080fd5b600080fd5b60405190608082016001600160401b038111838210176103a057604052565b51906001600160a01b03821682036104cc5756fe6080604052600436101561001257600080fd5b6000803560e01c806302e88899146110245780630905f5601461100157806309705de8146103075780630cbab4f714610fc95780630d35a16714610f6957806310c2861914610e5f57806311ce026714610e3657806312e8e2c314610d5757806318b4f23b14610c685780633998a68114610c4c5780633f4ba83a14610bb95780634863687e14610af4578063492adaa8146109fe5780634c17b530146109755780635071f27b146108b65780635707ed45146107c15780635a2f406f146106d15780635c975abb146106ac57806361d027b31461022c5780636605bfda146104e05780636f04d994146104c4578063715018a61461046a5780637a9b93c6146104235780638456cb591461038b5780638c639a851461036d5780638da5cb5b14610346578063a10eb35414610307578063a380b86b146102a1578063c116d93614610255578063c5f956af1461022c578063f2fde38b146101a65763f851a4401461017d57600080fd5b346101a357806003193601126101a357546040516001600160a01b039091168152602090f35b80fd5b50346101a35760203660031901126101a3576101c06110f4565b6101c86113a4565b6001600160a01b031680156102185781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101a357806003193601126101a3576003546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a35760a060075460085460ff6005541660045490600180861b03600354169260405194855260208501521515604084015260608301526080820152f35b50346101a35760203660031901126101a357600435906008548210156101a35760806102cc83611144565b50805460018201546002830154600390930154604080516001600160a01b039485168152928416602084015282019390935291166060820152f35b50346101a35760203660031901126101a35760209060ff906040906001600160a01b036103326110f4565b168152600684522054166040519015158152f35b50346101a357806003193601126101a357546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a3576020600454604051908152f35b50346101a357806003193601126101a3576103a46113a4565b805460ff8160a01c166104145760ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337ff9c91e483ce8bc4cc31645e7cc0f01a3371813e76469a71104841507f01402908280a280f35b63d93c066560e01b8252600482fd5b50346101a357806003193601126101a3576004549060648202918083046064149015171561045657602082604051908152f35b634e487b7160e01b81526011600452602490fd5b50346101a357806003193601126101a3576104836113a4565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101a357806003193601126101a357602060405160018152f35b50346101a35760203660031901126101a3576104fa6110f4565b6105026113a4565b61051160ff6005541615611163565b6001600160a01b03168015610667576003546001600160a01b038116919082821461062d576001600160a01b0319168117600355604051610551816111af565b82815260208101828152604082014281526060830191338352600854600160401b811015610619578060016105899201600855611144565b949094610605575184546001600160a01b03199081166001600160a01b03928316178655915160018601805484169183169190911790559151600285015591516003939093018054909216921691909117905533917f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa138480a480f35b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b8152602060048201526012602482015271151c99585cdd5c9e481d5b98da185b99d95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b50346101a357806003193601126101a35760ff6020915460a01c166040519015158152f35b50346101a35760203660031901126101a357338152600660205260ff60408220541680156107ae575b610703906112a5565b6002546001600160a01b03168015610769578082913b1561076657818091602460405180958193635a2f406f60e01b835260043560048401525af180156107595761074b5780f35b610754916111e1565b388180f35b50604051903d90823e3d90fd5b50fd5b60405162461bcd60e51b815260206004820152601760248201527f53746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b5080546001600160a01b031633146106fa565b50346101a357806003193601126101a3576007546107de81611351565b6107eb60405191826111e1565b818152600783526020810191837fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688845b83831061089857868587604051928392602084019060208552518091526040840192915b81811061084d575050500390f35b91935091602060808261088a60019488516060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565b01940191019184939261083f565b600460206001926108a885611369565b81520192019201919061081b565b50346101a357806003193601126101a3576108cf6112ea565b506007549081156109305760001982019182116104565760806108fa6108f48461110f565b50611369565b61092e60405180926060908051835260208101516020840152604081015160408401528160018060a01b0391015116910152565bf35b60405162461bcd60e51b815260206004820152601760248201527f4e6f20666565206368616e676573207265636f726465640000000000000000006044820152606490fd5b50346101a357806003193601126101a357338152600660205260ff60408220541680156109eb575b6109a6906112a5565b60055460ff8082161516809160ff19161760055560405190151581527fc35ed978e97c366b3a5f9375508bcfbca850fca66bf334b9477118918e6eaa4060203392a280f35b5080546001600160a01b0316331461099d565b50346101a357806003193601126101a357600854610a1b81611351565b610a2860405191826111e1565b818152600883526020810191837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3845b838310610ad657868587604051928392602084019060208552518091526040840192915b818110610a8a575050500390f35b825180516001600160a01b039081168652602080830151821681880152604080840151908801526060928301519091169186019190915286955060809094019390920191600101610a7c565b60046020600192610ae68561130f565b815201920192019190610a58565b50346101a357806003193601126101a357610b0d6112ea565b50600854908115610b74576000198201918211610456576080610b38610b3284611144565b5061130f565b6040805182516001600160a01b039081168252602080850151821690830152838301519282019290925260609283015190911691810191909152f35b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207472656173757279206368616e676573207265636f72646564000000006044820152606490fd5b50346101a357806003193601126101a357610bd26113a4565b805460ff8160a01c1615610c3d5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337fcc2b689b01792ccc45f7d02099e9ef3ffd7058e45803395690c61efdd0f0c6348280a280f35b638dfc202b60e01b8252600482fd5b50346101a357806003193601126101a357602060405160148152f35b50346101a35760203660031901126101a357600435338252600660205260ff6040832054168015610d44575b610c9d906112a5565b60148111610cff576004549080600455610cd6604051610cbc816111af565b838152826020820152426040820152336060820152611203565b33917f9e74d2175d1604ca094d3c60971771fb54aa1a0adbadcedcb69c48cfbd4feb998480a480f35b60405162461bcd60e51b815260206004820152601960248201527f4665652063616e6e6f7420657863656564206d6178696d756d000000000000006044820152606490fd5b5081546001600160a01b03163314610c94565b50346101a35760203660031901126101a357600435610d746113a4565b610d8360ff6005541615611163565b600181101580610e2b575b15610de65760045490818114610db15780600455610cd6604051610cbc816111af565b60405162461bcd60e51b815260206004820152600d60248201526c119959481d5b98da185b99d959609a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f466565206d757374206265206265747765656e20312520616e642032302500006044820152606490fd5b506014811115610d8e565b50346101a357806003193601126101a3576002546040516001600160a01b039091168152602090f35b50346101a35760203660031901126101a357610e796110f4565b610e816113a4565b6001600160a01b03168015610f24576002546001600160a01b038116610edf576001600160a01b03191681176002556040514281527f7f7d6e7886dca58922d0593a44928fb5066cd0e04369c371d72eb96e61368fa890602090a280f35b60405162461bcd60e51b815260206004820152601b60248201527f53746f7261676520616c726561647920696e697469616c697a656400000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073746f7261676520636f6e747261637400000000000000006044820152606490fd5b50346101a35760203660031901126101a357600435906007548210156101a3576080610f948361110f565b50805490600181015490600281015490600360018060a01b039101541691604051938452602084015260408301526060820152f35b50346101a35760203660031901126101a357600435906004549182810292818404149015171561045657602082606460405191048152f35b50346101a357806003193601126101a357602060ff600554166040519015158152f35b50346101a35760403660031901126101a35761103e6110f4565b602435908115158092036110f0576110546113a4565b6001600160a01b031680156110ab5780835260066020526040832060ff1981541660ff84161790556040519182527f1d05944b75552398d6505993a2bc80206d8219c4454def4cfd2e97793edbbfce60203393a380f35b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206f70657261746f72206164647265737300000000000000006044820152606490fd5b8280fd5b600435906001600160a01b038216820361110a57565b600080fd5b60075481101561112e57600760005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b60085481101561112e57600860005260206000209060021b0190600090565b1561116a57565b60405162461bcd60e51b815260206004820152601860248201527f53797374656d20696e20656d657267656e6379206d6f646500000000000000006044820152606490fd5b6080810190811067ffffffffffffffff8211176111cb57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176111cb57604052565b600754600160401b8110156111cb57600181016007556000600754821015611291576007905260021b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801908051825560208101516001830155604081015160028301556060015160039190910180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b81526032600452602490fd5b156112ac57565b60405162461bcd60e51b81526020600482015260166024820152752737ba1032b6b2b933b2b731bc9037b832b930ba37b960511b6044820152606490fd5b604051906112f7826111af565b60006060838281528260208201528260408201520152565b9060405161131c816111af565b82546001600160a01b039081168252600184015481166020830152600284015460408301526003909301549092166060830152565b67ffffffffffffffff81116111cb5760051b60200190565b90604051611376816111af565b8254815260018301546020820152600283015460408201526003909201546001600160a01b03166060830152565b6000546001600160a01b031633036113b857565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220d2609eb7a86ba4239d0d20e7fe1433858a890b5ea8ecc453969fd98fc8e6b98a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1908 CODESIZE DUP2 SWAP1 SUB SWAP1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH2 0x3CA JUMPI SWAP2 DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x4C8 JUMPI PUSH2 0x50 DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP2 PUSH1 0x40 PUSH2 0x5F PUSH1 0x20 DUP5 ADD PUSH2 0x4F0 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP3 CALLER ISZERO PUSH2 0x4B4 JUMPI DUP2 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP6 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x472 JUMPI POP PUSH1 0x1 DUP5 LT ISZERO DUP1 PUSH2 0x467 JUMPI JUMPDEST ISZERO PUSH2 0x422 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3DE JUMPI JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH2 0x10B PUSH2 0x4D1 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x7 SLOAD SWAP6 PUSH9 0x10000000000000000 DUP8 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x7 SSTORE PUSH1 0x7 SLOAD DUP8 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x7 SWAP1 SWAP5 MSTORE SWAP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x2 SWAP7 SWAP1 SWAP7 SHL SWAP6 DUP7 ADD SSTORE SWAP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A DUP5 ADD SSTORE MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x216 PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x8 SLOAD SWAP4 PUSH9 0x10000000000000000 DUP6 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x1 DUP6 ADD PUSH1 0x8 SSTORE PUSH1 0x0 SWAP5 PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x8 SWAP1 SWAP6 MSTORE SWAP3 MLOAD PUSH1 0x2 SWAP5 SWAP1 SWAP5 SHL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 DUP3 ADD DUP1 SLOAD DUP7 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE5 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE6 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE DUP3 SWAP2 PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE SWAP2 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH2 0x1403 SWAP1 DUP2 PUSH2 0x505 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 CODESIZE PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP5 GT ISZERO PUSH2 0xD7 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x3A0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x4CC JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x1024 JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x1001 JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0xFC9 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0xF69 JUMPI DUP1 PUSH4 0x10C28619 EQ PUSH2 0xE5F JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0xE36 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0xD57 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0xC68 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0xC4C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0xAF4 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0x975 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C0 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x218 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xA0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP1 DUP7 SHL SUB PUSH1 0x3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x80 PUSH2 0x2CC DUP4 PUSH2 0x1144 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x332 PUSH2 0x10F4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x3A4 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x414 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x456 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x483 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x4FA PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x511 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0x62D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x551 DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x619 JUMPI DUP1 PUSH1 0x1 PUSH2 0x589 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x1144 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x605 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x7AE JUMPI JUMPDEST PUSH2 0x703 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0x766 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x759 JUMPI PUSH2 0x74B JUMPI DUP1 RETURN JUMPDEST PUSH2 0x754 SWAP2 PUSH2 0x11E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FA JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x7 SLOAD PUSH2 0x7DE DUP2 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x11E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x898 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x84D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x88A PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x8A8 DUP6 PUSH2 0x1369 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x81B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x8CF PUSH2 0x12EA JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x456 JUMPI PUSH1 0x80 PUSH2 0x8FA PUSH2 0x8F4 DUP5 PUSH2 0x110F JUMP JUMPDEST POP PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x92E PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x9EB JUMPI JUMPDEST PUSH2 0x9A6 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99D JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x8 SLOAD PUSH2 0xA1B DUP2 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0xA28 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x11E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xAD6 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xA8A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xAE6 DUP6 PUSH2 0x130F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xB0D PUSH2 0x12EA JUMP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB74 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x456 JUMPI PUSH1 0x80 PUSH2 0xB38 PUSH2 0xB32 DUP5 PUSH2 0x1144 JUMP JUMPDEST POP PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xBD2 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0xC3D JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD44 JUMPI JUMPDEST PUSH2 0xC9D SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x14 DUP2 GT PUSH2 0xCFF JUMPI PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x4 SSTORE PUSH2 0xCD6 PUSH1 0x40 MLOAD PUSH2 0xCBC DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1203 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC94 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD74 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0xD83 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0xE2B JUMPI JUMPDEST ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x4 SLOAD SWAP1 DUP2 DUP2 EQ PUSH2 0xDB1 JUMPI DUP1 PUSH1 0x4 SSTORE PUSH2 0xCD6 PUSH1 0x40 MLOAD PUSH2 0xCBC DUP2 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0xD8E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xE79 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F7261676520616C726561647920696E697469616C697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746F7261676520636F6E74726163740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x80 PUSH2 0xF94 DUP4 PUSH2 0x110F JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x4 SLOAD SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x456 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x103E PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10F0 JUMPI PUSH2 0x1054 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x10AB JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x110A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x112E JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x112E JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x116A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x11CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x11CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x7 SWAP1 MSTORE PUSH1 0x2 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x12F7 DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x131C DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1376 DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x13B8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH1 0x9E 0xB7 0xA8 PUSH12 0xA4239D0D20E7FE1433858A89 SIGNEXTEND MCOPY 0xA8 0xEC 0xC4 MSTORE8 SWAP7 SWAP16 0xD9 DUP16 0xC8 0xE6 0xB9 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "255:9216:9:-:0;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;;;;-1:-1:-1;;255:9216:9;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2160:10;;1273:26:0;1269:95;;255:9216:9;;2160:10;-1:-1:-1;;;;;;513:2:9;;;;;;255:9216;;;;-1:-1:-1;;;;;255:9216:9;3052:40:0;255:9216:9;;3052:40:0;255:9216:9;513:2;;664:5;255:9216;;-1:-1:-1;;255:9216:9;;;-1:-1:-1;;;;;255:9216:9;;2190:30;;255:9216;;2287:39;255:9216;2287:39;;;:82;;;-1:-1:-1;513:2:9;;;-1:-1:-1;;;;;255:9216:9;;2437:184;;-1:-1:-1;;2639:34:9;513:2;;-1:-1:-1;;;;;;513:2:9;;;;;2683:40;513:2;;;;;:::i;:::-;;;;;255:9216;2785:160;;513:2;;;255:9216;2785:160;;2884:15;513:2;;255:9216;2785:160;;2160:10;;513:2;;2769:10;513:2;;;;;;;;255:9216;513:2;;2769:10;513:2;2769:10;513:2;;;;;;2769:10;513:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;-1:-1:-1;;;;;;513:2:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;513:2:9;;255:9216;2978:181;;513:2;;;255:9216;2978:181;;2884:15;513:2;;255:9216;2978:181;;2160:10;;513:2;;2957:15;513:2;;;;;;;;255:9216;513:2;;2957:15;513:2;-1:-1:-1;513:2:9;2957:15;513:2;;;;;;2957:15;513:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;;513:2:9;;;-1:-1:-1;;;;;255:9216:9;;;513:2;;;;;;;;;;;;;255:9216;;;513:2;;;;;;;;;;;;;;;;;;;;;;;255:9216;;513:2;;;;;;2160:10;-1:-1:-1;513:2:9;;;3214:18;255:9216;513:2;;;255:9216;513:2;;;;255:9216;;-1:-1:-1;;255:9216:9;;;;;;;;;;513:2;;;2160:10;;3266:54;;255:9216;3266:54;255:9216;;;;;;;;;513:2;-1:-1:-1;;;513:2:9;;;2683:40;513:2;;255:9216;513:2;;255:9216;;;-1:-1:-1;255:9216:9;;2683:40;255:9216;;-1:-1:-1;255:9216:9;513:2;-1:-1:-1;;;513:2:9;;;2683:40;513:2;;255:9216;513:2;;-1:-1:-1;;;255:9216:9;;;2683:40;255:9216;;;;2437:184;2487:49;513:2;;-1:-1:-1;;;;;;513:2:9;;;;;255:9216;;2594:15;513:2;;2555:55;;255:9216;;2555:55;2437:184;;;513:2;255:9216;;-1:-1:-1;;;513:2:9;;255:9216;513:2;;;;;;;;255:9216;513:2;255:9216;;;513:2;;;;2287:82;2330:39;513:2;2330:39;;;2287:82;;255:9216;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;;255:9216:9;;;;1322:31:0;;255:9216:9;;;;;;;;;;;;513:2;255:9216;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;255:9216:9;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 4340,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_struct_FeeChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_TreasuryChange": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_and_zero_memory_struct_struct_TreasuryChange": {
                  "entryPoint": 4842,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_TreasuryChange_dyn": {
                  "entryPoint": 4945,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_struct_FeeChange_to_array_struct_FeeChange_storage_dyn_ptr": {
                  "entryPoint": 4611,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 4577,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_15307": {
                  "entryPoint": 4527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 5028,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_reference_type_struct_FeeChange": {
                  "entryPoint": 4969,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_TreasuryChange": {
                  "entryPoint": 4879,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_6aa0": {
                  "entryPoint": 4451,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_dc1b": {
                  "entryPoint": 4773,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_struct_FeeChange__dyn": {
                  "entryPoint": 4420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_FeeChange_storage_dyn": {
                  "entryPoint": 4367,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E88899 EQ PUSH2 0x1024 JUMPI DUP1 PUSH4 0x905F560 EQ PUSH2 0x1001 JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCBAB4F7 EQ PUSH2 0xFC9 JUMPI DUP1 PUSH4 0xD35A167 EQ PUSH2 0xF69 JUMPI DUP1 PUSH4 0x10C28619 EQ PUSH2 0xE5F JUMPI DUP1 PUSH4 0x11CE0267 EQ PUSH2 0xE36 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0xD57 JUMPI DUP1 PUSH4 0x18B4F23B EQ PUSH2 0xC68 JUMPI DUP1 PUSH4 0x3998A681 EQ PUSH2 0xC4C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0x4863687E EQ PUSH2 0xAF4 JUMPI DUP1 PUSH4 0x492ADAA8 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x4C17B530 EQ PUSH2 0x975 JUMPI DUP1 PUSH4 0x5071F27B EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0x5707ED45 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x6F04D994 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x7A9B93C6 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xA10EB354 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA380B86B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC116D936 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C0 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x218 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xA0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP1 DUP7 SHL SUB PUSH1 0x3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x80 PUSH2 0x2CC DUP4 PUSH2 0x1144 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x332 PUSH2 0x10F4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x3A4 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x414 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xF9C91E483CE8BC4CC31645E7CC0F01A3371813E76469A71104841507F0140290 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x456 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x483 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x4FA PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x511 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP3 EQ PUSH2 0x62D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x551 DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x40 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x619 JUMPI DUP1 PUSH1 0x1 PUSH2 0x589 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x1144 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x605 JUMPI MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x23C12D5579081C5F1077C04A6B1C114D0F3DE239E81A436836D30ECB099FFA13 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 SWAP1 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C99585CDD5C9E481D5B98DA185B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x7AE JUMPI JUMPDEST PUSH2 0x703 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 DUP3 SWAP2 EXTCODESIZE ISZERO PUSH2 0x766 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0x5A2F406F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x759 JUMPI PUSH2 0x74B JUMPI DUP1 RETURN JUMPDEST PUSH2 0x754 SWAP2 PUSH2 0x11E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FA JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x7 SLOAD PUSH2 0x7DE DUP2 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x11E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x898 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x84D JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0x80 DUP3 PUSH2 0x88A PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x8A8 DUP6 PUSH2 0x1369 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x81B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x8CF PUSH2 0x12EA JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x456 JUMPI PUSH1 0x80 PUSH2 0x8FA PUSH2 0x8F4 DUP5 PUSH2 0x110F JUMP JUMPDEST POP PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x92E PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH1 0x60 SWAP1 DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20666565206368616E676573207265636F72646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x9EB JUMPI JUMPDEST PUSH2 0x9A6 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO AND DUP1 SWAP2 PUSH1 0xFF NOT AND OR PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0xC35ED978E97C366B3A5F9375508BCFBCA850FCA66BF334B9477118918E6EAA40 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99D JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x8 SLOAD PUSH2 0xA1B DUP2 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0xA28 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x11E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP4 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xAD6 JUMPI DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xA8A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP6 POP PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xAE6 DUP6 PUSH2 0x130F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xB0D PUSH2 0x12EA JUMP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB74 JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x456 JUMPI PUSH1 0x80 PUSH2 0xB38 PUSH2 0xB32 DUP5 PUSH2 0x1144 JUMP JUMPDEST POP PUSH2 0x130F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE DUP4 DUP4 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207472656173757279206368616E676573207265636F7264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xBD2 PUSH2 0x13A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0xC3D JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 CALLER PUSH32 0xCC2B689B01792CCC45F7D02099E9EF3FFD7058E45803395690C61EFDD0F0C634 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xD44 JUMPI JUMPDEST PUSH2 0xC9D SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x14 DUP2 GT PUSH2 0xCFF JUMPI PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x4 SSTORE PUSH2 0xCD6 PUSH1 0x40 MLOAD PUSH2 0xCBC DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1203 JUMP JUMPDEST CALLER SWAP2 PUSH32 0x9E74D2175D1604CA094D3C60971771FB54AA1A0ADBADCEDCB69C48CFBD4FEB99 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC94 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD74 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0xD83 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 PUSH2 0xE2B JUMPI JUMPDEST ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x4 SLOAD SWAP1 DUP2 DUP2 EQ PUSH2 0xDB1 JUMPI DUP1 PUSH1 0x4 SSTORE PUSH2 0xCD6 PUSH1 0x40 MLOAD PUSH2 0xCBC DUP2 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x119959481D5B98DA185B99D959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D757374206265206265747765656E20312520616E64203230250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x14 DUP2 GT ISZERO PUSH2 0xD8E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xE79 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x7F7D6E7886DCA58922D0593A44928FB5066CD0E04369C371D72EB96E61368FA8 SWAP1 PUSH1 0x20 SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F7261676520616C726561647920696E697469616C697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746F7261676520636F6E74726163740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x80 PUSH2 0xF94 DUP4 PUSH2 0x110F JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x4 SLOAD SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x456 JUMPI PUSH1 0x20 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x103E PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10F0 JUMPI PUSH2 0x1054 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x10AB JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1D05944B75552398D6505993A2BC80206D8219C4454DEF4CFD2E97793EDBBFCE PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x110A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x112E JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x112E JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x116A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53797374656D20696E20656D657267656E6379206D6F64650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x11CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x11CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x7 SWAP1 MSTORE PUSH1 0x2 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1032B6B2B933B2B731BC9037B832B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x12F7 DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x131C DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1376 DUP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x13B8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH1 0x9E 0xB7 0xA8 PUSH12 0xA4239D0D20E7FE1433858A89 SIGNEXTEND MCOPY 0xA8 0xEC 0xC4 MSTORE8 SWAP7 SWAP16 0xD9 DUP16 0xC8 0xE6 0xB9 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "255:9216:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:9216:9;2627:22:0;;2623:91;;255:9216:9;;-1:-1:-1;;;;;;255:9216:9;;;;;;-1:-1:-1;;;;;255:9216:9;3052:40:0;255:9216:9;;3052:40:0;255:9216:9;;2623:91:0;-1:-1:-1;;;2672:31:0;;255:9216:9;;;;;2672:31:0;;255:9216:9;;;;;;;;;;;;;362:30;255:9216;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;8136:10;255:9216;8186:15;255:9216;;8236:13;255:9216;;;;;;;;;;8318:15;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;;1126:39;255:9216;1126:39;;;;;255:9216;1126:39;;;:::i;:::-;-1:-1:-1;255:9216:9;;;1126:39;;255:9216;1126:39;;;255:9216;1126:39;;;;255:9216;;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;:::i;:::-;;;;8494:18;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:9216:9;;;;;;;1939:61:6;;-1:-1:-1;;;;255:9216:9;-1:-1:-1;;;255:9216:9;;;;;735:10:5;255:9216:9;;2427:20:6;;255:9216:9;;2427:20:6;735:10:5;5268:23:9;;;;255:9216;;1939:61:6;-1:-1:-1;;;1974:15:6;;255:9216:9;1974:15:6;;255:9216:9;;;;;;;;;;;;;;;;7600:3;255:9216;;;;;;7600:3;255:9216;;;;;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:9216:9;;-1:-1:-1;;;;;;255:9216:9;;;;;;-1:-1:-1;;;;;255:9216:9;3052:40:0;255:9216:9;;3052:40:0;255:9216:9;;;;;;;;;;;;;;;;;;583:1;255:9216;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;1954:51:9;255:9216;1963:13;255:9216;;1962:14;1954:51;:::i;:::-;-1:-1:-1;;;;;255:9216:9;4621:33;;255:9216;;4724:15;255:9216;-1:-1:-1;;;;;255:9216:9;;;;4701:38;;;255:9216;;-1:-1:-1;;;;;;255:9216:9;;;4724:15;255:9216;;;;;;:::i;:::-;;;;;4923:185;;255:9216;;;;4923:185;;5047:15;255:9216;;4923:185;;;5087:10;;255:9216;;4902:15;255:9216;-1:-1:-1;;;255:9216:9;;;;;;;;;;4902:15;255:9216;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;255:9216:9;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4724:15;255:9216;;;;;;;;;;;;;;;;;5087:10;;5125:61;;;;255:9216;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;1827:10;255:9216;;1808:18;255:9216;;;;;;;;1808:55;;;;255:9216;1800:90;;;:::i;:::-;6153:15;255:9216;-1:-1:-1;;;;;255:9216:9;6145:38;;255:9216;;6221:53;;;;;;;255:9216;;;6221:53;255:9216;;;;;;;;;6221:53;;255:9216;;;6221:53;;255:9216;6221:53;;;;;;;;255:9216;;6221:53;;;;:::i;:::-;;;255:9216;;6221:53;255:9216;;;;;;;;;;;6221:53;255:9216;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;1808:55;-1:-1:-1;255:9216:9;;-1:-1:-1;;;;;255:9216:9;1827:10;1842:21;1808:55;;255:9216;;;;;;;;;;;;;7223:10;255:9216;;;;:::i;:::-;;;;;;;:::i;:::-;;;;7223:10;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8670:10;255:9216;8670:21;;;255:9216;;-1:-1:-1;;255:9216:9;;;;;;;;;8736:33;;;:::i;:::-;255:9216;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:10;255:9216;;1808:18;255:9216;;;;;;;;1808:55;;;;255:9216;1800:90;;;:::i;:::-;5566:13;255:9216;;;;;5565:14;255:9216;;;;;;;5566:13;255:9216;;;;;;;;5594:47;255:9216;1827:10;5594:47;;255:9216;;1808:55;-1:-1:-1;255:9216:9;;-1:-1:-1;;;;;255:9216:9;1827:10;1842:21;1808:55;;255:9216;;;;;;;;;;;;;7385:15;255:9216;;;;:::i;:::-;;;;;;;:::i;:::-;;;;7385:15;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:9216:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8932:15;255:9216;8932:26;;;255:9216;;-1:-1:-1;;255:9216:9;;;;;;;;;9008:43;;;:::i;:::-;255:9216;;:::i;:::-;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;255:9216:9;;;;;;;2140:9:6;2136:62;;-1:-1:-1;;;;255:9216:9;;;;;735:10:5;255:9216:9;;2674:22:6;;255:9216:9;;2674:22:6;735:10:5;5377:25:9;;;;255:9216;;2136:62:6;-1:-1:-1;;;2172:15:6;;255:9216:9;2172:15:6;;255:9216:9;;;;;;;;;;;;;;;;513:2;255:9216;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;1827:10;255:9216;;1808:18;255:9216;;;;;;;;1808:55;;;;255:9216;1800:90;;;:::i;:::-;513:2;6465:34;;255:9216;;;;;;;;6639:177;255:9216;;;;;:::i;:::-;;;;6655:160;255:9216;6655:160;;255:9216;6754:15;255:9216;6655:160;;255:9216;1827:10;6655:160;;;255:9216;6639:177;:::i;:::-;1827:10;6832:54;;;;;255:9216;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;1808:55;-1:-1:-1;255:9216:9;;-1:-1:-1;;;;;255:9216:9;1827:10;1842:21;1808:55;;255:9216;;;;;;;-1:-1:-1;;255:9216:9;;;;;;1500:62:0;;:::i;:::-;1954:51:9;255:9216;1963:13;255:9216;;1962:14;1954:51;:::i;:::-;255:9216;3916:34;;;:72;;;255:9216;;;;;;4063:36;;;;255:9216;;;;;4248:177;255:9216;;;;;:::i;:::-;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;3916:72;3954:34;513:2;3954:34;;;3916:72;;255:9216;;;;;;;;;;;;;320:36;255:9216;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:9216:9;3501:30;;255:9216;;3586:15;255:9216;-1:-1:-1;;;;;255:9216:9;;;;-1:-1:-1;;;;;;255:9216:9;;;3586:15;255:9216;;;3770:15;255:9216;;3731:55;;255:9216;;3731:55;255:9216;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;;904:29;255:9216;904:29;;;;;255:9216;904:29;;;:::i;:::-;255:9216;;;904:29;255:9216;904:29;;255:9216;904:29;;;;255:9216;;904:29;255:9216;;;;;904:29;;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;;;;7808:27;255:9216;;;;;;;;;;;;;;;;7839:3;255:9216;;;;;;;;;;;;;;;;;;;;;;636:33;255:9216;;;;;;;;;;;;;;;;;-1:-1:-1;;255:9216:9;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;255:9216:9;5802:22;;255:9216;;;;;5863:18;255:9216;;;;;;;;;;;;;;;;;;;;;5915:54;255:9216;5958:10;5915:54;;255:9216;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;;:::o;:::-;;;;;904:29;255:9216;;;;;;904:29;-1:-1:-1;255:9216:9;;-1:-1:-1;255:9216:9;;;;;;-1:-1:-1;255:9216:9;:::o;:::-;;;;;;;;;;;;;8932:15;255:9216;;;;;;8932:15;-1:-1:-1;255:9216:9;;-1:-1:-1;255:9216:9;;;;;;-1:-1:-1;255:9216:9;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;255:9216:9;;;;;-1:-1:-1;255:9216:9;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;4248:10;255:9216;-1:-1:-1;;;255:9216:9;;;;;;;;4248:10;255:9216;-1:-1:-1;4248:10:9;255:9216;;;;;;4248:10;255:9216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;255:9216:9;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;:::o;:::-;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;-1:-1:-1;;;255:9216:9;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;255:9216:9;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;255:9216:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;255:9216:9;;;;;:::o;1796:162:0:-;1710:6;255:9216:9;-1:-1:-1;;;;;255:9216:9;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:5;1901:40:0;255:9216:9;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_PLATFORM_FEE()": "3998a681",
              "MIN_PLATFORM_FEE()": "6f04d994",
              "admin()": "f851a440",
              "calculatePlatformFee(uint256)": "0cbab4f7",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "emergencyMode()": "0905f560",
              "emergencyOperators(address)": "09705de8",
              "emergencySetPlatformFee(uint256)": "18b4f23b",
              "feeHistory(uint256)": "0d35a167",
              "getAdminStats()": "c116d936",
              "getFeeHistory()": "5707ed45",
              "getLatestFeeChange()": "5071f27b",
              "getLatestTreasuryChange()": "4863687e",
              "getPlatformFeeBasisPoints()": "7a9b93c6",
              "getTreasuryHistory()": "492adaa8",
              "initializeStorageContract(address)": "10c28619",
              "isEmergencyOperator(address)": "a10eb354",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "platformFeePercent()": "8c639a85",
              "renounceOwnership()": "715018a6",
              "setEmergencyOperator(address,bool)": "02e88899",
              "setPlatformFee(uint256)": "12e8e2c3",
              "setTreasuryAddress(address)": "6605bfda",
              "storageContract()": "11ce0267",
              "toggleEmergencyMode()": "4c17b530",
              "transferOwnership(address)": "f2fde38b",
              "treasury()": "61d027b3",
              "treasuryAddress()": "c5f956af",
              "treasuryHistory(uint256)": "a380b86b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"AdminUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractsInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggeredBy\",\"type\":\"address\"}],\"name\":\"EmergencyModeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"}],\"name\":\"EmergencyOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"emergencyOperators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"emergencySetPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFeeChanges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTreasuryChanges\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEmergencyMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currentTreasury\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestFeeChange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.FeeChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTreasuryChange\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"internalType\":\"struct ZaaNetAdmin.TreasuryChange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"}],\"name\":\"initializeStorageContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isEmergencyOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setEmergencyOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"treasuryHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Expose admin address for other contracts (interface compatibility)\"},\"calculatePlatformFee(uint256)\":{\"notice\":\"Calculate platform fee for a given amount\"},\"emergencyDeactivateNetwork(uint256)\":{\"notice\":\"Emergency function to deactivate a network\"},\"emergencySetPlatformFee(uint256)\":{\"notice\":\"Emergency fee adjustment (bypasses normal restrictions)\"},\"getAdminStats()\":{\"notice\":\"Get admin statistics\"},\"getFeeHistory()\":{\"notice\":\"Get fee change history\"},\"getLatestFeeChange()\":{\"notice\":\"Get latest fee change details\"},\"getLatestTreasuryChange()\":{\"notice\":\"Get latest treasury change details\"},\"getPlatformFeeBasisPoints()\":{\"notice\":\"Get current fee in basis points (for more precise calculations)\"},\"getTreasuryHistory()\":{\"notice\":\"Get treasury change history\"},\"initializeStorageContract(address)\":{\"notice\":\"Initialize storage contract if not set in constructor\"},\"isEmergencyOperator(address)\":{\"notice\":\"Check if address is emergency operator\"},\"paused()\":{\"notice\":\"Check if contract is paused (interface compatibility)\"},\"setEmergencyOperator(address,bool)\":{\"notice\":\"Add or remove emergency operators\"},\"toggleEmergencyMode()\":{\"notice\":\"Toggle emergency mode (stops most operations)\"},\"treasury()\":{\"notice\":\"Alternative name for treasury address (interface compatibility)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetAdmin.sol\":\"ZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetAdmin.sol\":{\"keccak256\":\"0x23e810954ccdba63ec1f1a2b49f4f93bca616553d3871edbb2f262e31505ddcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1750a7f8e8a3e7ed6b7ae6027994569a19c8b112ddb8e2a29b8325bd245403\",\"dweb:/ipfs/QmcmeB7viDrZhiFk5679wCvBZCKwPhQtf7gPqq5XsLR71y\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetNetwork.sol": {
        "ZaaNetNetwork": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newHostAddress",
                  "type": "address"
                }
              ],
              "name": "HostAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPrice",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPrice",
                  "type": "uint256"
                }
              ],
              "name": "NetworkPriceUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                }
              ],
              "name": "NetworkRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "oldStatus",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newStatus",
                  "type": "bool"
                }
              ],
              "name": "NetworkStatusChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerHour",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_MONGO_DATA_LENGTH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_PRICE_PER_SESSION",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "REGISTRATION_COOLDOWN",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "deactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getActiveHostNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllActiveNetworks",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalEarnings",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                }
              ],
              "name": "getHostedNetworkById",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "networks",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "isRegisteredHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastRegistrationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkToHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_pricePerHour",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "registerNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_pricePerHour",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isActive",
                  "type": "bool"
                }
              ],
              "name": "updateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461012557601f611b9d38819003918201601f19168301916001600160401b0383118484101761012a5780849260209460405283398101031261012557516001600160a01b0381169081900361012557331561010f5760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805581156100cd5750600280546001600160a01b031916919091179055604051611a5c90816101418239f35b62461bcd60e51b815260206004820181905260248201527f496e76616c69642073746f7261676520636f6e747261637420616464726573736044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816309115e97146115335750806311ce02671461150a57806316cb6eff146114085780631b63fe671461119d5780632b2a748c14610fd05780633f4ba83a14610f625780634335521414610f2f5780634b9791e814610bad5780635c975abb14610b88578063715018a614610b2e578063764ac7341461098e57806379f0dc57146108d55780637f6e8cbf146108985780638456cb5914610837578063867f1a09146102715780638da5cb5b14610810578063900e41b114610444578063b0ff638314610428578063cd83fb9a14610386578063d4f38d0414610363578063dfe6b5d6146102cf578063e67d86f1146102b3578063eb2931b714610271578063f2fde38b146101e35763fa9c81a41461013457600080fd5b346101e05760403660031901126101e057600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa80156101d3576101a3928280926101ad575b50506040519283926040845260408401906115f9565b9060208301520390f35b9091506101cc92503d8091833e6101c48183611693565b8101906117b5565b388061018d565b50604051903d90823e3d90fd5b80fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d576102126119fd565b80156102595781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d5760408260ff9260209452600384522054166040519015158152f35b50346101e057806003193601126101e057602060405160c88152f35b50346101e057806003193601126101e05760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa908115610357579061031f575b602090604051908152f35b506020813d60201161034f575b8161033960209383611693565b8101031261034a5760209051610314565b600080fd5b3d915061032c565b604051903d90823e3d90fd5b50346101e057806003193601126101e0576020604051674563918244f400008152f35b50346101e05760203660031901126101e0576103a06118a8565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa90811561041d57826103f693926103fa575b505060405191829160208352602083019061159d565b0390f35b61041692503d8091833e61040e8183611693565b81019061192f565b38806103e0565b6040513d84823e3d90fd5b50346101e057806003193601126101e0576020604051603c8152f35b50346101e05760603660031901126101e05760243560043567ffffffffffffffff821161070e573660238301121561070e5782826004013592610486846116b5565b936104946040519586611693565b808552366024828401011161070e578060246020930183870137840101526104ba611652565b6104c26119bb565b6104ca6119db565b33845260066020526040842054603c81018091116107fc5742106107b7576702c68af0bb140000821015806107a5575b61050390611958565b82518015159081610799575b5015610754576002546040516329487fe360e11b815292859290916020908590600490829087906001600160a01b03165af1938415610749578394610712575b5060018060a01b0360025416906040519261056984611661565b8584523360208501526040840152856060840152151560808301524260a08301524260c0830152803b1561070e57604051631430350760e21b815291839183918290849082906105bd908a600484016119a4565b03925af1801561041d576106f9575b5050338352600460205260408320805490680100000000000000008210156106e557600182018082558210156106d1579082918552602085200155808352600560205260408320336bffffffffffffffffffffffff60a01b8254161790553383526006602052426040842055338352600360205260ff60408420541615610690575b7fac8d319e4ba2a19144062917c8cb50cc9cffb2f0eea3004b86b48c06cc6845c8604051602081528061068633956020830190611578565b0390a36001805580f35b33808452600360205260408420805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38480a261064e565b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b8161070391611693565b61070e5782386105cc565b8280fd5b925092506020823d602011610741575b8161072f60209383611693565b8101031261034a57849151923861054f565b3d9150610722565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c8915011153861050f565b50674563918244f400008211156104fa565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b85526011600452602485fd5b50346101e057806003193601126101e057546040516001600160a01b039091168152602090f35b50346101e057806003193601126101e0576108506119fd565b6108586119bb565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d578160409160209352600683522054604051908152f35b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d578152600460205260408120604051908160208254918281520190819285526020852090855b8181106109785750505082610937910383611693565b604051928392602084019060208552518091526040840192915b81811061095f575050500390f35b8251845285945060209384019390920191600101610951565b8254845260209093019260019283019201610921565b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d57818183526004602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa948515610b23578695610aef575b508552600460205260408520906040518083602082955493848152019089526020892092895b818110610ad6575050610a3592500383611693565b855b8251811015610abf57610a4a8184611859565b51604051906395ea571760e01b825260048201528781602481885afa8015610ab4576080918991610a9a575b500151610a86575b600101610a37565b93610a92600191611883565b949050610a7e565b610aae91503d808b833e61040e8183611693565b38610a76565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610a20565b9094506020813d602011610b1b575b81610b0b60209383611693565b8101031261034a575193386109fa565b3d9150610afe565b6040513d88823e3d90fd5b50346101e057806003193601126101e057610b476119fd565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101e057806003193601126101e05760ff6020915460a01c166040519015158152f35b50346101e05760203660031901126101e057600435610bca6119bb565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa908115610749578391610f15575b5060208101516001600160a01b03163303610ed057608081015115610e8b5760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610e80578592610e64575b506020820151336001600160a01b0390911603610e28576702c68af0bb14000084101580610e16575b610c9390611958565b846040830151926080810151151590606081019360a0855192015160405192610cbb84611661565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610e1257610d0c8492918392604051968780948193631430350760e21b83528d600484016119a4565b03925af19283156101d3578693610df1575b50509081610d7393928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9803610dba575b5050610d83575b505051604051948552606060208601526060850190611578565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28338610d59565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a28238610d52565b819294935090610e0091611693565b610e0e579083908638610d1e565b8580fd5b8380fd5b50674563918244f40000841115610c8a565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b610e799192503d8087833e61040e8183611693565b9038610c61565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b610f2991503d8085833e61040e8183611693565b38610c04565b50346101e05760203660031901126101e057602090600435815260058252604060018060a01b0391205416604051908152f35b50346101e057806003193601126101e057610f7b6119fd565b805460ff8160a01c1615610fc15760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d5781526004602052604081206040518082602082945493848152019085526020852092855b81811061118457505061103092500382611693565b60025482906001600160a01b031681805b84518110156110be576110548186611859565b51604051906395ea571760e01b825260048201528281602481875afa80156107495760809184916110a4575b500151611090575b600101611041565b9261109c600191611883565b939050611088565b6110b891503d8086833e61040e8183611693565b38611080565b5050906110ca906118df565b8390845b845181101561116e576110e18186611859565b51604051906395ea571760e01b825260048201528681602481885afa908115611163578791611149575b50608081015161111f575b506001016110ce565b83611142916111316001949686611859565b5261113c8185611859565b50611883565b9290611116565b61115d91503d8089833e61040e8183611693565b3861110b565b6040513d89823e3d90fd5b604051602080825281906103f6908201856115f9565b845483526001948501948694506020909301920161101b565b50346101e05760603660031901126101e0576024356004356111bd611652565b916111c66119bb565b6111ce6119db565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa918215610b235786926113ec575b506020820151336001600160a01b0390911603610e28576702c68af0bb140000831015806113da575b61123790611958565b6040820151866080840151151592606085019460a08651910151986040519161125f83611661565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561070e5782916112b191604051948580948193631430350760e21b83528d600484016119a4565b03925af18015610ab457611398575b509184611317928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d989703611361575b505087810361132a575b505051604051928352606060208401526060830190611578565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a284386112fd565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a281386112f3565b6113179286896113cd7f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611693565b99939596505092506112c0565b50674563918244f4000083111561122e565b6114019192503d8088833e61040e8183611693565b9038611205565b50346101e057806003193601126101e057600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa9182156101d35781926114ed575b5080815b83518110156114985760806114748286611859565b510151611484575b60010161145f565b90611490600191611883565b91905061147c565b506114a2906118df565b815b835181101561116e5760806114b98286611859565b5101516114c9575b6001016114a4565b916114e56001916114da8587611859565b516111318286611859565b9290506114c1565b6115029192503d8084833e6101c48183611693565b50903861145b565b50346101e057806003193601126101e0576002546040516001600160a01b039091168152602090f35b90503461026d578160031936011261026d57806702c68af0bb14000060209252f35b60005b8381106115685750506000910152565b8181015183820152602001611558565b9060209161159181518092818552858086019101611555565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c0806115da606085015160e0606086015260e0850190611578565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b83831061162557505050505090565b9091929394602080611643600193601f19868203018752895161159d565b97019301930191939290611616565b60443590811515820361034a57565b60e0810190811067ffffffffffffffff82111761167d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761167d57604052565b67ffffffffffffffff811161167d57601f01601f191660200190565b67ffffffffffffffff811161167d5760051b60200190565b91909160e08184031261034a576040519061170382611661565b805182526020810151919384926001600160a01b038116810361034a57602084015260408201516040840152606082015167ffffffffffffffff811161034a57820181601f8201121561034a57805161175b816116b5565b926117696040519485611693565b8184526020828401011161034a576117879160208085019101611555565b60608301526080810151801515810361034a5760c0918291608085015260a081015160a08501520151910152565b919060408382031261034a57825167ffffffffffffffff811161034a5783019080601f8301121561034a5781516117eb816116d1565b926117f96040519485611693565b81845260208085019260051b8201019183831161034a5760208201905b83821061182b57505050505060209092015190565b815167ffffffffffffffff811161034a5760209161184e878480948801016116e9565b815201910190611816565b805182101561186d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60001981146118925760010190565b634e487b7160e01b600052601160045260246000fd5b604051906118b582611661565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906118e9826116d1565b6118f66040519182611693565b8281528092611907601f19916116d1565b019060005b82811061191857505050565b6020906119236118a8565b8282850101520161190c565b9060208282031261034a57815167ffffffffffffffff811161034a5761195592016116e9565b90565b1561195f57565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b60409061195593928152816020820152019061159d565b60ff60005460a01c166119ca57565b63d93c066560e01b60005260046000fd5b6002600154146119ec576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b03163303611a1157565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220c9558fb6453ec7ca55b19de52259006e6ec38f310e5fb94b1cbde8bc8b5ecd0664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x125 JUMPI PUSH1 0x1F PUSH2 0x1B9D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x12A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x125 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x125 JUMPI CALLER ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP2 ISZERO PUSH2 0xCD JUMPI POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1A5C SWAP1 DUP2 PUSH2 0x141 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746F7261676520636F6E74726163742061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1533 JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x150A JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1408 JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x119D JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0xFD0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xF62 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0xBAD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2E JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0x898 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x837 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E3 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH2 0x1A3 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1AD JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x1CC SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1C4 DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17B5 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x18D JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI PUSH2 0x212 PUSH2 0x19FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x259 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x357 JUMPI SWAP1 PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34F JUMPI JUMPDEST DUP2 PUSH2 0x339 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x4563918244F40000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x3A0 PUSH2 0x18A8 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x41D JUMPI DUP3 PUSH2 0x3F6 SWAP4 SWAP3 PUSH2 0x3FA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x159D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x70E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x70E JUMPI DUP3 DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x486 DUP5 PUSH2 0x16B5 JUMP JUMPDEST SWAP4 PUSH2 0x494 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1693 JUMP JUMPDEST DUP1 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x70E JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x4BA PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x4C2 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x4CA PUSH2 0x19DB JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0x7FC JUMPI TIMESTAMP LT PUSH2 0x7B7 JUMPI PUSH8 0x2C68AF0BB140000 DUP3 LT ISZERO DUP1 PUSH2 0x7A5 JUMPI JUMPDEST PUSH2 0x503 SWAP1 PUSH2 0x1958 JUMP JUMPDEST DUP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x799 JUMPI JUMPDEST POP ISZERO PUSH2 0x754 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP6 SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x749 JUMPI DUP4 SWAP5 PUSH2 0x712 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x569 DUP5 PUSH2 0x1661 JUMP JUMPDEST DUP6 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x5BD SWAP1 DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x41D JUMPI PUSH2 0x6F9 JUMPI JUMPDEST POP POP CALLER DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x6D1 JUMPI SWAP1 DUP3 SWAP2 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE CALLER DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x690 JUMPI JUMPDEST PUSH32 0xAC8D319E4BA2A19144062917C8CB50CC9CFFB2F0EEA3004B86B48C06CC6845C8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x686 CALLER SWAP6 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP5 DUP1 LOG2 PUSH2 0x64E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP2 PUSH2 0x703 SWAP2 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x70E JUMPI DUP3 CODESIZE PUSH2 0x5CC JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x741 JUMPI JUMPDEST DUP2 PUSH2 0x72F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI DUP5 SWAP2 MLOAD SWAP3 CODESIZE PUSH2 0x54F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x50F JUMP JUMPDEST POP PUSH8 0x4563918244F40000 DUP3 GT ISZERO PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x850 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x858 PUSH2 0x19BB JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x978 JUMPI POP POP POP DUP3 PUSH2 0x937 SWAP2 SUB DUP4 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x95F JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x951 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x921 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xB23 JUMPI DUP7 SWAP6 PUSH2 0xAEF JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xAD6 JUMPI POP POP PUSH2 0xA35 SWAP3 POP SUB DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xA4A DUP2 DUP5 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xA9A JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xA86 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xA37 JUMP JUMPDEST SWAP4 PUSH2 0xA92 PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xAAE SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1B JUMPI JUMPDEST DUP2 PUSH2 0xB0B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x9FA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xB47 PUSH2 0x19FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBCA PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x749 JUMPI DUP4 SWAP2 PUSH2 0xF15 JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xED0 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0xE8B JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP3 PUSH2 0xE64 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE28 JUMPI PUSH8 0x2C68AF0BB140000 DUP5 LT ISZERO DUP1 PUSH2 0xE16 JUMPI JUMPDEST PUSH2 0xC93 SWAP1 PUSH2 0x1958 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCBB DUP5 PUSH2 0x1661 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xE12 JUMPI PUSH2 0xD0C DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1D3 JUMPI DUP7 SWAP4 PUSH2 0xDF1 JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0xD73 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0xDBA JUMPI JUMPDEST POP POP PUSH2 0xD83 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0xD52 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0xE00 SWAP2 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xE0E JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0xD1E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH8 0x4563918244F40000 DUP5 GT ISZERO PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE79 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xF29 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0xC04 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xF7B PUSH2 0x19FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0xFC1 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1184 JUMPI POP POP PUSH2 0x1030 SWAP3 POP SUB DUP3 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x1054 DUP2 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x10A4 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x1090 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1041 JUMP JUMPDEST SWAP3 PUSH2 0x109C PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x10B8 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0x1080 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x10CA SWAP1 PUSH2 0x18DF JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x116E JUMPI PUSH2 0x10E1 DUP2 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1163 JUMPI DUP8 SWAP2 PUSH2 0x1149 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x111F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10CE JUMP JUMPDEST DUP4 PUSH2 0x1142 SWAP2 PUSH2 0x1131 PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1859 JUMP JUMPDEST MSTORE PUSH2 0x113C DUP2 DUP6 PUSH2 0x1859 JUMP JUMPDEST POP PUSH2 0x1883 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x115D SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x3F6 SWAP1 DUP3 ADD DUP6 PUSH2 0x15F9 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x101B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x11BD PUSH2 0x1652 JUMP JUMPDEST SWAP2 PUSH2 0x11C6 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x11CE PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB23 JUMPI DUP7 SWAP3 PUSH2 0x13EC JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE28 JUMPI PUSH8 0x2C68AF0BB140000 DUP4 LT ISZERO DUP1 PUSH2 0x13DA JUMPI JUMPDEST PUSH2 0x1237 SWAP1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x125F DUP4 PUSH2 0x1661 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x70E JUMPI DUP3 SWAP2 PUSH2 0x12B1 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0x1398 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1317 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x1361 JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x132A JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x1317 SWAP3 DUP7 DUP10 PUSH2 0x13CD PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1693 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x12C0 JUMP JUMPDEST POP PUSH8 0x4563918244F40000 DUP4 GT ISZERO PUSH2 0x122E JUMP JUMPDEST PUSH2 0x1401 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1205 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D3 JUMPI DUP2 SWAP3 PUSH2 0x14ED JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x80 PUSH2 0x1474 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1484 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x145F JUMP JUMPDEST SWAP1 PUSH2 0x1490 PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x147C JUMP JUMPDEST POP PUSH2 0x14A2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x116E JUMPI PUSH1 0x80 PUSH2 0x14B9 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x14C9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x14A4 JUMP JUMPDEST SWAP2 PUSH2 0x14E5 PUSH1 0x1 SWAP2 PUSH2 0x14DA DUP6 DUP8 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH2 0x1131 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x1502 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x1C4 DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x145B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x26D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26D JUMPI DUP1 PUSH8 0x2C68AF0BB140000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1568 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1558 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1591 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x15DA PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1625 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1643 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x159D JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x34A JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x167D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x167D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x167D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x167D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1703 DUP3 PUSH2 0x1661 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD SWAP2 SWAP4 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x34A JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x34A JUMPI DUP1 MLOAD PUSH2 0x175B DUP2 PUSH2 0x16B5 JUMP JUMPDEST SWAP3 PUSH2 0x1769 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1693 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x34A JUMPI PUSH2 0x1787 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x34A JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x34A JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x34A JUMPI DUP2 MLOAD PUSH2 0x17EB DUP2 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 PUSH2 0x17F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1693 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x34A JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x182B JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI PUSH1 0x20 SWAP2 PUSH2 0x184E DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x16E9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1816 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x186D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1892 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x18B5 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x18E9 DUP3 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x18F6 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1693 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1907 PUSH1 0x1F NOT SWAP2 PUSH2 0x16D1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1918 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1923 PUSH2 0x18A8 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x190C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x34A JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI PUSH2 0x1955 SWAP3 ADD PUSH2 0x16E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x195F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1955 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x19CA JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x19EC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A11 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SSTORE DUP16 0xB6 GASLIMIT RETURNDATACOPY 0xC7 0xCA SSTORE 0xB1 SWAP14 0xE5 0x22 MSIZE STOP PUSH15 0x6EC38F310E5FB94B1CBDE8BC8B5ECD MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "296:9631:10:-:0;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;1108:10;1273:26:0;1269:95;;-1:-1:-1;296:9631:10;;1108:10;-1:-1:-1;;;;;;296:9631:10;;;;;;;;;1108:10;;-1:-1:-1;;;;;296:9631:10;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:7;;;1151:30:10;;296:9631;;-1:-1:-1;1249:49:10;296:9631;;-1:-1:-1;;;;;;296:9631:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;296:9631:10;;-1:-1:-1;1322:31:0;296:9631:10;-1:-1:-1;296:9631:10;;;;;;-1:-1:-1;296:9631:10;;;;;-1:-1:-1;296:9631:10"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_struct_Network_dynt_uint256_fromMemory": {
                  "entryPoint": 6069,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool": {
                  "entryPoint": 5714,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_fromMemory": {
                  "entryPoint": 5865,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Network_memory_ptr_fromMemory": {
                  "entryPoint": 6447,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_struct_Network_dyn": {
                  "entryPoint": 5625,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 5496,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 5533,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_struct_Network": {
                  "entryPoint": 6564,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_struct_Network_dyn": {
                  "entryPoint": 6367,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 6312,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 5841,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 5813,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 5461,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 5779,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_15382": {
                  "entryPoint": 5729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6653,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 6619,
                  "id": 1090,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 6587,
                  "id": 995,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 6275,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 6233,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_bfd3": {
                  "entryPoint": 6488,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816309115e97146115335750806311ce02671461150a57806316cb6eff146114085780631b63fe671461119d5780632b2a748c14610fd05780633f4ba83a14610f625780634335521414610f2f5780634b9791e814610bad5780635c975abb14610b88578063715018a614610b2e578063764ac7341461098e57806379f0dc57146108d55780637f6e8cbf146108985780638456cb5914610837578063867f1a09146102715780638da5cb5b14610810578063900e41b114610444578063b0ff638314610428578063cd83fb9a14610386578063d4f38d0414610363578063dfe6b5d6146102cf578063e67d86f1146102b3578063eb2931b714610271578063f2fde38b146101e35763fa9c81a41461013457600080fd5b346101e05760403660031901126101e057600254604051633ea7206960e21b81526004803590820152602480359082015291908190839060449082906001600160a01b03165afa80156101d3576101a3928280926101ad575b50506040519283926040845260408401906115f9565b9060208301520390f35b9091506101cc92503d8091833e6101c48183611693565b8101906117b5565b388061018d565b50604051903d90823e3d90fd5b80fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d576102126119fd565b80156102595781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d5760408260ff9260209452600384522054166040519015158152f35b50346101e057806003193601126101e057602060405160c88152f35b50346101e057806003193601126101e05760025460405163217c682d60e01b81529190602090839060049082906001600160a01b03165afa908115610357579061031f575b602090604051908152f35b506020813d60201161034f575b8161033960209383611693565b8101031261034a5760209051610314565b600080fd5b3d915061032c565b604051903d90823e3d90fd5b50346101e057806003193601126101e0576020604051674563918244f400008152f35b50346101e05760203660031901126101e0576103a06118a8565b506002546040516395ea571760e01b81526004803590820152908290829060249082906001600160a01b03165afa90811561041d57826103f693926103fa575b505060405191829160208352602083019061159d565b0390f35b61041692503d8091833e61040e8183611693565b81019061192f565b38806103e0565b6040513d84823e3d90fd5b50346101e057806003193601126101e0576020604051603c8152f35b50346101e05760603660031901126101e05760243560043567ffffffffffffffff821161070e573660238301121561070e5782826004013592610486846116b5565b936104946040519586611693565b808552366024828401011161070e578060246020930183870137840101526104ba611652565b6104c26119bb565b6104ca6119db565b33845260066020526040842054603c81018091116107fc5742106107b7576702c68af0bb140000821015806107a5575b61050390611958565b82518015159081610799575b5015610754576002546040516329487fe360e11b815292859290916020908590600490829087906001600160a01b03165af1938415610749578394610712575b5060018060a01b0360025416906040519261056984611661565b8584523360208501526040840152856060840152151560808301524260a08301524260c0830152803b1561070e57604051631430350760e21b815291839183918290849082906105bd908a600484016119a4565b03925af1801561041d576106f9575b5050338352600460205260408320805490680100000000000000008210156106e557600182018082558210156106d1579082918552602085200155808352600560205260408320336bffffffffffffffffffffffff60a01b8254161790553383526006602052426040842055338352600360205260ff60408420541615610690575b7fac8d319e4ba2a19144062917c8cb50cc9cffb2f0eea3004b86b48c06cc6845c8604051602081528061068633956020830190611578565b0390a36001805580f35b33808452600360205260408420805460ff191660011790557f8ff9310abede1de3c5d3fdbb7cf09c40bc8258ca75c0f949ad92f964deac98b38480a261064e565b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b8161070391611693565b61070e5782386105cc565b8280fd5b925092506020823d602011610741575b8161072f60209383611693565b8101031261034a57849151923861054f565b3d9150610722565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204d6f6e676f446174614944206c656e6774680000000000006044820152606490fd5b60c8915011153861050f565b50674563918244f400008211156104fa565b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e20636f6f6c646f776e20616374697665000000006044820152606490fd5b634e487b7160e01b85526011600452602485fd5b50346101e057806003193601126101e057546040516001600160a01b039091168152602090f35b50346101e057806003193601126101e0576108506119fd565b6108586119bb565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d578160409160209352600683522054604051908152f35b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d578152600460205260408120604051908160208254918281520190819285526020852090855b8181106109785750505082610937910383611693565b604051928392602084019060208552518091526040840192915b81811061095f575050500390f35b8251845285945060209384019390920191600101610951565b8254845260209093019260019283019201610921565b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d57818183526004602052604083205460018060a01b03600254169060405193636d65573f60e01b8552806004860152602085602481865afa948515610b23578695610aef575b508552600460205260408520906040518083602082955493848152019089526020892092895b818110610ad6575050610a3592500383611693565b855b8251811015610abf57610a4a8184611859565b51604051906395ea571760e01b825260048201528781602481885afa8015610ab4576080918991610a9a575b500151610a86575b600101610a37565b93610a92600191611883565b949050610a7e565b610aae91503d808b833e61040e8183611693565b38610a76565b6040513d8a823e3d90fd5b606082878760405192835260208301526040820152f35b8454835260019485019487945060209093019201610a20565b9094506020813d602011610b1b575b81610b0b60209383611693565b8101031261034a575193386109fa565b3d9150610afe565b6040513d88823e3d90fd5b50346101e057806003193601126101e057610b476119fd565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101e057806003193601126101e05760ff6020915460a01c166040519015158152f35b50346101e05760203660031901126101e057600435610bca6119bb565b6002546040516395ea571760e01b815260048101839052908390829060249082906001600160a01b03165afa908115610749578391610f15575b5060208101516001600160a01b03163303610ed057608081015115610e8b5760409081015160025491516395ea571760e01b8152600481018490529092916001600160a01b03168482602481845afa918215610e80578592610e64575b506020820151336001600160a01b0390911603610e28576702c68af0bb14000084101580610e16575b610c9390611958565b846040830151926080810151151590606081019360a0855192015160405192610cbb84611661565b888452336020850152896040850152606084015284608084015260a08301524260c0830152803b15610e1257610d0c8492918392604051968780948193631430350760e21b83528d600484016119a4565b03925af19283156101d3578693610df1575b50509081610d7393928286897f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9803610dba575b5050610d83575b505051604051948552606060208601526060850190611578565b928460408201528033940390a380f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a28338610d59565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f019181519081528b6020820152a28238610d52565b819294935090610e0091611693565b610e0e579083908638610d1e565b8580fd5b8380fd5b50674563918244f40000841115610c8a565b60405162461bcd60e51b81526020600482015260146024820152734f6e6c7920686f73742063616e2075706461746560601b6044820152606490fd5b610e799192503d8087833e61040e8183611693565b9038610c61565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4e6574776f726b20616c726561647920696e61637469766500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920686f73742063616e206465616374697661746500000000000000006044820152606490fd5b610f2991503d8085833e61040e8183611693565b38610c04565b50346101e05760203660031901126101e057602090600435815260058252604060018060a01b0391205416604051908152f35b50346101e057806003193601126101e057610f7b6119fd565b805460ff8160a01c1615610fc15760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346101e05760203660031901126101e0576004356001600160a01b0381169081900361026d5781526004602052604081206040518082602082945493848152019085526020852092855b81811061118457505061103092500382611693565b60025482906001600160a01b031681805b84518110156110be576110548186611859565b51604051906395ea571760e01b825260048201528281602481875afa80156107495760809184916110a4575b500151611090575b600101611041565b9261109c600191611883565b939050611088565b6110b891503d8086833e61040e8183611693565b38611080565b5050906110ca906118df565b8390845b845181101561116e576110e18186611859565b51604051906395ea571760e01b825260048201528681602481885afa908115611163578791611149575b50608081015161111f575b506001016110ce565b83611142916111316001949686611859565b5261113c8185611859565b50611883565b9290611116565b61115d91503d8089833e61040e8183611693565b3861110b565b6040513d89823e3d90fd5b604051602080825281906103f6908201856115f9565b845483526001948501948694506020909301920161101b565b50346101e05760603660031901126101e0576024356004356111bd611652565b916111c66119bb565b6111ce6119db565b6002546040516395ea571760e01b815260048101849052906001600160a01b03168582602481845afa918215610b235786926113ec575b506020820151336001600160a01b0390911603610e28576702c68af0bb140000831015806113da575b61123790611958565b6040820151866080840151151592606085019460a08651910151986040519161125f83611661565b898352336020840152886040840152606083015215159889608083015260a08201524260c0820152813b1561070e5782916112b191604051948580948193631430350760e21b83528d600484016119a4565b03925af18015610ab457611398575b509184611317928185877f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d989703611361575b505087810361132a575b505051604051928352606060208401526060830190611578565b9360408201528033940390a36001805580f35b60407fb061566845b6680f66461fbe29235493f3aa355419d464d868114a32e0e7ae7b918151908152896020820152a284386112fd565b60407f07d20e42fbc3910f3e2536c15bfb3d2deec361f7b0534c071570af6608429f01918151908152886020820152a281386112f3565b6113179286896113cd7f54505b9e522263d538acc1f6de9658c2ae4fd39b8771f562481c2d375d1c1f2d9897959b8395611693565b99939596505092506112c0565b50674563918244f4000083111561122e565b6114019192503d8088833e61040e8183611693565b9038611205565b50346101e057806003193601126101e057600254604051633ea7206960e21b8152600481018390526064602482015291908190839060449082906001600160a01b03165afa9182156101d35781926114ed575b5080815b83518110156114985760806114748286611859565b510151611484575b60010161145f565b90611490600191611883565b91905061147c565b506114a2906118df565b815b835181101561116e5760806114b98286611859565b5101516114c9575b6001016114a4565b916114e56001916114da8587611859565b516111318286611859565b9290506114c1565b6115029192503d8084833e6101c48183611693565b50903861145b565b50346101e057806003193601126101e0576002546040516001600160a01b039091168152602090f35b90503461026d578160031936011261026d57806702c68af0bb14000060209252f35b60005b8381106115685750506000910152565b8181015183820152602001611558565b9060209161159181518092818552858086019101611555565b601f01601f1916010190565b908151815260018060a01b0360208301511660208201526040820151604082015260c0806115da606085015160e0606086015260e0850190611578565b9360808101511515608085015260a081015160a0850152015191015290565b9080602083519182815201916020808360051b8301019401926000915b83831061162557505050505090565b9091929394602080611643600193601f19868203018752895161159d565b97019301930191939290611616565b60443590811515820361034a57565b60e0810190811067ffffffffffffffff82111761167d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761167d57604052565b67ffffffffffffffff811161167d57601f01601f191660200190565b67ffffffffffffffff811161167d5760051b60200190565b91909160e08184031261034a576040519061170382611661565b805182526020810151919384926001600160a01b038116810361034a57602084015260408201516040840152606082015167ffffffffffffffff811161034a57820181601f8201121561034a57805161175b816116b5565b926117696040519485611693565b8184526020828401011161034a576117879160208085019101611555565b60608301526080810151801515810361034a5760c0918291608085015260a081015160a08501520151910152565b919060408382031261034a57825167ffffffffffffffff811161034a5783019080601f8301121561034a5781516117eb816116d1565b926117f96040519485611693565b81845260208085019260051b8201019183831161034a5760208201905b83821061182b57505050505060209092015190565b815167ffffffffffffffff811161034a5760209161184e878480948801016116e9565b815201910190611816565b805182101561186d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60001981146118925760010190565b634e487b7160e01b600052601160045260246000fd5b604051906118b582611661565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b906118e9826116d1565b6118f66040519182611693565b8281528092611907601f19916116d1565b019060005b82811061191857505050565b6020906119236118a8565b8282850101520161190c565b9060208282031261034a57815167ffffffffffffffff811161034a5761195592016116e9565b90565b1561195f57565b60405162461bcd60e51b815260206004820152601a60248201527f5072696365206f7574206f6620616c6c6f7765642072616e67650000000000006044820152606490fd5b60409061195593928152816020820152019061159d565b60ff60005460a01c166119ca57565b63d93c066560e01b60005260046000fd5b6002600154146119ec576002600155565b633ee5aeb560e01b60005260046000fd5b6000546001600160a01b03163303611a1157565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220c9558fb6453ec7ca55b19de52259006e6ec38f310e5fb94b1cbde8bc8b5ecd0664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9115E97 EQ PUSH2 0x1533 JUMPI POP DUP1 PUSH4 0x11CE0267 EQ PUSH2 0x150A JUMPI DUP1 PUSH4 0x16CB6EFF EQ PUSH2 0x1408 JUMPI DUP1 PUSH4 0x1B63FE67 EQ PUSH2 0x119D JUMPI DUP1 PUSH4 0x2B2A748C EQ PUSH2 0xFD0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xF62 JUMPI DUP1 PUSH4 0x43355214 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x4B9791E8 EQ PUSH2 0xBAD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2E JUMPI DUP1 PUSH4 0x764AC734 EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0x7F6E8CBF EQ PUSH2 0x898 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x837 JUMPI DUP1 PUSH4 0x867F1A09 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0x900E41B1 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xB0FF6383 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xCD83FB9A EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD4F38D04 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xE67D86F1 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xEB2931B7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E3 JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH2 0x1A3 SWAP3 DUP3 DUP1 SWAP3 PUSH2 0x1AD JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH2 0x1CC SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1C4 DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17B5 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x18D JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI PUSH2 0x212 PUSH2 0x19FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x259 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x217C682D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x357 JUMPI SWAP1 PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34F JUMPI JUMPDEST DUP2 PUSH2 0x339 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x4563918244F40000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x3A0 PUSH2 0x18A8 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x41D JUMPI DUP3 PUSH2 0x3F6 SWAP4 SWAP3 PUSH2 0x3FA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x159D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x70E JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x70E JUMPI DUP3 DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x486 DUP5 PUSH2 0x16B5 JUMP JUMPDEST SWAP4 PUSH2 0x494 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1693 JUMP JUMPDEST DUP1 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x70E JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x4BA PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x4C2 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x4CA PUSH2 0x19DB JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0x7FC JUMPI TIMESTAMP LT PUSH2 0x7B7 JUMPI PUSH8 0x2C68AF0BB140000 DUP3 LT ISZERO DUP1 PUSH2 0x7A5 JUMPI JUMPDEST PUSH2 0x503 SWAP1 PUSH2 0x1958 JUMP JUMPDEST DUP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x799 JUMPI JUMPDEST POP ISZERO PUSH2 0x754 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29487FE3 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP6 SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x749 JUMPI DUP4 SWAP5 PUSH2 0x712 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x569 DUP5 PUSH2 0x1661 JUMP JUMPDEST DUP6 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0x14303507 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x5BD SWAP1 DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x41D JUMPI PUSH2 0x6F9 JUMPI JUMPDEST POP POP CALLER DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x6D1 JUMPI SWAP1 DUP3 SWAP2 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE CALLER DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x690 JUMPI JUMPDEST PUSH32 0xAC8D319E4BA2A19144062917C8CB50CC9CFFB2F0EEA3004B86B48C06CC6845C8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x686 CALLER SWAP6 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST CALLER DUP1 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x8FF9310ABEDE1DE3C5D3FDBB7CF09C40BC8258CA75C0F949AD92F964DEAC98B3 DUP5 DUP1 LOG2 PUSH2 0x64E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP2 PUSH2 0x703 SWAP2 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x70E JUMPI DUP3 CODESIZE PUSH2 0x5CC JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x741 JUMPI JUMPDEST DUP2 PUSH2 0x72F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI DUP5 SWAP2 MLOAD SWAP3 CODESIZE PUSH2 0x54F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204D6F6E676F446174614944206C656E677468000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO CODESIZE PUSH2 0x50F JUMP JUMPDEST POP PUSH8 0x4563918244F40000 DUP3 GT ISZERO PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20636F6F6C646F776E2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x850 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x858 PUSH2 0x19BB JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x978 JUMPI POP POP POP DUP3 PUSH2 0x937 SWAP2 SUB DUP4 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x95F JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x951 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x921 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 DUP2 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x6D65573F PUSH1 0xE0 SHL DUP6 MSTORE DUP1 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xB23 JUMPI DUP7 SWAP6 PUSH2 0xAEF JUMPI JUMPDEST POP DUP6 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xAD6 JUMPI POP POP PUSH2 0xA35 SWAP3 POP SUB DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xA4A DUP2 DUP5 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x80 SWAP2 DUP10 SWAP2 PUSH2 0xA9A JUMPI JUMPDEST POP ADD MLOAD PUSH2 0xA86 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xA37 JUMP JUMPDEST SWAP4 PUSH2 0xA92 PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xAAE SWAP2 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB1B JUMPI JUMPDEST DUP2 PUSH2 0xB0B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1693 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x34A JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x9FA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xB47 PUSH2 0x19FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBCA PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x749 JUMPI DUP4 SWAP2 PUSH2 0xF15 JUMPI JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xED0 JUMPI PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0xE8B JUMPI PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP3 PUSH2 0xE64 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE28 JUMPI PUSH8 0x2C68AF0BB140000 DUP5 LT ISZERO DUP1 PUSH2 0xE16 JUMPI JUMPDEST PUSH2 0xC93 SWAP1 PUSH2 0x1958 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA0 DUP6 MLOAD SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCBB DUP5 PUSH2 0x1661 JUMP JUMPDEST DUP9 DUP5 MSTORE CALLER PUSH1 0x20 DUP6 ADD MSTORE DUP10 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xE12 JUMPI PUSH2 0xD0C DUP5 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1D3 JUMPI DUP7 SWAP4 PUSH2 0xDF1 JUMPI JUMPDEST POP POP SWAP1 DUP2 PUSH2 0xD73 SWAP4 SWAP3 DUP3 DUP7 DUP10 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SUB PUSH2 0xDBA JUMPI JUMPDEST POP POP PUSH2 0xD83 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP4 CODESIZE PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP12 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP3 CODESIZE PUSH2 0xD52 JUMP JUMPDEST DUP2 SWAP3 SWAP5 SWAP4 POP SWAP1 PUSH2 0xE00 SWAP2 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xE0E JUMPI SWAP1 DUP4 SWAP1 DUP7 CODESIZE PUSH2 0xD1E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH8 0x4563918244F40000 DUP5 GT ISZERO PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4F6E6C7920686F73742063616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE79 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6574776F726B20616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73742063616E20646561637469766174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xF29 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0xC04 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xF7B PUSH2 0x19FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0xFC1 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x26D JUMPI DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1184 JUMPI POP POP PUSH2 0x1030 SWAP3 POP SUB DUP3 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x1054 DUP2 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x80 SWAP2 DUP5 SWAP2 PUSH2 0x10A4 JUMPI JUMPDEST POP ADD MLOAD PUSH2 0x1090 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1041 JUMP JUMPDEST SWAP3 PUSH2 0x109C PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x10B8 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0x1080 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x10CA SWAP1 PUSH2 0x18DF JUMP JUMPDEST DUP4 SWAP1 DUP5 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x116E JUMPI PUSH2 0x10E1 DUP2 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1163 JUMPI DUP8 SWAP2 PUSH2 0x1149 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x111F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10CE JUMP JUMPDEST DUP4 PUSH2 0x1142 SWAP2 PUSH2 0x1131 PUSH1 0x1 SWAP5 SWAP7 DUP7 PUSH2 0x1859 JUMP JUMPDEST MSTORE PUSH2 0x113C DUP2 DUP6 PUSH2 0x1859 JUMP JUMPDEST POP PUSH2 0x1883 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x115D SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST CODESIZE PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x3F6 SWAP1 DUP3 ADD DUP6 PUSH2 0x15F9 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x101B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x11BD PUSH2 0x1652 JUMP JUMPDEST SWAP2 PUSH2 0x11C6 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x11CE PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB23 JUMPI DUP7 SWAP3 PUSH2 0x13EC JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE28 JUMPI PUSH8 0x2C68AF0BB140000 DUP4 LT ISZERO DUP1 PUSH2 0x13DA JUMPI JUMPDEST PUSH2 0x1237 SWAP1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP7 PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO SWAP3 PUSH1 0x60 DUP6 ADD SWAP5 PUSH1 0xA0 DUP7 MLOAD SWAP2 ADD MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x125F DUP4 PUSH2 0x1661 JUMP JUMPDEST DUP10 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO SWAP9 DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x70E JUMPI DUP3 SWAP2 PUSH2 0x12B1 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x14303507 PUSH1 0xE2 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x19A4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0x1398 JUMPI JUMPDEST POP SWAP2 DUP5 PUSH2 0x1317 SWAP3 DUP2 DUP6 DUP8 PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SUB PUSH2 0x1361 JUMPI JUMPDEST POP POP DUP8 DUP2 SUB PUSH2 0x132A JUMPI JUMPDEST POP POP MLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 PUSH32 0xB061566845B6680F66461FBE29235493F3AA355419D464D868114A32E0E7AE7B SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP5 CODESIZE PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 PUSH32 0x7D20E42FBC3910F3E2536C15BFB3D2DEEC361F7B0534C071570AF6608429F01 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP2 CODESIZE PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x1317 SWAP3 DUP7 DUP10 PUSH2 0x13CD PUSH32 0x54505B9E522263D538ACC1F6DE9658C2AE4FD39B8771F562481C2D375D1C1F2D SWAP9 SWAP8 SWAP6 SWAP12 DUP4 SWAP6 PUSH2 0x1693 JUMP JUMPDEST SWAP10 SWAP4 SWAP6 SWAP7 POP POP SWAP3 POP PUSH2 0x12C0 JUMP JUMPDEST POP PUSH8 0x4563918244F40000 DUP4 GT ISZERO PUSH2 0x122E JUMP JUMPDEST PUSH2 0x1401 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x40E DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1205 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EA72069 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D3 JUMPI DUP2 SWAP3 PUSH2 0x14ED JUMPI JUMPDEST POP DUP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x80 PUSH2 0x1474 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x1484 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x145F JUMP JUMPDEST SWAP1 PUSH2 0x1490 PUSH1 0x1 SWAP2 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x147C JUMP JUMPDEST POP PUSH2 0x14A2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x116E JUMPI PUSH1 0x80 PUSH2 0x14B9 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x14C9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x14A4 JUMP JUMPDEST SWAP2 PUSH2 0x14E5 PUSH1 0x1 SWAP2 PUSH2 0x14DA DUP6 DUP8 PUSH2 0x1859 JUMP JUMPDEST MLOAD PUSH2 0x1131 DUP3 DUP7 PUSH2 0x1859 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x1502 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x1C4 DUP2 DUP4 PUSH2 0x1693 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x145B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x26D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26D JUMPI DUP1 PUSH8 0x2C68AF0BB140000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1568 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1558 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1591 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x15DA PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1625 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1643 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x159D JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x34A JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x167D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x167D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x167D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x167D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1703 DUP3 PUSH2 0x1661 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD SWAP2 SWAP4 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x34A JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x34A JUMPI DUP1 MLOAD PUSH2 0x175B DUP2 PUSH2 0x16B5 JUMP JUMPDEST SWAP3 PUSH2 0x1769 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1693 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x34A JUMPI PUSH2 0x1787 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x34A JUMPI PUSH1 0xC0 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x34A JUMPI DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x34A JUMPI DUP2 MLOAD PUSH2 0x17EB DUP2 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 PUSH2 0x17F9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1693 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x34A JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x182B JUMPI POP POP POP POP POP PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI PUSH1 0x20 SWAP2 PUSH2 0x184E DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x16E9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1816 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x186D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1892 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x18B5 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x18E9 DUP3 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x18F6 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1693 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1907 PUSH1 0x1F NOT SWAP2 PUSH2 0x16D1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1918 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1923 PUSH2 0x18A8 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x190C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x34A JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x34A JUMPI PUSH2 0x1955 SWAP3 ADD PUSH2 0x16E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x195F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206F7574206F6620616C6C6F7765642072616E6765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1955 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x19CA JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x19EC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1A11 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SSTORE DUP16 0xB6 GASLIMIT RETURNDATACOPY 0xC7 0xCA SSTORE 0xB1 SWAP14 0xE5 0x22 MSIZE STOP PUSH15 0x6EC38F310E5FB94B1CBDE8BC8B5ECD MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "296:9631:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9884:34;296:9631;9884:34;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;8391:15;296:9631;;;-1:-1:-1;;;8391:51:10;;296:9631;;;8391:51;;;296:9631;;;;;;;;;;;;;;8391:51;;296:9631;;-1:-1:-1;;;;;296:9631:10;8391:51;;;;;;296:9631;8391:51;;296:9631;8391:51;;;296:9631;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;8391:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;296:9631;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;296:9631:10;;-1:-1:-1;;;;;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;3052:40:0;296:9631:10;;3052:40:0;296:9631:10;;2623:91:0;-1:-1:-1;;;2672:31:0;;296:9631:10;;;;;2672:31:0;;296:9631:10;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;740:38;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:3;296:9631;;;;;;;;;;;;;;;;9884:15;296:9631;;;-1:-1:-1;;;9884:34:10;;296:9631;;9884:34;;296:9631;;;;;;-1:-1:-1;;;;;296:9631:10;9884:34;;;;;;;;;;296:9631;9884:34;296:9631;;;;;;;9884:34;;;;;;;;;;;;296:9631;9884:34;;;:::i;:::-;;;296:9631;;;;9884:34;296:9631;;9884:34;;296:9631;-1:-1:-1;296:9631:10;;9884:34;;;-1:-1:-1;9884:34:10;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;601:4;296:9631;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;:::i;:::-;-1:-1:-1;5624:15:10;296:9631;;;-1:-1:-1;;;5624:38:10;;296:9631;;;5624:38;;;296:9631;;;;;;5624:38;;296:9631;;-1:-1:-1;;;;;296:9631:10;5624:38;;;;;;;;296:9631;5624:38;;;;296:9631;;;;;;;;;;;;;;;;:::i;:::-;;;;5624:38;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;1046:9;296:9631;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1315:72:6;;:::i;:::-;2466:103:7;;:::i;:::-;1621:10:10;296:9631;;1600:20;296:9631;;;;;;1046:9;296:9631;;;;;;;1565:15;:91;296:9631;;502:4;1741:38;;;:96;;;296:9631;1720:169;;;:::i;:::-;296:9631;;1920:30;;;:101;;;;296:9631;;;;;2145:15;296:9631;;;-1:-1:-1;;;2145:36:10;;296:9631;;;;;;;;;;;;;;;-1:-1:-1;;;;;296:9631:10;2145:36;;;;;;;;;;;296:9631;;;;;;;2145:15;296:9631;;;;;;;;;:::i;:::-;;;;1621:10;296:9631;2304:325;;296:9631;;2304:325;;296:9631;2304:325;296:9631;2304:325;;296:9631;;;2304:325;;;296:9631;1565:15;2304:325;;;296:9631;1565:15;2304:325;;;296:9631;2241:398;;;;;296:9631;;-1:-1:-1;;;2241:398:10;;296:9631;;;;;;;;;;;2241:398;;;296:9631;2241:398;;;:::i;:::-;;;;;;;;;;;296:9631;1621:10;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2700:13;296:9631;;;;;1621:10;296:9631;;;;;;;;;1621:10;296:9631;;1600:20;296:9631;;1565:15;296:9631;;;;1621:10;296:9631;;;;;;;;;;;2812:19;2808:115;;296:9631;2938:54;296:9631;;;;;1621:10;296:9631;1621:10;296:9631;;;;;;:::i;:::-;2938:54;;;296:9631;;;;;2808:115;1621:10;296:9631;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;2891:21;296:9631;;2891:21;2808:115;;296:9631;-1:-1:-1;;;296:9631:10;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;2241:398;;;;;:::i;:::-;296:9631;;2241:398;;;;296:9631;;;;2145:36;;;;;296:9631;2145:36;;296:9631;2145:36;;;;;;296:9631;2145:36;;;:::i;:::-;;;296:9631;;;;;;;2145:36;;;;;;;-1:-1:-1;2145:36:10;;;296:9631;;;;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;;;;;;;;;;;;;1920:101;698:3;1970:51;;;;1920:101;;;1741:96;-1:-1:-1;601:4:10;1799:38;;;1741:96;;296:9631;;;-1:-1:-1;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1315:72:6;;:::i;:::-;296:9631:10;;-1:-1:-1;;;;296:9631:10;-1:-1:-1;;;296:9631:10;;;;;735:10:5;296:9631:10;;2427:20:6;;296:9631:10;;2427:20:6;296:9631:10;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;937:55;296:9631;;;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;7440:22;296:9631;;;;;;;;;;;;;;;7596:15;296:9631;;;;;;;;;7596:44;;;296:9631;7596:44;;296:9631;;7596:44;;;;;;;;;;;;;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7754:13;7792:3;296:9631;;7769:21;;;;;7894:13;;;;:::i;:::-;296:9631;;;;;;;7850:71;;296:9631;7850:71;;296:9631;7850:71;;7596:44;7850:71;;;;;;;;7939:16;7850:71;;;;;7792:3;7939:16;;296:9631;7935:71;;7792:3;296:9631;;7754:13;;7935:71;7975:16;;296:9631;7975:16;;:::i;:::-;7935:71;;;;;7850;;;;;;;;;;;;;:::i;:::-;;;;;296:9631;;;;;;;;;7769:21;296:9631;7769:21;;;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:9631:10;;;;;;;;7596:44;;;;296:9631;7596:44;;296:9631;7596:44;;;;;;296:9631;7596:44;;;:::i;:::-;;;296:9631;;;;;7596:44;;;;;;;-1:-1:-1;7596:44:10;;;296:9631;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;296:9631:10;;-1:-1:-1;;;;;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;3052:40:0;296:9631:10;;3052:40:0;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;1315:72:6;;:::i;:::-;5130:15:10;296:9631;;;-1:-1:-1;;;5130:60:10;;296:9631;5130:60;;296:9631;;;;;;;;5130:60;;296:9631;;-1:-1:-1;;;;;296:9631:10;5130:60;;;;;;;;;;;296:9631;-1:-1:-1;296:9631:10;5208:19;;296:9631;-1:-1:-1;;;;;296:9631:10;5231:10;5208:33;296:9631;;5288:16;;;296:9631;;;;;5371:23;;;296:9631;5130:15;296:9631;;;-1:-1:-1;;;3260:60:10;;296:9631;3260:60;;296:9631;;;;;;-1:-1:-1;;;;;296:9631:10;3260:60;296:9631;5130:60;296:9631;;3260:60;;;;;;;;;;;296:9631;-1:-1:-1;296:9631:10;3338:19;;296:9631;5231:10;-1:-1:-1;;;;;296:9631:10;;;3338:29;296:9631;;502:4;3423:38;;;:96;;;296:9631;3402:169;;;:::i;:::-;3640:23;296:9631;3640:23;;296:9631;3690:16;5288;3690;;296:9631;;;3951:19;;;;;4062:17;3951:19;;4062:17;;296:9631;;;;;;;:::i;:::-;;;;5231:10;296:9631;3781:388;;296:9631;3781:388;296:9631;3781:388;;296:9631;3951:19;3781:388;;296:9631;3781:388;5288:16;3781:388;;296:9631;4062:17;3781:388;;296:9631;4139:15;3781:388;;;296:9631;3717:462;;;;;;296:9631;;;;;;;;;;;;;;;;3717:462;;;296:9631;3717:462;;;:::i;:::-;;;;;;;;;;;;;;296:9631;4246:25;;;;296:9631;4246:25;;;;;4495:151;4246:25;;4242:117;;296:9631;4368:112;;;;296:9631;4594:19;;;296:9631;;;;;3951:19;296:9631;;;;3951:19;296:9631;;;;:::i;:::-;;;;;;;5231:10;;4495:151;;;;296:9631;;4368:112;296:9631;4415:54;296:9631;;;;;;;;;;;4415:54;4368:112;;;;4242:117;296:9631;4292:56;296:9631;;;;;;;;;;;4292:56;4242:117;;;;3717:462;;;;;;;;;;:::i;:::-;296:9631;;3717:462;;;;;;;296:9631;;;;3717:462;296:9631;;;3423:96;-1:-1:-1;601:4:10;3481:38;;;3423:96;;296:9631;;;-1:-1:-1;;;296:9631:10;;;;;;;;5130:60;296:9631;;;-1:-1:-1;;;296:9631:10;;;;;;;3260:60;;;;;;;;;;;;;;:::i;:::-;;;;;;296:9631;;;;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;5130:60;296:9631;;;;;;;;;;;;;;-1:-1:-1;;;296:9631:10;;;;;;;;5130:60;296:9631;;;;;;;;;;;5130:60;;;;;;;;;;;;;:::i;:::-;;;;296:9631;;;;;;;-1:-1:-1;;296:9631:10;;;;;;;;;;840:48;296:9631;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;296:9631:10;;;;;;;2140:9:6;2136:62;;-1:-1:-1;;;;296:9631:10;;;;;735:10:5;296:9631:10;;2674:22:6;;296:9631:10;;2674:22:6;296:9631:10;;2136:62:6;-1:-1:-1;;;2172:15:6;;296:9631:10;2172:15:6;;296:9631:10;;;;;;;-1:-1:-1;;296:9631:10;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6320:15;296:9631;6140:23;;-1:-1:-1;;;;;296:9631:10;6140:23;;6262:3;296:9631;;6239:21;;;;;6364:13;;;;:::i;:::-;296:9631;;;;;;;6320:71;;296:9631;6320:71;;296:9631;6320:71;;;;;;;;;;;6409:16;6320:71;;;;;6262:3;6409:16;;296:9631;6405:68;;6262:3;296:9631;;6224:13;;6405:68;6445:13;;296:9631;6445:13;;:::i;:::-;6405:68;;;;;6320:71;;;;;;;;;;;;;:::i;:::-;;;;6239:21;;;;6602:40;6239:21;6602:40;:::i;:::-;6652:17;6684:13;;6722:3;296:9631;;6699:21;;;;;6824:13;;;;:::i;:::-;296:9631;;;;;;;6780:71;;296:9631;6780:71;;296:9631;6780:71;;6320;6780;;;;;;;;;;;;;6722:3;6869:16;6409;6869;;296:9631;6865:111;;6722:3;;296:9631;;6684:13;;6865:111;6905:31;6954:7;6905:31;;296:9631;6905:31;;;;:::i;:::-;;;;;;:::i;:::-;;6954:7;:::i;:::-;6865:111;;;;6780:71;;;;;;;;;;;;;:::i;:::-;;;;;296:9631;;;;;;;;;6699:21;296:9631;;;;;;;;;;;;6699:21;296:9631;:::i;:::-;;;;;;;;;;;;-1:-1:-1;296:9631:10;;;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;;;;;:::i;:::-;1315:72:6;;;:::i;:::-;2466:103:7;;:::i;:::-;3260:15:10;296:9631;;;-1:-1:-1;;;3260:60:10;;296:9631;3260:60;;296:9631;;;;-1:-1:-1;;;;;296:9631:10;3260:60;296:9631;;;;3260:60;;;;;;;;;;;296:9631;-1:-1:-1;296:9631:10;3338:19;;296:9631;4936:10;-1:-1:-1;;;;;296:9631:10;;;3338:29;296:9631;;502:4;3423:38;;;:96;;;296:9631;3402:169;;;:::i;:::-;296:9631;3640:23;;296:9631;3690:16;;;;296:9631;;;3951:19;296:9631;3951:19;;;4062:17;3951:19;;4062:17;;296:9631;;;;;;;;:::i;:::-;;;;4936:10;296:9631;3781:388;;296:9631;3781:388;296:9631;3781:388;;296:9631;;3781:388;;296:9631;;;3781:388;;3690:16;3781:388;;296:9631;4062:17;3781:388;;296:9631;4139:15;3781:388;;;296:9631;3717:462;;;;;296:9631;;3717:462;296:9631;;;;;;;;;;;;3717:462;;;296:9631;3717:462;;;:::i;:::-;;;;;;;;;;;296:9631;4246:25;;;296:9631;4246:25;;;;4495:151;4246:25;;;4242:117;;296:9631;4372:22;;;;;4368:112;;296:9631;4594:19;;;296:9631;;;;;;;;;;;;;;;:::i;:::-;;;;;;4936:10;;4495:151;;;;296:9631;;;;;4368:112;296:9631;4415:54;296:9631;;;;;;;;;;;4415:54;4368:112;;;;4242:117;296:9631;4292:56;296:9631;;;;;;;;;;;4292:56;4242:117;;;;3717:462;296:9631;3717:462;;;;4495:151;3717:462;;;;;;;:::i;:::-;;;;;;;;;;;3423:96;-1:-1:-1;601:4:10;3481:38;;;3423:96;;3260:60;;;;;;;;;;;;;;:::i;:::-;;;;;296:9631;;;;;;;;;;;;;8701:15;296:9631;;;-1:-1:-1;;;8701:57:10;;296:9631;8701:57;;296:9631;;;8754:3;296:9631;;;;;;;;;;8701:57;;296:9631;;-1:-1:-1;;;;;296:9631:10;8701:57;;;;;;;;;;;296:9631;8808:23;;8846:13;8885:3;296:9631;;8861:22;;;;;8908:23;:14;;;;:::i;:::-;;:23;296:9631;8904:75;;8885:3;296:9631;;8846:13;;8904:75;8951:13;;296:9631;8951:13;;:::i;:::-;8904:75;;;;;8861:22;;9095:40;8861:22;9095:40;:::i;:::-;9145:17;9216:3;296:9631;;9192:22;;;;;8908:23;9239:14;;;;:::i;:::-;;:23;296:9631;9235:125;;9216:3;296:9631;;9177:13;;9235:125;9306:14;9338:7;296:9631;9306:14;;;;;:::i;:::-;;9282:38;;;;:::i;9338:7::-;9235:125;;;;;8701:57;;;;;;;;;;;;;;:::i;:::-;;;;;;296:9631;;;;;;;;;;;;;379:36;296:9631;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;502:4;296:9631;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;296:9631:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:9631:10;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;296:9631:10;;;;;-1:-1:-1;296:9631:10;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;296:9631:10;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;296:9631:10;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;296:9631:10;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;296:9631:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1878:128:6:-;296:9631:10;1796:7:6;296:9631:10;;;;1939:61:6;;1878:128::o;1939:61::-;1974:15;;;1796:7;1974:15;;1796:7;1974:15;2575:307:7;1899:1;2702:7;296:9631:10;2702:18:7;2698:86;;1899:1;2702:7;296:9631:10;2575:307:7:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:7;;-1:-1:-1;2743:30:7;1796:162:0;1710:6;296:9631:10;-1:-1:-1;;;;;296:9631:10;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:5;1901:40:0;296:9631:10;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_MONGO_DATA_LENGTH()": "e67d86f1",
              "MAX_PRICE_PER_SESSION()": "d4f38d04",
              "MIN_PRICE_PER_SESSION()": "09115e97",
              "REGISTRATION_COOLDOWN()": "b0ff6383",
              "deactivateNetwork(uint256)": "4b9791e8",
              "getActiveHostNetworks(address)": "2b2a748c",
              "getAllActiveNetworks()": "16cb6eff",
              "getContractStats()": "dfe6b5d6",
              "getHostNetworks(address)": "79f0dc57",
              "getHostStats(address)": "764ac734",
              "getHostedNetworkById(uint256)": "cd83fb9a",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "isHost(address)": "eb2931b7",
              "isRegisteredHost(address)": "867f1a09",
              "lastRegistrationTime(address)": "7f6e8cbf",
              "networkToHost(uint256)": "43355214",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "registerNetwork(uint256,string,bool)": "900e41b1",
              "renounceOwnership()": "715018a6",
              "storageContract()": "11ce0267",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updateNetwork(uint256,uint256,bool)": "1b63fe67"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHostAddress\",\"type\":\"address\"}],\"name\":\"HostAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"NetworkPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"}],\"name\":\"NetworkRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"NetworkStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerHour\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_MONGO_DATA_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PRICE_PER_SESSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRATION_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"deactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getActiveHostNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveNetworks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarnings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"}],\"name\":\"getHostedNetworkById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"networks\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"totalCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRegistrationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkToHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerHour\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"registerNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerHour\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"updateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deactivateNetwork(uint256)\":{\"notice\":\"Deactivate a network (soft delete)\"},\"getActiveHostNetworks(address)\":{\"notice\":\"Get active networks for a host\"},\"getAllActiveNetworks()\":{\"notice\":\"Get all active networks (limited to prevent gas issues)\"},\"getContractStats()\":{\"notice\":\"Get contract statistics\"},\"getHostNetworks(address)\":{\"notice\":\"Get all network IDs registered by a host\"},\"getHostStats(address)\":{\"notice\":\"Get host statistics\"},\"getHostedNetworkById(uint256)\":{\"notice\":\"Get full network details from storage\"},\"getNetworksPaginated(uint256,uint256)\":{\"notice\":\"Retrieve networks with pagination (gas-optimized)\"},\"isRegisteredHost(address)\":{\"notice\":\"Public method to check if an address is a registered host\"},\"pause()\":{\"notice\":\"Emergency pause (only owner)\"},\"registerNetwork(uint256,string,bool)\":{\"notice\":\"Register a new network with mongoDataID\"},\"unpause()\":{\"notice\":\"Unpause (only owner)\"},\"updateNetwork(uint256,uint256,bool)\":{\"notice\":\"Update existing network with new details\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetNetwork.sol\":\"ZaaNetNetwork\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetNetwork.sol\":{\"keccak256\":\"0x46fb09c6bfe77c2ce86e530c1ee23866b88fad55423e695445811e7f9e68c86d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715b64f54c2946933dc5d3ab4224de2145e52d2b9b8eb80bb38309f311e97718\",\"dweb:/ipfs/Qma66QS8FnV2SFHnvt6qjubSKHP956kgh153nZpR4j2uDD\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/interface/IZaaNetNetwork.sol\":{\"keccak256\":\"0x3c36f25390e07df86afbe86838dbb724ff89dab3ff8e8c6362cec05d4afea5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3294a39844e819d3340c2198735d07f4fe745dddd3bcd2c194c6acf6ec5906cb\",\"dweb:/ipfs/Qmbvzqz43CCKMrNQZcJ3N8CCjBP3sUFDfvYLF3gPywsvXR\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetPayment.sol": {
        "ZaaNetPayment": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdt",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_storageContract",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminContract",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "platformFee",
                  "type": "uint256"
                }
              ],
              "name": "PaymentReceived",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "voucherId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "userId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                }
              ],
              "name": "SessionStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_PAYMENT_AMOUNT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_voucherId",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_userId",
                  "type": "string"
                }
              ],
              "name": "acceptPayment",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculateFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "hostAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "platformFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "getSession",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storageContract",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newAdmin",
                  "type": "address"
                }
              ],
              "name": "updateAdminContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newUSDT",
                  "type": "address"
                }
              ],
              "name": "updateUSDTAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdt",
              "outputs": [
                {
                  "internalType": "contract TestUSDT",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461020657601f61152938819003918201601f19168301916001600160401b0383118484101761020b578084926060946040528339810103126102065761004781610221565b90610060604061005960208401610221565b9201610221565b9033156101f05760008054336001600160a01b0319821681178355604051959290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b03169283156101ae57506001600160a01b0316908115610169576001600160a01b03169182156101245760018060a01b0319600254161760025560018060a01b0319600354161760035560018060a01b031960045416176004556040516112f390816102368239f35b60405162461bcd60e51b815260206004820152601560248201527f496e76616c69642041646d696e206164647265737300000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c69642053746f7261676520616464726573730000000000000000006044820152606490fd5b62461bcd60e51b815260206004820152601460248201527f496e76616c6964205553445420616464726573730000000000000000000000006044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036102065756fe608080604052600436101561001357600080fd5b600090813560e01c90816311ce026714611040575080632f48ab7d14611017578063306247091461081d578063388d2c24146107905780633f4ba83a1461064e578063402ff0db146104cd5780635197f2d5146104a857806352238fdd146103f35780635c975abb146103ce578063715018a61461037457806375d60372146102e85780638456cb59146101a45780638da5cb5b1461017d578063c05c5e94146101545763f2fde38b146100c657600080fd5b34610151576020366003190112610151576004356001600160a01b0381169081900361014f576100f4611294565b801561013b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346101515780600319360112610151576004546040516001600160a01b039091168152602090f35b5034610151578060031936011261015157546040516001600160a01b039091168152602090f35b50346101515780600319360112610151578054336001600160a01b03821614801561025a575b15610215576101d7611274565b60ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f2070617573650000000000000000006044820152606490fd5b5060048054604051638da5cb5b60e01b81529160209183919082906001600160a01b03165afa9081156102dd57839161029f575b506001600160a01b031633146101ca565b90506020813d6020116102d5575b816102ba60209383611098565b810103126102d1576102cb906111d8565b3861028e565b8280fd5b3d91506102ad565b6040513d85823e3d90fd5b5034610151576020366003190112610151576004356001600160a01b0381169081900361014f57610317611294565b8015610338576bffffffffffffffffffffffff60a01b600254161760025580f35b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534454206164647265737360601b6044820152606490fd5b503461015157806003193601126101515761038d611294565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461015157806003193601126101515760ff6020915460a01c166040519015158152f35b50346101515760203660031901126101515760048054604051638c639a8560e01b81528235929091602091839182906001600160a01b03165afa92831561049c5792610461575b50610454606461044c6040948461123e565b048092611267565b9082519182526020820152f35b91506020823d602011610494575b8161047c60209383611098565b8101031261048f5790519061045461043a565b600080fd5b3d915061046f565b604051903d90823e3d90fd5b5034610151578060031936011261015157602060405169021e19e0c9bab24000008152f35b5034610151576020366003190112610151578060249160e06040516104f181611065565b828152826020820152826040820152826060820152826080820152606060a0820152606060c082015201528060018060a01b03600354166040519384809263402ff0db60e01b825260043560048301525afa90811561049c57809161056b575b6040516020808252819061056790820185611165565b0390f35b90503d8082843e61057c8184611098565b82019160208184031261014f5780519067ffffffffffffffff82116102d15701916101008382031261014f57604051916105b583611065565b83518352602084015160208401526105cf604085016111d8565b6040840152606084015160608401526105ea60808501611231565b608084015260a084015167ffffffffffffffff811161014f578261060f9186016111ec565b60a084015260c08401519067ffffffffffffffff821161015157509261063c60e0926105679583016111ec565b60c0840152015160e082015238610551565b50346101515780600319360112610151578054336001600160a01b038216148015610711575b156106cc5760ff8160a01c16156106bd5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b60405162461bcd60e51b815260206004820152601960248201527f4e6f7420617574686f72697a656420746f20756e7061757365000000000000006044820152606490fd5b5060048054604051638da5cb5b60e01b81529160209183919082906001600160a01b03165afa9081156102dd578391610756575b506001600160a01b03163314610674565b90506020813d602011610788575b8161077160209383611098565b810103126102d157610782906111d8565b38610745565b3d9150610764565b5034610151576020366003190112610151576004356001600160a01b0381169081900361014f576107bf611294565b80156107e0576bffffffffffffffffffffffff60a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606490fd5b50346101515760803660031901126101515760243560043560443567ffffffffffffffff8111611013576108559036906004016110d6565b60643567ffffffffffffffff811161100f576108759036906004016110d6565b9061087e611274565b60026001541461100057600260015583151580610fec575b15610fae576003546040516395ea571760e01b8152600481018590526001600160a01b0390911691908681602481865afa908115610fa3578791610ec3575b50608081015115610e865760408101518610610e485760018060a01b03600454169360405193638c639a8560e01b8552602085600481895afa948515610e08578995610e13575b506020600495966040519687809263c5f956af60e01b82525afa948515610e08578995610dc8575b506001600160a01b03851615610d835760148611610d465760646109698a978a61123e565b04946020610977878b611267565b926004604051809a819363cc50764160e01b83525af1968715610c62578a97610d12575b5060018060a01b03600354168a6040516109b481611065565b8981528a60208201523360408201528b6060820152600160808201528760a08201528560c08201524260e0820152823b1561014f57610a18928a83604051809681958294631dcd400b60e11b84526004840152604060248401526044830190611165565b03925af18015610d0757610cec575b506002546040516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810188905291602091839116818d81606481015b03925af1908115610c62578a91610cb2575b5015610c6d57600254602093840180516040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810185905291959192839160649183918f91165af1908115610c62578a91610c24575b5015610bdf5760035492516001600160a01b03938416938a929116843b156102d1576044908360405196879485936370e3d45560e11b8552600485015260248401525af19088821561049c5787938793610bbf575b5050610b7a7f4cf76f1607429a1ba564f99e3071202cedecedced41885abc9d7faf01598415791610b6c604051968b88526001602089015260a0604089015260a0880190611140565b908682036060880152611140565b934260808201528033950390a460405193845260208401527f5cd7214f6a35088a9d01c8364579ef0efbf9eab3a80310601fbaef534bbb69af60403394a46001805580f35b610bcd929450819350611098565b610bdb578385918838610b23565b8680fd5b60405162461bcd60e51b815260206004820152601c60248201527f486f7374207061796d656e74207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d602011610c5a575b81610c3f60209383611098565b81010312610c5657610c5090611231565b38610ace565b8980fd5b3d9150610c32565b6040513d8c823e3d90fd5b60405162461bcd60e51b815260206004820152601c60248201527f506c6174666f726d20666565207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d602011610ce4575b81610ccd60209383611098565b81010312610c5657610cde90611231565b38610a76565b3d9150610cc0565b868b610cfe610a64949d602094611098565b9b925050610a27565b6040513d8d823e3d90fd5b9096506020813d602011610d3e575b81610d2e60209383611098565b81010312610c565751953861099b565b3d9150610d21565b60405162461bcd60e51b81526020600482015260156024820152740a0d8c2e8ccdee4da40cccaca40e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b9094506020813d602011610e00575b81610de460209383611098565b81010312610dfc57610df5906111d8565b9338610944565b8880fd5b3d9150610dd7565b6040513d8b823e3d90fd5b94506020853d602011610e40575b81610e2e60209383611098565b81010312610dfc57935193602061091c565b3d9150610e21565b60405162461bcd60e51b81526020600482015260166024820152755061796d656e7420616d6f756e7420746f6f206c6f7760501b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6574776f726b206973206e6f742061637469766560581b6044820152606490fd5b90503d8088833e610ed48183611098565b810190602081830312610f9f5780519067ffffffffffffffff8211610dfc57019060e082820312610f9f576040519160e0830183811067ffffffffffffffff821117610f8b5760405280518352610f2d602082016111d8565b602084015260408101516040840152606081015167ffffffffffffffff8111610c565760c092610f5e9183016111ec565b6060840152610f6f60808201611231565b608084015260a081015160a0840152015160c0820152386108d5565b634e487b7160e01b8a52604160045260248afd5b8780fd5b6040513d89823e3d90fd5b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c185e5b595b9d08185b5bdd5b9d60521b6044820152606490fd5b5069021e19e0c9bab2400000841115610896565b633ee5aeb560e01b8552600485fd5b8480fd5b8380fd5b50346101515780600319360112610151576002546040516001600160a01b039091168152602090f35b90503461014f578160031936011261014f576003546001600160a01b03168152602090f35b610100810190811067ffffffffffffffff82111761108257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761108257604052565b67ffffffffffffffff811161108257601f01601f191660200190565b81601f8201121561048f578035906110ed826110ba565b926110fb6040519485611098565b8284526020838301011161048f57816000926020809301838601378301015290565b60005b8381106111305750506000910152565b8181015183820152602001611120565b906020916111598151809281855285808601910161111d565b601f01601f1916010190565b90815181526020820151602082015260018060a01b0360408301511660408201526060820151606082015260808201511515608082015260e0806111cf6111bd60a086015161010060a0870152610100860190611140565b60c086015185820360c0870152611140565b93015191015290565b51906001600160a01b038216820361048f57565b81601f8201121561048f578051611202816110ba565b926112106040519485611098565b8184526020828401011161048f5761122e916020808501910161111d565b90565b5190811515820361048f57565b8181029291811591840414171561125157565b634e487b7160e01b600052601160045260246000fd5b9190820391821161125157565b60ff60005460a01c1661128357565b63d93c066560e01b60005260046000fd5b6000546001600160a01b031633036112a857565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220de4b0ee727f0fd6f7fedfbc9134ab08027938699554e906ee56e86dcdd33b79664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x1F PUSH2 0x1529 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x20B JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x206 JUMPI PUSH2 0x47 DUP2 PUSH2 0x221 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x221 JUMP JUMPDEST SWAP3 ADD PUSH2 0x221 JUMP JUMPDEST SWAP1 CALLER ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x1AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x169 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x124 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0x12F3 SWAP1 DUP2 PUSH2 0x236 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642041646D696E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642053746F726167652061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420555344542061646472657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x206 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11CE0267 EQ PUSH2 0x1040 JUMPI POP DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1017 JUMPI DUP1 PUSH4 0x30624709 EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0x388D2C24 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x402FF0DB EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x5197F2D5 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x52238FDD EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x75D60372 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x154 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0xF4 PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x25A JUMPI JUMPDEST ISZERO PUSH2 0x215 JUMPI PUSH2 0x1D7 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207061757365000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2DD JUMPI DUP4 SWAP2 PUSH2 0x29F JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5 JUMPI JUMPDEST DUP2 PUSH2 0x2BA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2D1 JUMPI PUSH2 0x2CB SWAP1 PUSH2 0x11D8 JUMP JUMPDEST CODESIZE PUSH2 0x28E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x317 PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x338 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344542061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x38D PUSH2 0x1294 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x49C JUMPI SWAP3 PUSH2 0x461 JUMPI JUMPDEST POP PUSH2 0x454 PUSH1 0x64 PUSH2 0x44C PUSH1 0x40 SWAP5 DUP5 PUSH2 0x123E JUMP JUMPDEST DIV DUP1 SWAP3 PUSH2 0x1267 JUMP JUMPDEST SWAP1 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x494 JUMPI JUMPDEST DUP2 PUSH2 0x47C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x48F JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x454 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI DUP1 PUSH1 0x24 SWAP2 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x4F1 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x402FF0DB PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x49C JUMPI DUP1 SWAP2 PUSH2 0x56B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x567 SWAP1 DUP3 ADD DUP6 PUSH2 0x1165 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x57C DUP2 DUP5 PUSH2 0x1098 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x14F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D1 JUMPI ADD SWAP2 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5B5 DUP4 PUSH2 0x1065 JUMP JUMPDEST DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5CF PUSH1 0x40 DUP6 ADD PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5EA PUSH1 0x80 DUP6 ADD PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14F JUMPI DUP3 PUSH2 0x60F SWAP2 DUP7 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x151 JUMPI POP SWAP3 PUSH2 0x63C PUSH1 0xE0 SWAP3 PUSH2 0x567 SWAP6 DUP4 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x551 JUMP JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x711 JUMPI JUMPDEST ISZERO PUSH2 0x6CC JUMPI PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x6BD JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20756E706175736500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2DD JUMPI DUP4 SWAP2 PUSH2 0x756 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x674 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x788 JUMPI JUMPDEST DUP2 PUSH2 0x771 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2D1 JUMPI PUSH2 0x782 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST CODESIZE PUSH2 0x745 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x764 JUMP JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x7BF PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1013 JUMPI PUSH2 0x855 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10D6 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x100F JUMPI PUSH2 0x875 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10D6 JUMP JUMPDEST SWAP1 PUSH2 0x87E PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1000 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE DUP4 ISZERO ISZERO DUP1 PUSH2 0xFEC JUMPI JUMPDEST ISZERO PUSH2 0xFAE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP7 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFA3 JUMPI DUP8 SWAP2 PUSH2 0xEC3 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0xE86 JUMPI PUSH1 0x40 DUP2 ADD MLOAD DUP7 LT PUSH2 0xE48 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 DUP6 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xE08 JUMPI DUP10 SWAP6 PUSH2 0xE13 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xE08 JUMPI DUP10 SWAP6 PUSH2 0xDC8 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD83 JUMPI PUSH1 0x14 DUP7 GT PUSH2 0xD46 JUMPI PUSH1 0x64 PUSH2 0x969 DUP11 SWAP8 DUP11 PUSH2 0x123E JUMP JUMPDEST DIV SWAP5 PUSH1 0x20 PUSH2 0x977 DUP8 DUP12 PUSH2 0x1267 JUMP JUMPDEST SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0xCC507641 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL SWAP7 DUP8 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP8 PUSH2 0xD12 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP11 PUSH1 0x40 MLOAD PUSH2 0x9B4 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP10 DUP2 MSTORE DUP11 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP12 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE DUP8 PUSH1 0xA0 DUP3 ADD MSTORE DUP6 PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP3 ADD MSTORE DUP3 EXTCODESIZE ISZERO PUSH2 0x14F JUMPI PUSH2 0xA18 SWAP3 DUP11 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x1DCD400B PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1165 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD07 JUMPI PUSH2 0xCEC JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP14 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP2 PUSH2 0xCB2 JUMPI JUMPDEST POP ISZERO PUSH2 0xC6D JUMPI PUSH1 0x2 SLOAD PUSH1 0x20 SWAP4 DUP5 ADD DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP6 SWAP2 SWAP3 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP16 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP2 PUSH2 0xC24 JUMPI JUMPDEST POP ISZERO PUSH2 0xBDF JUMPI PUSH1 0x3 SLOAD SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP11 SWAP3 SWAP2 AND DUP5 EXTCODESIZE ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP9 DUP3 ISZERO PUSH2 0x49C JUMPI DUP8 SWAP4 DUP8 SWAP4 PUSH2 0xBBF JUMPI JUMPDEST POP POP PUSH2 0xB7A PUSH32 0x4CF76F1607429A1BA564F99E3071202CEDECEDCED41885ABC9D7FAF015984157 SWAP2 PUSH2 0xB6C PUSH1 0x40 MLOAD SWAP7 DUP12 DUP9 MSTORE PUSH1 0x1 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x1140 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x1140 JUMP JUMPDEST SWAP4 TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP6 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0x5CD7214F6A35088A9D01C8364579EF0EFBF9EAB3A80310601FBAEF534BBB69AF PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xBCD SWAP3 SWAP5 POP DUP2 SWAP4 POP PUSH2 0x1098 JUMP JUMPDEST PUSH2 0xBDB JUMPI DUP4 DUP6 SWAP2 DUP9 CODESIZE PUSH2 0xB23 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374207061796D656E74207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC5A JUMPI JUMPDEST DUP2 PUSH2 0xC3F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI PUSH2 0xC50 SWAP1 PUSH2 0x1231 JUMP JUMPDEST CODESIZE PUSH2 0xACE JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE4 JUMPI JUMPDEST DUP2 PUSH2 0xCCD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI PUSH2 0xCDE SWAP1 PUSH2 0x1231 JUMP JUMPDEST CODESIZE PUSH2 0xA76 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC0 JUMP JUMPDEST DUP7 DUP12 PUSH2 0xCFE PUSH2 0xA64 SWAP5 SWAP14 PUSH1 0x20 SWAP5 PUSH2 0x1098 JUMP JUMPDEST SWAP12 SWAP3 POP POP PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD3E JUMPI JUMPDEST DUP2 PUSH2 0xD2E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x99B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA0D8C2E8CCDEE4DA40CCCACA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE00 JUMPI JUMPDEST DUP2 PUSH2 0xDE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDFC JUMPI PUSH2 0xDF5 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x944 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE40 JUMPI JUMPDEST DUP2 PUSH2 0xE2E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDFC JUMPI SWAP4 MLOAD SWAP4 PUSH1 0x20 PUSH2 0x91C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5061796D656E7420616D6F756E7420746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6574776F726B206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0xED4 DUP2 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF9F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDFC JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF8B JUMPI PUSH1 0x40 MSTORE DUP1 MLOAD DUP4 MSTORE PUSH2 0xF2D PUSH1 0x20 DUP3 ADD PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC56 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0xF5E SWAP2 DUP4 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xF6F PUSH1 0x80 DUP3 ADD PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081C185E5B595B9D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH10 0x21E19E0C9BAB2400000 DUP5 GT ISZERO PUSH2 0x896 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x14F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1082 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1082 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1082 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x48F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x10ED DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x10FB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1098 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x48F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1130 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1120 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1159 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 DUP1 PUSH2 0x11CF PUSH2 0x11BD PUSH1 0xA0 DUP7 ADD MLOAD PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x1140 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x48F JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x48F JUMPI DUP1 MLOAD PUSH2 0x1202 DUP2 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x1210 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1098 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x48F JUMPI PUSH2 0x122E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x111D JUMP JUMPDEST SWAP1 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x48F JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1283 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x12A8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4B 0xE 0xE7 0x27 CREATE REVERT PUSH16 0x7FEDFBC9134AB08027938699554E906E 0xE5 PUSH15 0x86DCDD33B79664736F6C634300081C STOP CALLER ",
              "sourceMap": "349:5472:11:-:0;;;;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1324:10;;1273:26:0;1269:95;;-1:-1:-1;349:5472:11;;1324:10;-1:-1:-1;;;;;;349:5472:11;;;;;;;;;;1324:10;;-1:-1:-1;;;;;349:5472:11;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:7;;;-1:-1:-1;;;;;349:5472:11;;1354:19;;349:5472;;-1:-1:-1;;;;;;349:5472:11;;1416:30;;349:5472;;-1:-1:-1;;;;;349:5472:11;;1492:28;;349:5472;;;;;;;;1557:22;349:5472;;;1557:22;349:5472;;;;;;;1589:49;349:5472;;;1589:49;349:5472;;;;;;;1648:43;349:5472;;;1648:43;349:5472;;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;349:5472:11;;-1:-1:-1;1322:31:0;349:5472:11;-1:-1:-1;349:5472:11;;;;;;-1:-1:-1;349:5472:11;;;;;-1:-1:-1;349:5472:11;;;;-1:-1:-1;;;;;349:5472:11;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 4568,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 4657,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string": {
                  "entryPoint": 4310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 4588,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 4416,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Session": {
                  "entryPoint": 4453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 4282,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 4670,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 4711,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 4381,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 4248,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_14322": {
                  "entryPoint": 4197,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 4756,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 4724,
                  "id": 995,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816311ce026714611040575080632f48ab7d14611017578063306247091461081d578063388d2c24146107905780633f4ba83a1461064e578063402ff0db146104cd5780635197f2d5146104a857806352238fdd146103f35780635c975abb146103ce578063715018a61461037457806375d60372146102e85780638456cb59146101a45780638da5cb5b1461017d578063c05c5e94146101545763f2fde38b146100c657600080fd5b34610151576020366003190112610151576004356001600160a01b0381169081900361014f576100f4611294565b801561013b5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346101515780600319360112610151576004546040516001600160a01b039091168152602090f35b5034610151578060031936011261015157546040516001600160a01b039091168152602090f35b50346101515780600319360112610151578054336001600160a01b03821614801561025a575b15610215576101d7611274565b60ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f2070617573650000000000000000006044820152606490fd5b5060048054604051638da5cb5b60e01b81529160209183919082906001600160a01b03165afa9081156102dd57839161029f575b506001600160a01b031633146101ca565b90506020813d6020116102d5575b816102ba60209383611098565b810103126102d1576102cb906111d8565b3861028e565b8280fd5b3d91506102ad565b6040513d85823e3d90fd5b5034610151576020366003190112610151576004356001600160a01b0381169081900361014f57610317611294565b8015610338576bffffffffffffffffffffffff60a01b600254161760025580f35b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534454206164647265737360601b6044820152606490fd5b503461015157806003193601126101515761038d611294565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461015157806003193601126101515760ff6020915460a01c166040519015158152f35b50346101515760203660031901126101515760048054604051638c639a8560e01b81528235929091602091839182906001600160a01b03165afa92831561049c5792610461575b50610454606461044c6040948461123e565b048092611267565b9082519182526020820152f35b91506020823d602011610494575b8161047c60209383611098565b8101031261048f5790519061045461043a565b600080fd5b3d915061046f565b604051903d90823e3d90fd5b5034610151578060031936011261015157602060405169021e19e0c9bab24000008152f35b5034610151576020366003190112610151578060249160e06040516104f181611065565b828152826020820152826040820152826060820152826080820152606060a0820152606060c082015201528060018060a01b03600354166040519384809263402ff0db60e01b825260043560048301525afa90811561049c57809161056b575b6040516020808252819061056790820185611165565b0390f35b90503d8082843e61057c8184611098565b82019160208184031261014f5780519067ffffffffffffffff82116102d15701916101008382031261014f57604051916105b583611065565b83518352602084015160208401526105cf604085016111d8565b6040840152606084015160608401526105ea60808501611231565b608084015260a084015167ffffffffffffffff811161014f578261060f9186016111ec565b60a084015260c08401519067ffffffffffffffff821161015157509261063c60e0926105679583016111ec565b60c0840152015160e082015238610551565b50346101515780600319360112610151578054336001600160a01b038216148015610711575b156106cc5760ff8160a01c16156106bd5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b60405162461bcd60e51b815260206004820152601960248201527f4e6f7420617574686f72697a656420746f20756e7061757365000000000000006044820152606490fd5b5060048054604051638da5cb5b60e01b81529160209183919082906001600160a01b03165afa9081156102dd578391610756575b506001600160a01b03163314610674565b90506020813d602011610788575b8161077160209383611098565b810103126102d157610782906111d8565b38610745565b3d9150610764565b5034610151576020366003190112610151576004356001600160a01b0381169081900361014f576107bf611294565b80156107e0576bffffffffffffffffffffffff60a01b600454161760045580f35b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606490fd5b50346101515760803660031901126101515760243560043560443567ffffffffffffffff8111611013576108559036906004016110d6565b60643567ffffffffffffffff811161100f576108759036906004016110d6565b9061087e611274565b60026001541461100057600260015583151580610fec575b15610fae576003546040516395ea571760e01b8152600481018590526001600160a01b0390911691908681602481865afa908115610fa3578791610ec3575b50608081015115610e865760408101518610610e485760018060a01b03600454169360405193638c639a8560e01b8552602085600481895afa948515610e08578995610e13575b506020600495966040519687809263c5f956af60e01b82525afa948515610e08578995610dc8575b506001600160a01b03851615610d835760148611610d465760646109698a978a61123e565b04946020610977878b611267565b926004604051809a819363cc50764160e01b83525af1968715610c62578a97610d12575b5060018060a01b03600354168a6040516109b481611065565b8981528a60208201523360408201528b6060820152600160808201528760a08201528560c08201524260e0820152823b1561014f57610a18928a83604051809681958294631dcd400b60e11b84526004840152604060248401526044830190611165565b03925af18015610d0757610cec575b506002546040516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810188905291602091839116818d81606481015b03925af1908115610c62578a91610cb2575b5015610c6d57600254602093840180516040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810185905291959192839160649183918f91165af1908115610c62578a91610c24575b5015610bdf5760035492516001600160a01b03938416938a929116843b156102d1576044908360405196879485936370e3d45560e11b8552600485015260248401525af19088821561049c5787938793610bbf575b5050610b7a7f4cf76f1607429a1ba564f99e3071202cedecedced41885abc9d7faf01598415791610b6c604051968b88526001602089015260a0604089015260a0880190611140565b908682036060880152611140565b934260808201528033950390a460405193845260208401527f5cd7214f6a35088a9d01c8364579ef0efbf9eab3a80310601fbaef534bbb69af60403394a46001805580f35b610bcd929450819350611098565b610bdb578385918838610b23565b8680fd5b60405162461bcd60e51b815260206004820152601c60248201527f486f7374207061796d656e74207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d602011610c5a575b81610c3f60209383611098565b81010312610c5657610c5090611231565b38610ace565b8980fd5b3d9150610c32565b6040513d8c823e3d90fd5b60405162461bcd60e51b815260206004820152601c60248201527f506c6174666f726d20666565207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d602011610ce4575b81610ccd60209383611098565b81010312610c5657610cde90611231565b38610a76565b3d9150610cc0565b868b610cfe610a64949d602094611098565b9b925050610a27565b6040513d8d823e3d90fd5b9096506020813d602011610d3e575b81610d2e60209383611098565b81010312610c565751953861099b565b3d9150610d21565b60405162461bcd60e51b81526020600482015260156024820152740a0d8c2e8ccdee4da40cccaca40e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b9094506020813d602011610e00575b81610de460209383611098565b81010312610dfc57610df5906111d8565b9338610944565b8880fd5b3d9150610dd7565b6040513d8b823e3d90fd5b94506020853d602011610e40575b81610e2e60209383611098565b81010312610dfc57935193602061091c565b3d9150610e21565b60405162461bcd60e51b81526020600482015260166024820152755061796d656e7420616d6f756e7420746f6f206c6f7760501b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6574776f726b206973206e6f742061637469766560581b6044820152606490fd5b90503d8088833e610ed48183611098565b810190602081830312610f9f5780519067ffffffffffffffff8211610dfc57019060e082820312610f9f576040519160e0830183811067ffffffffffffffff821117610f8b5760405280518352610f2d602082016111d8565b602084015260408101516040840152606081015167ffffffffffffffff8111610c565760c092610f5e9183016111ec565b6060840152610f6f60808201611231565b608084015260a081015160a0840152015160c0820152386108d5565b634e487b7160e01b8a52604160045260248afd5b8780fd5b6040513d89823e3d90fd5b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c185e5b595b9d08185b5bdd5b9d60521b6044820152606490fd5b5069021e19e0c9bab2400000841115610896565b633ee5aeb560e01b8552600485fd5b8480fd5b8380fd5b50346101515780600319360112610151576002546040516001600160a01b039091168152602090f35b90503461014f578160031936011261014f576003546001600160a01b03168152602090f35b610100810190811067ffffffffffffffff82111761108257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761108257604052565b67ffffffffffffffff811161108257601f01601f191660200190565b81601f8201121561048f578035906110ed826110ba565b926110fb6040519485611098565b8284526020838301011161048f57816000926020809301838601378301015290565b60005b8381106111305750506000910152565b8181015183820152602001611120565b906020916111598151809281855285808601910161111d565b601f01601f1916010190565b90815181526020820151602082015260018060a01b0360408301511660408201526060820151606082015260808201511515608082015260e0806111cf6111bd60a086015161010060a0870152610100860190611140565b60c086015185820360c0870152611140565b93015191015290565b51906001600160a01b038216820361048f57565b81601f8201121561048f578051611202816110ba565b926112106040519485611098565b8184526020828401011161048f5761122e916020808501910161111d565b90565b5190811515820361048f57565b8181029291811591840414171561125157565b634e487b7160e01b600052601160045260246000fd5b9190820391821161125157565b60ff60005460a01c1661128357565b63d93c066560e01b60005260046000fd5b6000546001600160a01b031633036112a857565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220de4b0ee727f0fd6f7fedfbc9134ab08027938699554e906ee56e86dcdd33b79664736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11CE0267 EQ PUSH2 0x1040 JUMPI POP DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1017 JUMPI DUP1 PUSH4 0x30624709 EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0x388D2C24 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x402FF0DB EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x5197F2D5 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x52238FDD EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x75D60372 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xC05C5E94 EQ PUSH2 0x154 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0xF4 PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x25A JUMPI JUMPDEST ISZERO PUSH2 0x215 JUMPI PUSH2 0x1D7 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207061757365000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2DD JUMPI DUP4 SWAP2 PUSH2 0x29F JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5 JUMPI JUMPDEST DUP2 PUSH2 0x2BA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2D1 JUMPI PUSH2 0x2CB SWAP1 PUSH2 0x11D8 JUMP JUMPDEST CODESIZE PUSH2 0x28E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x317 PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x338 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344542061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x38D PUSH2 0x1294 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x49C JUMPI SWAP3 PUSH2 0x461 JUMPI JUMPDEST POP PUSH2 0x454 PUSH1 0x64 PUSH2 0x44C PUSH1 0x40 SWAP5 DUP5 PUSH2 0x123E JUMP JUMPDEST DIV DUP1 SWAP3 PUSH2 0x1267 JUMP JUMPDEST SWAP1 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x494 JUMPI JUMPDEST DUP2 PUSH2 0x47C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x48F JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x454 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI DUP1 PUSH1 0x24 SWAP2 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x4F1 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x402FF0DB PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x49C JUMPI DUP1 SWAP2 PUSH2 0x56B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x567 SWAP1 DUP3 ADD DUP6 PUSH2 0x1165 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x57C DUP2 DUP5 PUSH2 0x1098 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x14F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D1 JUMPI ADD SWAP2 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5B5 DUP4 PUSH2 0x1065 JUMP JUMPDEST DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5CF PUSH1 0x40 DUP6 ADD PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5EA PUSH1 0x80 DUP6 ADD PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14F JUMPI DUP3 PUSH2 0x60F SWAP2 DUP7 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x151 JUMPI POP SWAP3 PUSH2 0x63C PUSH1 0xE0 SWAP3 PUSH2 0x567 SWAP6 DUP4 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x551 JUMP JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x711 JUMPI JUMPDEST ISZERO PUSH2 0x6CC JUMPI PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x6BD JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20756E706175736500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2DD JUMPI DUP4 SWAP2 PUSH2 0x756 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x674 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x788 JUMPI JUMPDEST DUP2 PUSH2 0x771 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2D1 JUMPI PUSH2 0x782 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST CODESIZE PUSH2 0x745 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x764 JUMP JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14F JUMPI PUSH2 0x7BF PUSH2 0x1294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1013 JUMPI PUSH2 0x855 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10D6 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x100F JUMPI PUSH2 0x875 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10D6 JUMP JUMPDEST SWAP1 PUSH2 0x87E PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1000 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE DUP4 ISZERO ISZERO DUP1 PUSH2 0xFEC JUMPI JUMPDEST ISZERO PUSH2 0xFAE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP7 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFA3 JUMPI DUP8 SWAP2 PUSH2 0xEC3 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0xE86 JUMPI PUSH1 0x40 DUP2 ADD MLOAD DUP7 LT PUSH2 0xE48 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x8C639A85 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 DUP6 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xE08 JUMPI DUP10 SWAP6 PUSH2 0xE13 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH4 0xC5F956AF PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xE08 JUMPI DUP10 SWAP6 PUSH2 0xDC8 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD83 JUMPI PUSH1 0x14 DUP7 GT PUSH2 0xD46 JUMPI PUSH1 0x64 PUSH2 0x969 DUP11 SWAP8 DUP11 PUSH2 0x123E JUMP JUMPDEST DIV SWAP5 PUSH1 0x20 PUSH2 0x977 DUP8 DUP12 PUSH2 0x1267 JUMP JUMPDEST SWAP3 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0xCC507641 PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL SWAP7 DUP8 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP8 PUSH2 0xD12 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP11 PUSH1 0x40 MLOAD PUSH2 0x9B4 DUP2 PUSH2 0x1065 JUMP JUMPDEST DUP10 DUP2 MSTORE DUP11 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP12 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE DUP8 PUSH1 0xA0 DUP3 ADD MSTORE DUP6 PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP3 ADD MSTORE DUP3 EXTCODESIZE ISZERO PUSH2 0x14F JUMPI PUSH2 0xA18 SWAP3 DUP11 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x1DCD400B PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1165 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD07 JUMPI PUSH2 0xCEC JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP14 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP2 PUSH2 0xCB2 JUMPI JUMPDEST POP ISZERO PUSH2 0xC6D JUMPI PUSH1 0x2 SLOAD PUSH1 0x20 SWAP4 DUP5 ADD DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP6 SWAP2 SWAP3 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP16 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xC62 JUMPI DUP11 SWAP2 PUSH2 0xC24 JUMPI JUMPDEST POP ISZERO PUSH2 0xBDF JUMPI PUSH1 0x3 SLOAD SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP11 SWAP3 SWAP2 AND DUP5 EXTCODESIZE ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x70E3D455 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP9 DUP3 ISZERO PUSH2 0x49C JUMPI DUP8 SWAP4 DUP8 SWAP4 PUSH2 0xBBF JUMPI JUMPDEST POP POP PUSH2 0xB7A PUSH32 0x4CF76F1607429A1BA564F99E3071202CEDECEDCED41885ABC9D7FAF015984157 SWAP2 PUSH2 0xB6C PUSH1 0x40 MLOAD SWAP7 DUP12 DUP9 MSTORE PUSH1 0x1 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x1140 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x1140 JUMP JUMPDEST SWAP4 TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE DUP1 CALLER SWAP6 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0x5CD7214F6A35088A9D01C8364579EF0EFBF9EAB3A80310601FBAEF534BBB69AF PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xBCD SWAP3 SWAP5 POP DUP2 SWAP4 POP PUSH2 0x1098 JUMP JUMPDEST PUSH2 0xBDB JUMPI DUP4 DUP6 SWAP2 DUP9 CODESIZE PUSH2 0xB23 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F7374207061796D656E74207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC5A JUMPI JUMPDEST DUP2 PUSH2 0xC3F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI PUSH2 0xC50 SWAP1 PUSH2 0x1231 JUMP JUMPDEST CODESIZE PUSH2 0xACE JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE4 JUMPI JUMPDEST DUP2 PUSH2 0xCCD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI PUSH2 0xCDE SWAP1 PUSH2 0x1231 JUMP JUMPDEST CODESIZE PUSH2 0xA76 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC0 JUMP JUMPDEST DUP7 DUP12 PUSH2 0xCFE PUSH2 0xA64 SWAP5 SWAP14 PUSH1 0x20 SWAP5 PUSH2 0x1098 JUMP JUMPDEST SWAP12 SWAP3 POP POP PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD3E JUMPI JUMPDEST DUP2 PUSH2 0xD2E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC56 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x99B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA0D8C2E8CCDEE4DA40CCCACA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE00 JUMPI JUMPDEST DUP2 PUSH2 0xDE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDFC JUMPI PUSH2 0xDF5 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x944 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE40 JUMPI JUMPDEST DUP2 PUSH2 0xE2E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDFC JUMPI SWAP4 MLOAD SWAP4 PUSH1 0x20 PUSH2 0x91C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5061796D656E7420616D6F756E7420746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6574776F726B206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0xED4 DUP2 DUP4 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF9F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDFC JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF8B JUMPI PUSH1 0x40 MSTORE DUP1 MLOAD DUP4 MSTORE PUSH2 0xF2D PUSH1 0x20 DUP3 ADD PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC56 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0xF5E SWAP2 DUP4 ADD PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xF6F PUSH1 0x80 DUP3 ADD PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081C185E5B595B9D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH10 0x21E19E0C9BAB2400000 DUP5 GT ISZERO PUSH2 0x896 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x151 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x14F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1082 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1082 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1082 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x48F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x10ED DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x10FB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1098 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x48F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1130 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1120 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1159 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 DUP1 PUSH2 0x11CF PUSH2 0x11BD PUSH1 0xA0 DUP7 ADD MLOAD PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x1140 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x48F JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x48F JUMPI DUP1 MLOAD PUSH2 0x1202 DUP2 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x1210 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1098 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x48F JUMPI PUSH2 0x122E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x111D JUMP JUMPDEST SWAP1 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x48F JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1251 JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1283 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x12A8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4B 0xE 0xE7 0x27 CREATE REVERT PUSH16 0x7FEDFBC9134AB08027938699554E906E 0xE5 PUSH15 0x86DCDD33B79664736F6C634300081C STOP CALLER ",
              "sourceMap": "349:5472:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;349:5472:11;;-1:-1:-1;;;;;;349:5472:11;;;;;;-1:-1:-1;;;;;349:5472:11;3052:40:0;349:5472:11;;3052:40:0;349:5472:11;;2623:91:0;-1:-1:-1;;;2672:31:0;;349:5472:11;;;;;2672:31:0;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;4985:10;-1:-1:-1;;;;;349:5472:11;;4985:21;:60;;;;349:5472;;;;1315:72:6;;:::i;:::-;-1:-1:-1;;;;349:5472:11;-1:-1:-1;;;349:5472:11;;;;;4985:10;349:5472;;2427:20:6;;349:5472:11;;2427:20:6;349:5472:11;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;4985:60;-1:-1:-1;349:5472:11;;;;;-1:-1:-1;;;5024:21:11;;349:5472;5024:21;;349:5472;;;;;-1:-1:-1;;;;;349:5472:11;5024:21;;;;;;;;;;;4985:60;-1:-1:-1;;;;;;349:5472:11;4985:10;5010:35;4985:60;;5024:21;;;;;;;;;;;;;;;;;:::i;:::-;;;349:5472;;;;;;;:::i;:::-;5024:21;;;349:5472;;;;5024:21;;;-1:-1:-1;5024:21:11;;;349:5472;;;;;;;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;1500:62:0;;:::i;:::-;5472:22:11;;349:5472;;;;;5529:25;349:5472;;;5529:25;349:5472;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;349:5472:11;;-1:-1:-1;;;;;;349:5472:11;;;;;;-1:-1:-1;;;;;349:5472:11;3052:40:0;349:5472:11;;3052:40:0;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;;;;;;-1:-1:-1;;;4713:34:11;;349:5472;;;;;;;;;;;-1:-1:-1;;;;;349:5472:11;4713:34;;;;;;;;;;349:5472;4772:19;4821:20;4795:3;4772:19;349:5472;4772:19;;;:::i;:::-;349:5472;4821:20;;;:::i;:::-;349:5472;;;;;;;;;;;4713:34;;;349:5472;4713:34;;349:5472;4713:34;;;;;;349:5472;4713:34;;;:::i;:::-;;;349:5472;;;;;;;4821:20;4713:34;;349:5472;-1:-1:-1;349:5472:11;;4713:34;;;-1:-1:-1;4713:34:11;;;349:5472;;;;;;;;;;;;;;;;;;;;;;;;;;585:8;349:5472;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;;4449:38;349:5472;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:15;349:5472;;;;;;;;;;;4449:38;;349:5472;;;4449:38;;349:5472;4449:38;;;;;;;;;;;349:5472;;;;;;;;;;;;;;;:::i;:::-;;;;4449:38;;;;;;;;;;;;:::i;:::-;;;349:5472;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4449:38;;;349:5472;;;;;;;;;;;;;;;5184:10;-1:-1:-1;;;;;349:5472:11;;5184:21;:60;;;;349:5472;;;;;;;;;2140:9:6;2136:62;;-1:-1:-1;;;;349:5472:11;;;;;5184:10;349:5472;;2674:22:6;;349:5472:11;;2674:22:6;349:5472:11;;2136:62:6;-1:-1:-1;;;2172:15:6;;349:5472:11;2172:15:6;;349:5472:11;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;5184:60;-1:-1:-1;349:5472:11;;;;;-1:-1:-1;;;5223:21:11;;349:5472;5223:21;;349:5472;;;;;-1:-1:-1;;;;;349:5472:11;5223:21;;;;;;;;;;;5184:60;-1:-1:-1;;;;;;349:5472:11;5184:10;5209:35;5184:60;;5223:21;;;;;;;;;;;;;;;;;:::i;:::-;;;349:5472;;;;;;;:::i;:::-;5223:21;;;;;;-1:-1:-1;5223:21:11;;349:5472;;;;;;;-1:-1:-1;;349:5472:11;;;;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;1500:62:0;;:::i;:::-;5715:23:11;;349:5472;;;;;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;-1:-1:-1;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1315:72:6;;;:::i;:::-;1899:1:7;349:5472:11;;2702:18:7;2698:86;;1899:1;349:5472:11;1899:1:7;1945:11:11;;;:44;;;349:5472;;;;2123:15;349:5472;;;-1:-1:-1;;;2123:60:11;;349:5472;2123:60;;349:5472;;;-1:-1:-1;;;;;349:5472:11;;;;;2123:60;349:5472;;;;2123:60;;;;;;;;;;;349:5472;2201:16;349:5472;2201:16;;349:5472;;;;;2272:23;;349:5472;2261:34;;349:5472;;;;;;;;;;;;;;;;;2432:34;;349:5472;2432:34;349:5472;2432:34;;;;;;;;;;;;;349:5472;;;;;;;;;;;;;;;2502:31;;;;;;;;;;;;;349:5472;-1:-1:-1;;;;;;349:5472:11;;2552:29;349:5472;;2650:2;2628:24;;349:5472;;;2712:28;;;;;:::i;:::-;349:5472;2778:21;349:5472;2778:21;;;;:::i;:::-;349:5472;;;;;;;;;;;2878:36;;;;;;;;;;;;;349:5472;;;;;;;2123:15;349:5472;;;;;;;;:::i;:::-;;;;2987:337;349:5472;2987:337;;349:5472;3120:10;349:5472;2987:337;;349:5472;2987:337;349:5472;2987:337;;349:5472;;;2987:337;;349:5472;2987:337;;;;349:5472;2987:337;;;;349:5472;3294:15;349:5472;2987:337;;349:5472;2924:410;;;;;349:5472;;;;;;;;;;;;;;;2924:410;;349:5472;2924:410;;349:5472;;;;;;;;;;;:::i;:::-;2924:410;;;;;;;;;;349:5472;-1:-1:-1;1899:1:7;349:5472:11;;;-1:-1:-1;;;3428:105:11;;3120:10;349:5472;3428:105;;349:5472;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;;;;3428:105;;;;;;;;;;;;;;349:5472;;;;;1899:1:7;349:5472:11;;3695:19;;;349:5472;;;;-1:-1:-1;;;3640:108:11;;3120:10;349:5472;3640:108;;349:5472;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;3695:19;;349:5472;;;;;;;;;;;3640:108;;;;;;;;;;;349:5472;;;;;2123:15;349:5472;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;3861:69;;;;;349:5472;;;;;;;;;;;;;3861:69;;349:5472;3861:69;;349:5472;;;;;3861:69;;;;;;;;;;;;;;349:5472;;;;3946:208;349:5472;;;;;;;;;;;;;2987:337;349:5472;;;;2987:337;349:5472;;;;:::i;:::-;;;;;;;;;;:::i;:::-;3294:15;;349:5472;;;;3120:10;;3946:208;;;;349:5472;;;;;;;;;4170:142;349:5472;3120:10;4170:142;;349:5472;1899:1:7;;349:5472:11;;3861:69;;;;;;;;;:::i;:::-;349:5472;;3861:69;;;;;;;349:5472;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;3640:108;;;349:5472;3640:108;;349:5472;3640:108;;;;;;349:5472;3640:108;;;:::i;:::-;;;349:5472;;;;;;;:::i;:::-;3640:108;;;349:5472;;;;3640:108;;;-1:-1:-1;3640:108:11;;;349:5472;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;3428:105;;;349:5472;3428:105;;349:5472;3428:105;;;;;;349:5472;3428:105;;;:::i;:::-;;;349:5472;;;;;;;:::i;:::-;3428:105;;;;;;-1:-1:-1;3428:105:11;;2924:410;;;;3428:105;2924:410;;349:5472;2924:410;;:::i;:::-;;;;;;;;349:5472;;;;;;;;;2878:36;;;;349:5472;2878:36;;349:5472;2878:36;;;;;;349:5472;2878:36;;;:::i;:::-;;;349:5472;;;;;2878:36;;;;;;;-1:-1:-1;2878:36:11;;349:5472;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;;;;;;;;;2502:31;;;;349:5472;2502:31;;349:5472;2502:31;;;;;;349:5472;2502:31;;;:::i;:::-;;;349:5472;;;;;;;:::i;:::-;2502:31;;;;349:5472;;;;2502:31;;;-1:-1:-1;2502:31:11;;;349:5472;;;;;;;;;2432:34;;;349:5472;2432:34;;349:5472;2432:34;;;;;;349:5472;2432:34;;;:::i;:::-;;;349:5472;;;;;;;;2432:34;;;;;-1:-1:-1;2432:34:11;;349:5472;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;2123:60;;;;;;;;;;;;:::i;:::-;;;349:5472;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2123:60;;;349:5472;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;2123:60;349:5472;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;;;;;;-1:-1:-1;;;349:5472:11;;;;;;;1945:44;1960:29;585:8;1960:29;;;1945:44;;2698:86:7;-1:-1:-1;;;2743:30:7;;349:5472:11;2743:30:7;;349:5472:11;;;;;;;;;;;;;;;;;;;;;416:20;349:5472;;;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;;442:36;349:5472;-1:-1:-1;;;;;349:5472:11;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;349:5472:11;;;;;-1:-1:-1;349:5472:11;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;349:5472:11;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;349:5472:11;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;349:5472:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;349:5472:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;349:5472:11;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;1878:128:6:-;349:5472:11;1796:7:6;349:5472:11;;;;1939:61:6;;1878:128::o;1939:61::-;1974:15;;;1796:7;1974:15;;1796:7;1974:15;1796:162:0;1710:6;349:5472:11;-1:-1:-1;;;;;349:5472:11;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:5;1901:40:0;349:5472:11;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_PAYMENT_AMOUNT()": "5197f2d5",
              "acceptPayment(uint256,uint256,string,string)": "30624709",
              "adminContract()": "c05c5e94",
              "calculateFees(uint256)": "52238fdd",
              "getSession(uint256)": "402ff0db",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "storageContract()": "11ce0267",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updateAdminContract(address)": "388d2c24",
              "updateUSDTAddress(address)": "75d60372",
              "usdt()": "2f48ab7d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"SessionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PAYMENT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"acceptPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hostAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"getSession\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"updateAdminContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newUSDT\",\"type\":\"address\"}],\"name\":\"updateUSDTAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract TestUSDT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"PaymentReceived(uint256,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when payment is received\"},\"SessionStarted(uint256,uint256,address,uint256,bool,string,string,uint256)\":{\"notice\":\"Emitted when a session starts\"}},\"kind\":\"user\",\"methods\":{\"calculateFees(uint256)\":{\"notice\":\"Helper to calculate fee breakdown before payment\"},\"updateAdminContract(address)\":{\"notice\":\"Update admin contract address (emergency only)\"},\"updateUSDTAddress(address)\":{\"notice\":\"Update USDT contract address (emergency only)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetPayment.sol\":\"ZaaNetPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/TestUSDT.sol\":{\"keccak256\":\"0x8a805e1b3df326de0549223cd003595e6de9d7fc7c0f9741b52629af3c3f65d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064bd0f2abe41cc2660a0f8263a9ac29a057cffbfd1a6e1c5e4acf0069862641\",\"dweb:/ipfs/Qmap6umnhknbikJcrsyiRTbiRYf8EzTsroyU9EYsU3iJgq\"]},\"contracts/ZaaNetAdmin.sol\":{\"keccak256\":\"0x23e810954ccdba63ec1f1a2b49f4f93bca616553d3871edbb2f262e31505ddcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1750a7f8e8a3e7ed6b7ae6027994569a19c8b112ddb8e2a29b8325bd245403\",\"dweb:/ipfs/QmcmeB7viDrZhiFk5679wCvBZCKwPhQtf7gPqq5XsLR71y\"]},\"contracts/ZaaNetPayment.sol\":{\"keccak256\":\"0x6a4db51f73b57b13d4b17a56624b1a4a3229cdefd832c2a51b2d97f297d83287\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e47cd0834a13ff681496b9af6174f9f3d4803541b7cd943d74a21b683e31894a\",\"dweb:/ipfs/QmSf6zVy5Hp6FxfVNyCRVkG81H6PUoezpCLgFMUNcufNXk\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/interface/IZaaNetPayment.sol\":{\"keccak256\":\"0x24f0de7d565253bab0aa53065aae88b575baecac78007f55e870bd6793d580fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f12d93046f16813ca81eb500f528f01bcbc5ae58c4c16c86ee5ac66bff38ae7f\",\"dweb:/ipfs/QmUNhHhLHMziA2PUAb5RUKYgH4RYYn6P5G6LHb7XQu7j5B\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetStorage.sol": {
        "ZaaNetStorage": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "AllowedCallerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalEarned",
                  "type": "uint256"
                }
              ],
              "name": "HostEarningsUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                }
              ],
              "name": "NetworkStored",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "SessionStored",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_NETWORKS_PER_QUERY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_SESSIONS_PER_QUERY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedCallers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getSession",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSessions",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeSessions",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "hostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "hostNetworkIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementNetworkId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementSessionId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networkExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "networkIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "networks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerSession",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "sessionExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sessionIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "sessions",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "paymentAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "voucherId",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "userId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_caller",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCaller",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_callers",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCallers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "net",
                  "type": "tuple"
                }
              ],
              "name": "setNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "session",
                  "type": "tuple"
                }
              ],
              "name": "setSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234607957331560635760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055611c84908161007f8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163217c682d146115635750806329c718b514610a095780633b9a80161461118f578063402ff0db14610fef57806350c0d41c14610b4c5780635290ffc614610aec57806352f51f8b146109ab5780635a29352d14610ace5780635a2f406f14610a435780636d65573f14610a09578063715018a6146109b057806371f7cd5b146109ab57806373f9a5d71461089257806379f0dc57146107d85780637b334154146107995780637bae8f5e1461074057806383c4b7a31461068e578063879ecf101461065d5780638bb0a17c146105ca5780638da5cb5b146105a157806395ea57171461053a578063c59d484714610475578063cc50764114610415578063d8b0e71614610386578063e1c7a8aa14610299578063ec13f2a114610268578063f2fde38b146101df5763fa9c81a41461015357600080fd5b346101da5760403660031901126101da57610172602435600435611ad4565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b8282106101af578580868960208301520390f35b909192936020806101cc600193605f198a82030186528851611764565b96019201920190929161019b565b600080fd5b346101da5760203660031901126101da576101f861157e565b610200611c25565b6001600160a01b0316801561025257600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101da5760203660031901126101da576004356000526009602052602060ff604060002054166040519015158152f35b346101da5760403660031901126101da576102b261157e565b6024359033600052600260205260ff604060002054168015610372575b6102d8906117c0565b6002600154146103615760026001556001600160a01b0316906102fc821515611933565b610307811515611811565b8160005260076020526103206040600020918254611a8f565b90558060005260076020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b633ee5aeb560e01b60005260046000fd5b506000546001600160a01b031633146102cf565b346101da5760403660031901126101da5761039f61157e565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f60206103ca6115f1565b926103d3611c25565b6001600160a01b0316926103e88415156119ab565b836000526002825261040a8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101da5760003660031901126101da5733600052600260205260ff604060002054168015610461575b610448906117c0565b6020610455600454611976565b80600455604051908152f35b506000546001600160a01b0316331461043f565b346101da5760003660031901126101da576003546004549060008060015b838111156104ff575060015b848111156104c25750608093604051938452602084015260408301526060820152f35b80600052600660205260ff600460406000200154166104ea575b6104e590611976565b61049f565b916104f76104e591611976565b9290506104dc565b808352600560205260ff600460408520015416610525575b61052090611976565b610493565b9061053261052091611976565b919050610517565b346101da5760203660031901126101da576004356105566119f0565b5080600052600960205261057160ff6040600020541661185d565b600052600560205261059d6105896040600020611a27565b604051918291602083526020830190611764565b0390f35b346101da5760003660031901126101da576000546040516001600160a01b039091168152602090f35b346101da5760203660031901126101da5760043560005260056020526040600020805460018060a01b0360018301541691600281015461060c600383016116c0565b9161064760ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611594565b921515608085015260a084015260c08301520390f35b346101da5760203660031901126101da57600435600052600a602052602060ff604060002054166040519015158152f35b346101da5760203660031901126101da5760043560005260066020526040600020805460018201549161073660018060a01b0360028301541691610728600382015460ff6004840154166106e4600585016116c0565b9160076106f3600687016116c0565b95015496604051998a998a5260208a0152604089015260608801521515608087015261010060a0870152610100860190611594565b9084820360c0860152611594565b9060e08301520390f35b346101da5760403660031901126101da5761075961157e565b6001600160a01b03166000908152600860205260409020805460243591908210156101da5760209161078a91611600565b90549060031b1c604051908152f35b346101da5760203660031901126101da576001600160a01b036107ba61157e565b166000526002602052602060ff604060002054166040519015158152f35b346101da5760203660031901126101da576001600160a01b036107f961157e565b16600052600860205260406000206040518060208354918281520190819360005260206000209060005b81811061087c575050508161083991038261169f565b6040519182916020830190602084525180915260408301919060005b818110610863575050500390f35b8251845285945060209384019390920191600101610855565b8254845260209093019260019283019201610823565b346101da5760403660031901126101da576004356001600160401b0381116101da57366023820112156101da5780600401356001600160401b0381116101da576024820191602436918360051b0101116101da576108ee6115f1565b6108f6611c25565b8015159060005b83811061090657005b60019061092f6001600160a01b0361092761092284898b61199b565b6117fd565b1615156119ab565b818060a01b0361094361092283888a61199b565b1660005260026020526109668360406000209060ff801983541691151516179055565b818060a01b0361097a61092283888a61199b565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016108fd565b6115d5565b346101da5760003660031901126101da576109c9611c25565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101da5760203660031901126101da576001600160a01b03610a2a61157e565b1660005260076020526020604060002054604051908152f35b346101da5760203660031901126101da57600435610a5f611c25565b806000526009602052610a7960ff6040600020541661185d565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101da5760003660031901126101da576020600454604051908152f35b346101da5760003660031901126101da5733600052600260205260ff604060002054168015610b38575b610b1f906117c0565b6020610b2c600354611976565b80600355604051908152f35b506000546001600160a01b03163314610b16565b346101da5760403660031901126101da576024356004356001600160401b0382116101da57816004019160e060031982360301126101da5733600052600260205260ff604060002054168015610fdb575b610ba6906117c0565b8115610fa1576024810190610bcd6001600160a01b03610bc5846117fd565b161515611933565b6044810135938415610f5c5760648201610be781836118af565b905015610f2057846000526009602052608460ff604060002054161593610c23610c1a610c13886117fd565b94866118af565b939092016118a2565b908515610f085742925b60405195610c3a87611684565b3586526001600160a01b0390941660208601908152604086018a815290946001600160401b038111610e395760405192610c7e601f8301601f19166020018561169f565b81845236828201116101da57816000926020928387013784010152606086019182529115156080860190815260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b03929092169190911790559151600286015551805160038601916001600160401b038211610e3957610d2082610d1a855461162e565b856118e1565b602090601f8311600114610e985782600697969593610d769593610d5b93600092610e8d575b50508160011b916000199060031b1c19161790565b90555b511515600486019060ff801983541691151516179055565b5160058401555191015515610e4f576000828152600960205260409020805460ff191660011790556001600160a01b03610daf826117fd565b16600052600860205260406000209081549068010000000000000000821015610e3957610e05827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155611600565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610e2e906117fd565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610e64906117fd565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508e80610d46565b90601f1983169184600052816000209260005b818110610ef0575092600192859260069a999896610d76989610610ed7575b505050811b019055610d5e565b015160001960f88460031b161c191690558d8080610eca565b92936020600181928786015181550195019301610eab565b87600052600560205260056040600020015492610c2d565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b03163314610b9d565b346101da5760203660031901126101da57600435600060e060405161101381611668565b828152826020820152826040820152826060820152826080820152606060a0820152606060c0820152015280600052600a60205260ff6040600020541615611151576000526006602052604060002060405161106e81611668565b815481526001820154916020820192835261114560018060a01b03600283015416916040840192835261113260038201546060860190815260ff6004840154166080870190151581526110c3600585016116c0565b9160a0880192835260076110d9600687016116c0565b9560c08a0196875201549660e08901978852604051998a9960208b525160208b01525160408a015260018060a01b03905116606089015251608088015251151560a08701525161010060c0870152610120860190611594565b9051848203601f190160e0860152611594565b90516101008301520390f35b60405162461bcd60e51b815260206004820152601660248201527514d95cdcda5bdb88191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b346101da5760403660031901126101da576024356004356001600160401b0382116101da578160040161010060031984360301126101da5733600052600260205260ff60406000205416801561154f575b6111e9906117c0565b81156115155760448301906001600160a01b03611205836117fd565b16156114d05760648401359361121c851515611811565b60248101359182600052600960205261123c60ff6040600020541661185d565b84600052600660205260406000209281358455600184015561125d846117fd565b6002840180546001600160a01b0319166001600160a01b03909216919091179055600383018690556112a9611294608484016118a2565b600485019060ff801983541691151516179055565b600583016112ba60a48401836118af565b906001600160401b038211610e39576112d782610d1a855461162e565b600090601f831160011461146c576113079291600091836114615750508160011b916000199060031b1c19161790565b90555b61131c600684019160c48401906118af565b906001600160401b038211610e395761133982610d1a855461162e565b600090601f83116001146113d25793602095936113958460079560e4957f6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c89b996000926113c75750508160011b916000199060031b1c19161790565b90555b01359101556000848152600a835260409020805460ff191660011790556001600160a01b0390610e2e906117fd565b013590508d80610d46565b8382526020822091601f198416815b81811061144957508460e4947f6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c89a989460209a98946007986001951061142f575b505050811b019055611398565b0135600019600384901b60f8161c191690558c8080611422565b919360206001819287870135815501950192016113e1565b013590508a80610d46565b8382526020822091601f198416815b8181106114b8575090846001959493921061149e575b505050811b01905561130a565b0135600019600384901b60f8161c19169055898080611491565b9193602060018192878701358155019501920161147b565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081cd95cdcda5bdb88125160721b6044820152606490fd5b506000546001600160a01b031633146111e0565b346101da5760003660031901126101da576020906003548152f35b600435906001600160a01b03821682036101da57565b919082519283825260005b8481106115c0575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161159f565b346101da5760003660031901126101da57602060405160648152f35b6024359081151582036101da57565b80548210156116185760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561165e575b602083101461164857565b634e487b7160e01b600052602260045260246000fd5b91607f169161163d565b61010081019081106001600160401b03821117610e3957604052565b60e081019081106001600160401b03821117610e3957604052565b90601f801991011681019081106001600160401b03821117610e3957604052565b90604051918260008254926116d48461162e565b808452936001811690811561174257506001146116fb575b506116f99250038361169f565b565b90506000929192526020600020906000915b8183106117265750509060206116f992820101386116ec565b602091935080600191548385890101520191019091849261170d565b9050602092506116f994915060ff191682840152151560051b820101386116ec565b908151815260018060a01b0360208301511660208201526040820151604082015260c0806117a1606085015160e0606086015260e0850190611594565b9360808101511515608085015260a081015160a0850152015191015290565b156117c757565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101da5790565b1561181857565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b1561186457565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b3580151581036101da5790565b903590601e19813603018212156101da57018035906001600160401b0382116101da576020019181360383136101da57565b601f82116118ee57505050565b6000526020600020906020601f840160051c83019310611929575b601f0160051c01905b81811061191d575050565b60008155600101611912565b9091508190611909565b1561193a57565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b60001981146119855760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156116185760051b0190565b156119b257565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b604051906119fd82611684565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90604051611a3481611684565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c090600690611a6a600382016116c0565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b9190820180921161198557565b6001600160401b038111610e395760051b60200190565b9190820391821161198557565b80518210156116185760209160051b010190565b91909160648311611bef576003549283821015611bb357611af59082611a8f565b838111611bac575b611b078282611ab3565b91611b1183611a9c565b92611b1f604051948561169f565b808452611b2e601f1991611a9c565b0160005b818110611b95575050805b828110611b4b575050509190565b6001810190818111611985576001916000526005602052611b8e6040600020611b7d611b778685611ab3565b91611a27565b611b878289611ac0565b5286611ac0565b5001611b3d565b602090611ba06119f0565b82828801015201611b32565b5082611afd565b50506040516000611bc560208361169f565b81526000805b818110611bd85750509190565b602090611be36119f0565b82828601015201611bcb565b60405162461bcd60e51b815260206004820152600e60248201526d098d2dad2e840e8dede40d0d2ced60931b6044820152606490fd5b6000546001600160a01b03163303611c3957565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220ca7e6add7b2d3986fedff597b5d4e7c4c2fd38444ab9a885388a82164eb9b23464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x79 JUMPI CALLER ISZERO PUSH1 0x63 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0x1C84 SWAP1 DUP2 PUSH2 0x7F DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0x1563 JUMPI POP DUP1 PUSH4 0x29C718B5 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x3B9A8016 EQ PUSH2 0x118F JUMPI DUP1 PUSH4 0x402FF0DB EQ PUSH2 0xFEF JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0xB4C JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0xAEC JUMPI DUP1 PUSH4 0x52F51F8B EQ PUSH2 0x9AB JUMPI DUP1 PUSH4 0x5A29352D EQ PUSH2 0xACE JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9B0 JUMPI DUP1 PUSH4 0x71F7CD5B EQ PUSH2 0x9AB JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x799 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x740 JUMPI DUP1 PUSH4 0x83C4B7A3 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xC59D4847 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xCC507641 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DF JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x172 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1AF JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1CC PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1764 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x1F8 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x200 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x2B2 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x372 JUMPI JUMPDEST PUSH2 0x2D8 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x361 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2FC DUP3 ISZERO ISZERO PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x307 DUP2 ISZERO ISZERO PUSH2 0x1811 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x320 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CF JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x39F PUSH2 0x157E JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x3CA PUSH2 0x15F1 JUMP JUMPDEST SWAP3 PUSH2 0x3D3 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x3E8 DUP5 ISZERO ISZERO PUSH2 0x19AB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x40A DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x461 JUMPI JUMPDEST PUSH2 0x448 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x455 PUSH1 0x4 SLOAD PUSH2 0x1976 JUMP JUMPDEST DUP1 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43F JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4FF JUMPI POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI POP PUSH1 0x80 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x4EA JUMPI JUMPDEST PUSH2 0x4E5 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST SWAP2 PUSH2 0x4F7 PUSH2 0x4E5 SWAP2 PUSH2 0x1976 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x4DC JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND PUSH2 0x525 JUMPI JUMPDEST PUSH2 0x520 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST SWAP1 PUSH2 0x532 PUSH2 0x520 SWAP2 PUSH2 0x1976 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x517 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x556 PUSH2 0x19F0 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x571 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x59D PUSH2 0x589 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1764 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x60C PUSH1 0x3 DUP4 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH2 0x647 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x736 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x728 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH2 0x6E4 PUSH1 0x5 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH1 0x7 PUSH2 0x6F3 PUSH1 0x6 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP6 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1594 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x759 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x20 SWAP2 PUSH2 0x78A SWAP2 PUSH2 0x1600 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7BA PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7F9 PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x87C JUMPI POP POP POP DUP2 PUSH2 0x839 SWAP2 SUB DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x863 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x855 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x823 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DA JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1DA JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DA JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1DA JUMPI PUSH2 0x8EE PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0x1C25 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x906 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x92F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x927 PUSH2 0x922 DUP5 DUP10 DUP12 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x19AB JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x943 PUSH2 0x922 DUP4 DUP9 DUP11 PUSH2 0x199B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x966 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x97A PUSH2 0x922 DUP4 DUP9 DUP11 PUSH2 0x199B JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x9C9 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA2A PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA5F PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xA79 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xB38 JUMPI JUMPDEST PUSH2 0xB1F SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xB2C PUSH1 0x3 SLOAD PUSH2 0x1976 JUMP JUMPDEST DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB16 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xFDB JUMPI JUMPDEST PUSH2 0xBA6 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xBCD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBC5 DUP5 PUSH2 0x17FD JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xF5C JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xBE7 DUP2 DUP4 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xF20 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xC23 PUSH2 0xC1A PUSH2 0xC13 DUP9 PUSH2 0x17FD JUMP JUMPDEST SWAP5 DUP7 PUSH2 0x18AF JUMP JUMPDEST SWAP4 SWAP1 SWAP3 ADD PUSH2 0x18A2 JUMP JUMPDEST SWAP1 DUP6 ISZERO PUSH2 0xF08 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xC3A DUP8 PUSH2 0x1684 JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC7E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x169F JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0xD20 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST DUP6 PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE98 JUMPI DUP3 PUSH1 0x6 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0xD76 SWAP6 SWAP4 PUSH2 0xD5B SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xE8D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xE4F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDAF DUP3 PUSH2 0x17FD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE05 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0x1600 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE2E SWAP1 PUSH2 0x17FD JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE64 SWAP1 PUSH2 0x17FD JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xD46 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF0 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xD76 SWAP9 SWAP7 LT PUSH2 0xED7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD5E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xECA JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEAB JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9D JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x1013 DUP2 PUSH2 0x1668 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x106E DUP2 PUSH2 0x1668 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH2 0x1145 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH2 0x1132 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x80 DUP8 ADD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH2 0x10C3 PUSH1 0x5 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 PUSH2 0x10D9 PUSH1 0x6 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP6 PUSH1 0xC0 DUP11 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP7 PUSH1 0xE0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0x20 DUP12 MSTORE MLOAD PUSH1 0x20 DUP12 ADD MSTORE MLOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x60 DUP10 ADD MSTORE MLOAD PUSH1 0x80 DUP9 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH2 0x100 PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP1 MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1594 JUMP JUMPDEST SWAP1 MLOAD PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95CDCDA5BDB88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x4 ADD PUSH2 0x100 PUSH1 0x3 NOT DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x154F JUMPI JUMPDEST PUSH2 0x11E9 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1515 JUMPI PUSH1 0x44 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1205 DUP4 PUSH2 0x17FD JUMP JUMPDEST AND ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x64 DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0x121C DUP6 ISZERO ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x123C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP2 CALLDATALOAD DUP5 SSTORE PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x125D DUP5 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP7 SWAP1 SSTORE PUSH2 0x12A9 PUSH2 0x1294 PUSH1 0x84 DUP5 ADD PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0x12BA PUSH1 0xA4 DUP5 ADD DUP4 PUSH2 0x18AF JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0x12D7 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x146C JUMPI PUSH2 0x1307 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1461 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH2 0x131C PUSH1 0x6 DUP5 ADD SWAP2 PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0x1339 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x13D2 JUMPI SWAP4 PUSH1 0x20 SWAP6 SWAP4 PUSH2 0x1395 DUP5 PUSH1 0x7 SWAP6 PUSH1 0xE4 SWAP6 PUSH32 0x6D8D8FDE140EDBF6C26881F091850CB55BAE733F801E9E4F9B7D123B88B620C8 SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x13C7 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD CALLDATALOAD SWAP2 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE2E SWAP1 PUSH2 0x17FD JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP14 DUP1 PUSH2 0xD46 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP DUP5 PUSH1 0xE4 SWAP5 PUSH32 0x6D8D8FDE140EDBF6C26881F091850CB55BAE733F801E9E4F9B7D123B88B620C8 SWAP11 SWAP9 SWAP5 PUSH1 0x20 SWAP11 SWAP9 SWAP5 PUSH1 0x7 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x142F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1398 JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1422 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x13E1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP11 DUP1 PUSH2 0xD46 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x14B8 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x149E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x130A JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1491 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081CD95CDCDA5BDB881251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1DA JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x15C0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x159F JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1DA JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x165E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1648 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x16D4 DUP5 PUSH2 0x162E JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1742 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16FB JUMPI JUMPDEST POP PUSH2 0x16F9 SWAP3 POP SUB DUP4 PUSH2 0x169F JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1726 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x16F9 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x16F9 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16EC JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x17A1 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x17C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1DA JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1DA JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DA JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DA JUMPI JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x18EE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1929 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x191D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST ISZERO PUSH2 0x193A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1985 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19B2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19FD DUP3 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1A34 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x1A6A PUSH1 0x3 DUP3 ADD PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1985 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE39 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1985 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x64 DUP4 GT PUSH2 0x1BEF JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 DUP3 LT ISZERO PUSH2 0x1BB3 JUMPI PUSH2 0x1AF5 SWAP1 DUP3 PUSH2 0x1A8F JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x1BAC JUMPI JUMPDEST PUSH2 0x1B07 DUP3 DUP3 PUSH2 0x1AB3 JUMP JUMPDEST SWAP2 PUSH2 0x1B11 DUP4 PUSH2 0x1A9C JUMP JUMPDEST SWAP3 PUSH2 0x1B1F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x169F JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1B2E PUSH1 0x1F NOT SWAP2 PUSH2 0x1A9C JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B95 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B4B JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1985 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1B8E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1B7D PUSH2 0x1B77 DUP7 DUP6 PUSH2 0x1AB3 JUMP JUMPDEST SWAP2 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1B87 DUP3 DUP10 PUSH2 0x1AC0 JUMP JUMPDEST MSTORE DUP7 PUSH2 0x1AC0 JUMP JUMPDEST POP ADD PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BA0 PUSH2 0x19F0 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1B32 JUMP JUMPDEST POP DUP3 PUSH2 0x1AFD JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1BC5 PUSH1 0x20 DUP4 PUSH2 0x169F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BD8 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BE3 PUSH2 0x19F0 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x98D2DAD2E840E8DEDE40D0D2CED PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C39 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH31 0x6ADD7B2D3986FEDFF597B5D4E7C4C2FD38444AB9A885388A82164EB9B23464 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "172:7108:12:-:0;;;;;;;2008:10;1273:26:0;1269:95;;1297:1;172:7108:12;;2008:10;-1:-1:-1;;;;;;172:7108:12;;;;;;2008:10;-1:-1:-1;;;;;172:7108:12;;;;3052:40:0;;1297:1;3052:40;1857:1:7;;;172:7108:12;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;172:7108:12;;1297:1:0;1322:31;172:7108:12;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5502,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 5617,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 5524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Network": {
                  "entryPoint": 5988,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "access_calldata_tail_string_calldata": {
                  "entryPoint": 6319,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_and_zero_memory_struct_struct_Network": {
                  "entryPoint": 6640,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Network_dyn": {
                  "entryPoint": 6812,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 6555,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 6799,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 6835,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 6369,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 5824,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_MAX_NETWORKS_PER_QUERY": {
                  "entryPoint": 5589,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 5678,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 5791,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_21600": {
                  "entryPoint": 5736,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_21602": {
                  "entryPoint": 5764,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 7205,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getNetworksPaginated": {
                  "entryPoint": 6868,
                  "id": 3532,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "increment_uint256": {
                  "entryPoint": 6518,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_Network_dyn": {
                  "entryPoint": 6848,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 6141,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_bool": {
                  "entryPoint": 6306,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_Network": {
                  "entryPoint": 6695,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_3e76": {
                  "entryPoint": 6161,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6ca8": {
                  "entryPoint": 6571,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b1b0": {
                  "entryPoint": 6237,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf3": {
                  "entryPoint": 6451,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fac3": {
                  "entryPoint": 6080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 5632,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c908163217c682d146115635750806329c718b514610a095780633b9a80161461118f578063402ff0db14610fef57806350c0d41c14610b4c5780635290ffc614610aec57806352f51f8b146109ab5780635a29352d14610ace5780635a2f406f14610a435780636d65573f14610a09578063715018a6146109b057806371f7cd5b146109ab57806373f9a5d71461089257806379f0dc57146107d85780637b334154146107995780637bae8f5e1461074057806383c4b7a31461068e578063879ecf101461065d5780638bb0a17c146105ca5780638da5cb5b146105a157806395ea57171461053a578063c59d484714610475578063cc50764114610415578063d8b0e71614610386578063e1c7a8aa14610299578063ec13f2a114610268578063f2fde38b146101df5763fa9c81a41461015357600080fd5b346101da5760403660031901126101da57610172602435600435611ad4565b9060405190604082016040835281518091526060830190602060608260051b8601019301916000905b8282106101af578580868960208301520390f35b909192936020806101cc600193605f198a82030186528851611764565b96019201920190929161019b565b600080fd5b346101da5760203660031901126101da576101f861157e565b610200611c25565b6001600160a01b0316801561025257600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101da5760203660031901126101da576004356000526009602052602060ff604060002054166040519015158152f35b346101da5760403660031901126101da576102b261157e565b6024359033600052600260205260ff604060002054168015610372575b6102d8906117c0565b6002600154146103615760026001556001600160a01b0316906102fc821515611933565b610307811515611811565b8160005260076020526103206040600020918254611a8f565b90558060005260076020527f61a8b1a557e4d03803db90d13ff76db2c25fba3ed24882cecda8c8423b9b2be06020604060002054604051908152a260018055005b633ee5aeb560e01b60005260046000fd5b506000546001600160a01b031633146102cf565b346101da5760403660031901126101da5761039f61157e565b7fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f60206103ca6115f1565b926103d3611c25565b6001600160a01b0316926103e88415156119ab565b836000526002825261040a8160406000209060ff801983541691151516179055565b6040519015158152a2005b346101da5760003660031901126101da5733600052600260205260ff604060002054168015610461575b610448906117c0565b6020610455600454611976565b80600455604051908152f35b506000546001600160a01b0316331461043f565b346101da5760003660031901126101da576003546004549060008060015b838111156104ff575060015b848111156104c25750608093604051938452602084015260408301526060820152f35b80600052600660205260ff600460406000200154166104ea575b6104e590611976565b61049f565b916104f76104e591611976565b9290506104dc565b808352600560205260ff600460408520015416610525575b61052090611976565b610493565b9061053261052091611976565b919050610517565b346101da5760203660031901126101da576004356105566119f0565b5080600052600960205261057160ff6040600020541661185d565b600052600560205261059d6105896040600020611a27565b604051918291602083526020830190611764565b0390f35b346101da5760003660031901126101da576000546040516001600160a01b039091168152602090f35b346101da5760203660031901126101da5760043560005260056020526040600020805460018060a01b0360018301541691600281015461060c600383016116c0565b9161064760ff60048301541693600660058401549301549360405197889788526020880152604087015260e0606087015260e0860190611594565b921515608085015260a084015260c08301520390f35b346101da5760203660031901126101da57600435600052600a602052602060ff604060002054166040519015158152f35b346101da5760203660031901126101da5760043560005260066020526040600020805460018201549161073660018060a01b0360028301541691610728600382015460ff6004840154166106e4600585016116c0565b9160076106f3600687016116c0565b95015496604051998a998a5260208a0152604089015260608801521515608087015261010060a0870152610100860190611594565b9084820360c0860152611594565b9060e08301520390f35b346101da5760403660031901126101da5761075961157e565b6001600160a01b03166000908152600860205260409020805460243591908210156101da5760209161078a91611600565b90549060031b1c604051908152f35b346101da5760203660031901126101da576001600160a01b036107ba61157e565b166000526002602052602060ff604060002054166040519015158152f35b346101da5760203660031901126101da576001600160a01b036107f961157e565b16600052600860205260406000206040518060208354918281520190819360005260206000209060005b81811061087c575050508161083991038261169f565b6040519182916020830190602084525180915260408301919060005b818110610863575050500390f35b8251845285945060209384019390920191600101610855565b8254845260209093019260019283019201610823565b346101da5760403660031901126101da576004356001600160401b0381116101da57366023820112156101da5780600401356001600160401b0381116101da576024820191602436918360051b0101116101da576108ee6115f1565b6108f6611c25565b8015159060005b83811061090657005b60019061092f6001600160a01b0361092761092284898b61199b565b6117fd565b1615156119ab565b818060a01b0361094361092283888a61199b565b1660005260026020526109668360406000209060ff801983541691151516179055565b818060a01b0361097a61092283888a61199b565b167fd6fc3082ae3a144ca59421d96180398241c1dd021d45d5a24fb5bf96c9f8212f6020604051878152a2016108fd565b6115d5565b346101da5760003660031901126101da576109c9611c25565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101da5760203660031901126101da576001600160a01b03610a2a61157e565b1660005260076020526020604060002054604051908152f35b346101da5760203660031901126101da57600435610a5f611c25565b806000526009602052610a7960ff6040600020541661185d565b600081815260056020526040812060048101805460ff19169055426006820155600101546001600160a01b031691907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c9080a3005b346101da5760003660031901126101da576020600454604051908152f35b346101da5760003660031901126101da5733600052600260205260ff604060002054168015610b38575b610b1f906117c0565b6020610b2c600354611976565b80600355604051908152f35b506000546001600160a01b03163314610b16565b346101da5760403660031901126101da576024356004356001600160401b0382116101da57816004019160e060031982360301126101da5733600052600260205260ff604060002054168015610fdb575b610ba6906117c0565b8115610fa1576024810190610bcd6001600160a01b03610bc5846117fd565b161515611933565b6044810135938415610f5c5760648201610be781836118af565b905015610f2057846000526009602052608460ff604060002054161593610c23610c1a610c13886117fd565b94866118af565b939092016118a2565b908515610f085742925b60405195610c3a87611684565b3586526001600160a01b0390941660208601908152604086018a815290946001600160401b038111610e395760405192610c7e601f8301601f19166020018561169f565b81845236828201116101da57816000926020928387013784010152606086019182529115156080860190815260a086019384524260c0870190815260008a81526005602052604090209651875594516001870180546001600160a01b0319166001600160a01b03929092169190911790559151600286015551805160038601916001600160401b038211610e3957610d2082610d1a855461162e565b856118e1565b602090601f8311600114610e985782600697969593610d769593610d5b93600092610e8d575b50508160011b916000199060031b1c19161790565b90555b511515600486019060ff801983541691151516179055565b5160058401555191015515610e4f576000828152600960205260409020805460ff191660011790556001600160a01b03610daf826117fd565b16600052600860205260406000209081549068010000000000000000821015610e3957610e05827f3a3ee326dd9451112d67d1babdaf697562d06e41e2571ddd356b4e9be0de478e946001602095018155611600565b815460001960039290921b91821b19169086901b1790556001600160a01b0390610e2e906117fd565b1693604051908152a3005b634e487b7160e01b600052604160045260246000fd5b9091506001600160a01b0390610e64906117fd565b16907f14796949d4d1a6824063ec05e354db666bde3356a8cf646c6075272b5353185c600080a3005b015190508e80610d46565b90601f1983169184600052816000209260005b818110610ef0575092600192859260069a999896610d76989610610ed7575b505050811b019055610d5e565b015160001960f88460031b161c191690558d8080610eca565b92936020600181928786015181550195019301610eab565b87600052600560205260056040600020015492610c2d565b60405162461bcd60e51b8152602060048201526014602482015273135bdb99dbd1185d185251081c995c5d5a5c995960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b995d1ddbdc9ac8125160721b6044820152606490fd5b506000546001600160a01b03163314610b9d565b346101da5760203660031901126101da57600435600060e060405161101381611668565b828152826020820152826040820152826060820152826080820152606060a0820152606060c0820152015280600052600a60205260ff6040600020541615611151576000526006602052604060002060405161106e81611668565b815481526001820154916020820192835261114560018060a01b03600283015416916040840192835261113260038201546060860190815260ff6004840154166080870190151581526110c3600585016116c0565b9160a0880192835260076110d9600687016116c0565b9560c08a0196875201549660e08901978852604051998a9960208b525160208b01525160408a015260018060a01b03905116606089015251608088015251151560a08701525161010060c0870152610120860190611594565b9051848203601f190160e0860152611594565b90516101008301520390f35b60405162461bcd60e51b815260206004820152601660248201527514d95cdcda5bdb88191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b346101da5760403660031901126101da576024356004356001600160401b0382116101da578160040161010060031984360301126101da5733600052600260205260ff60406000205416801561154f575b6111e9906117c0565b81156115155760448301906001600160a01b03611205836117fd565b16156114d05760648401359361121c851515611811565b60248101359182600052600960205261123c60ff6040600020541661185d565b84600052600660205260406000209281358455600184015561125d846117fd565b6002840180546001600160a01b0319166001600160a01b03909216919091179055600383018690556112a9611294608484016118a2565b600485019060ff801983541691151516179055565b600583016112ba60a48401836118af565b906001600160401b038211610e39576112d782610d1a855461162e565b600090601f831160011461146c576113079291600091836114615750508160011b916000199060031b1c19161790565b90555b61131c600684019160c48401906118af565b906001600160401b038211610e395761133982610d1a855461162e565b600090601f83116001146113d25793602095936113958460079560e4957f6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c89b996000926113c75750508160011b916000199060031b1c19161790565b90555b01359101556000848152600a835260409020805460ff191660011790556001600160a01b0390610e2e906117fd565b013590508d80610d46565b8382526020822091601f198416815b81811061144957508460e4947f6d8d8fde140edbf6c26881f091850cb55bae733f801e9e4f9b7d123b88b620c89a989460209a98946007986001951061142f575b505050811b019055611398565b0135600019600384901b60f8161c191690558c8080611422565b919360206001819287870135815501950192016113e1565b013590508a80610d46565b8382526020822091601f198416815b8181106114b8575090846001959493921061149e575b505050811b01905561130a565b0135600019600384901b60f8161c19169055898080611491565b9193602060018192878701358155019501920161147b565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796d656e7420616464726573730000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081cd95cdcda5bdb88125160721b6044820152606490fd5b506000546001600160a01b031633146111e0565b346101da5760003660031901126101da576020906003548152f35b600435906001600160a01b03821682036101da57565b919082519283825260005b8481106115c0575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161159f565b346101da5760003660031901126101da57602060405160648152f35b6024359081151582036101da57565b80548210156116185760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561165e575b602083101461164857565b634e487b7160e01b600052602260045260246000fd5b91607f169161163d565b61010081019081106001600160401b03821117610e3957604052565b60e081019081106001600160401b03821117610e3957604052565b90601f801991011681019081106001600160401b03821117610e3957604052565b90604051918260008254926116d48461162e565b808452936001811690811561174257506001146116fb575b506116f99250038361169f565b565b90506000929192526020600020906000915b8183106117265750509060206116f992820101386116ec565b602091935080600191548385890101520191019091849261170d565b9050602092506116f994915060ff191682840152151560051b820101386116ec565b908151815260018060a01b0360208301511660208201526040820151604082015260c0806117a1606085015160e0606086015260e0850190611594565b9360808101511515608085015260a081015160a0850152015191015290565b156117c757565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b356001600160a01b03811681036101da5790565b1561181857565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b1561186457565b60405162461bcd60e51b815260206004820152601660248201527513995d1ddbdc9ac8191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b3580151581036101da5790565b903590601e19813603018212156101da57018035906001600160401b0382116101da576020019181360383136101da57565b601f82116118ee57505050565b6000526020600020906020601f840160051c83019310611929575b601f0160051c01905b81811061191d575050565b60008155600101611912565b9091508190611909565b1561193a57565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420686f7374206164647265737360601b6044820152606490fd5b60001981146119855760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156116185760051b0190565b156119b257565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642063616c6c6572206164647265737360501b6044820152606490fd5b604051906119fd82611684565b600060c0838281528260208201528260408201526060808201528260808201528260a08201520152565b90604051611a3481611684565b8254815260018301546001600160a01b031660208201526002830154604082015291829060c090600690611a6a600382016116c0565b606085015260ff60048201541615156080850152600581015460a08501520154910152565b9190820180921161198557565b6001600160401b038111610e395760051b60200190565b9190820391821161198557565b80518210156116185760209160051b010190565b91909160648311611bef576003549283821015611bb357611af59082611a8f565b838111611bac575b611b078282611ab3565b91611b1183611a9c565b92611b1f604051948561169f565b808452611b2e601f1991611a9c565b0160005b818110611b95575050805b828110611b4b575050509190565b6001810190818111611985576001916000526005602052611b8e6040600020611b7d611b778685611ab3565b91611a27565b611b878289611ac0565b5286611ac0565b5001611b3d565b602090611ba06119f0565b82828801015201611b32565b5082611afd565b50506040516000611bc560208361169f565b81526000805b818110611bd85750509190565b602090611be36119f0565b82828601015201611bcb565b60405162461bcd60e51b815260206004820152600e60248201526d098d2dad2e840e8dede40d0d2ced60931b6044820152606490fd5b6000546001600160a01b03163303611c3957565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220ca7e6add7b2d3986fedff597b5d4e7c4c2fd38444ab9a885388a82164eb9b23464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x217C682D EQ PUSH2 0x1563 JUMPI POP DUP1 PUSH4 0x29C718B5 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x3B9A8016 EQ PUSH2 0x118F JUMPI DUP1 PUSH4 0x402FF0DB EQ PUSH2 0xFEF JUMPI DUP1 PUSH4 0x50C0D41C EQ PUSH2 0xB4C JUMPI DUP1 PUSH4 0x5290FFC6 EQ PUSH2 0xAEC JUMPI DUP1 PUSH4 0x52F51F8B EQ PUSH2 0x9AB JUMPI DUP1 PUSH4 0x5A29352D EQ PUSH2 0xACE JUMPI DUP1 PUSH4 0x5A2F406F EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0x6D65573F EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9B0 JUMPI DUP1 PUSH4 0x71F7CD5B EQ PUSH2 0x9AB JUMPI DUP1 PUSH4 0x73F9A5D7 EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x79F0DC57 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x7B334154 EQ PUSH2 0x799 JUMPI DUP1 PUSH4 0x7BAE8F5E EQ PUSH2 0x740 JUMPI DUP1 PUSH4 0x83C4B7A3 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x879ECF10 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x8BB0A17C EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x95EA5717 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xC59D4847 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xCC507641 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xD8B0E716 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xE1C7A8AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xEC13F2A1 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DF JUMPI PUSH4 0xFA9C81A4 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x172 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1AF JUMPI DUP6 DUP1 DUP7 DUP10 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x1CC PUSH1 0x1 SWAP4 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1764 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x1F8 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x200 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x2B2 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x372 JUMPI JUMPDEST PUSH2 0x2D8 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x361 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2FC DUP3 ISZERO ISZERO PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x307 DUP2 ISZERO ISZERO PUSH2 0x1811 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x320 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH32 0x61A8B1A557E4D03803DB90D13FF76DB2C25FBA3ED24882CECDA8C8423B9B2BE0 PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CF JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x39F PUSH2 0x157E JUMP JUMPDEST PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH2 0x3CA PUSH2 0x15F1 JUMP JUMPDEST SWAP3 PUSH2 0x3D3 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0x3E8 DUP5 ISZERO ISZERO PUSH2 0x19AB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x40A DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x461 JUMPI JUMPDEST PUSH2 0x448 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x455 PUSH1 0x4 SLOAD PUSH2 0x1976 JUMP JUMPDEST DUP1 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43F JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4FF JUMPI POP PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI POP PUSH1 0x80 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x4EA JUMPI JUMPDEST PUSH2 0x4E5 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST SWAP2 PUSH2 0x4F7 PUSH2 0x4E5 SWAP2 PUSH2 0x1976 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x4DC JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND PUSH2 0x525 JUMPI JUMPDEST PUSH2 0x520 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST SWAP1 PUSH2 0x532 PUSH2 0x520 SWAP2 PUSH2 0x1976 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x517 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x556 PUSH2 0x19F0 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x571 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x59D PUSH2 0x589 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1764 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x60C PUSH1 0x3 DUP4 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH2 0x647 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x736 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x728 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH2 0x6E4 PUSH1 0x5 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH1 0x7 PUSH2 0x6F3 PUSH1 0x6 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP6 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1594 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x759 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x20 SWAP2 PUSH2 0x78A SWAP2 PUSH2 0x1600 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7BA PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7F9 PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x87C JUMPI POP POP POP DUP2 PUSH2 0x839 SWAP2 SUB DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x863 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x855 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x823 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DA JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1DA JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DA JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1DA JUMPI PUSH2 0x8EE PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0x1C25 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x906 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x92F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x927 PUSH2 0x922 DUP5 DUP10 DUP12 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x19AB JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x943 PUSH2 0x922 DUP4 DUP9 DUP11 PUSH2 0x199B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x966 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x97A PUSH2 0x922 DUP4 DUP9 DUP11 PUSH2 0x199B JUMP JUMPDEST AND PUSH32 0xD6FC3082AE3A144CA59421D96180398241C1DD021D45D5A24FB5BF96C9F8212F PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH2 0x9C9 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA2A PUSH2 0x157E JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA5F PUSH2 0x1C25 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0xA79 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C SWAP1 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xB38 JUMPI JUMPDEST PUSH2 0xB1F SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xB2C PUSH1 0x3 SLOAD PUSH2 0x1976 JUMP JUMPDEST DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB16 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x4 ADD SWAP2 PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xFDB JUMPI JUMPDEST PUSH2 0xBA6 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH2 0xBCD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBC5 DUP5 PUSH2 0x17FD JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xF5C JUMPI PUSH1 0x64 DUP3 ADD PUSH2 0xBE7 DUP2 DUP4 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0xF20 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x84 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP4 PUSH2 0xC23 PUSH2 0xC1A PUSH2 0xC13 DUP9 PUSH2 0x17FD JUMP JUMPDEST SWAP5 DUP7 PUSH2 0x18AF JUMP JUMPDEST SWAP4 SWAP1 SWAP3 ADD PUSH2 0x18A2 JUMP JUMPDEST SWAP1 DUP6 ISZERO PUSH2 0xF08 JUMPI TIMESTAMP SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0xC3A DUP8 PUSH2 0x1684 JUMP JUMPDEST CALLDATALOAD DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD DUP11 DUP2 MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC7E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x169F JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE DUP3 DUP3 ADD GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 DUP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 DUP5 MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x3 DUP7 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0xD20 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST DUP6 PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE98 JUMPI DUP3 PUSH1 0x6 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0xD76 SWAP6 SWAP4 PUSH2 0xD5B SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xE8D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ISZERO PUSH2 0xE4F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDAF DUP3 PUSH2 0x17FD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE05 DUP3 PUSH32 0x3A3EE326DD9451112D67D1BABDAF697562D06E41E2571DDD356B4E9BE0DE478E SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0x1600 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE2E SWAP1 PUSH2 0x17FD JUMP JUMPDEST AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE64 SWAP1 PUSH2 0x17FD JUMP JUMPDEST AND SWAP1 PUSH32 0x14796949D4D1A6824063EC05E354DB666BDE3356A8CF646C6075272B5353185C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xD46 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF0 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x6 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0xD76 SWAP9 SWAP7 LT PUSH2 0xED7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD5E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0xECA JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEAB JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135BDB99DBD1185D185251081C995C5D5A5C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081B995D1DDBDC9AC81251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9D JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x1013 DUP2 PUSH2 0x1668 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x106E DUP2 PUSH2 0x1668 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH2 0x1145 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH2 0x1132 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x80 DUP8 ADD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH2 0x10C3 PUSH1 0x5 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 PUSH2 0x10D9 PUSH1 0x6 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP6 PUSH1 0xC0 DUP11 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP7 PUSH1 0xE0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0x20 DUP12 MSTORE MLOAD PUSH1 0x20 DUP12 ADD MSTORE MLOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x60 DUP10 ADD MSTORE MLOAD PUSH1 0x80 DUP9 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH2 0x100 PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP1 MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1594 JUMP JUMPDEST SWAP1 MLOAD PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95CDCDA5BDB88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI DUP2 PUSH1 0x4 ADD PUSH2 0x100 PUSH1 0x3 NOT DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x1DA JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x154F JUMPI JUMPDEST PUSH2 0x11E9 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1515 JUMPI PUSH1 0x44 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1205 DUP4 PUSH2 0x17FD JUMP JUMPDEST AND ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x64 DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0x121C DUP6 ISZERO ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x24 DUP2 ADD CALLDATALOAD SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x123C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x185D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP2 CALLDATALOAD DUP5 SSTORE PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x125D DUP5 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP7 SWAP1 SSTORE PUSH2 0x12A9 PUSH2 0x1294 PUSH1 0x84 DUP5 ADD PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0x12BA PUSH1 0xA4 DUP5 ADD DUP4 PUSH2 0x18AF JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0x12D7 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x146C JUMPI PUSH2 0x1307 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1461 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH2 0x131C PUSH1 0x6 DUP5 ADD SWAP2 PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE39 JUMPI PUSH2 0x1339 DUP3 PUSH2 0xD1A DUP6 SLOAD PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x13D2 JUMPI SWAP4 PUSH1 0x20 SWAP6 SWAP4 PUSH2 0x1395 DUP5 PUSH1 0x7 SWAP6 PUSH1 0xE4 SWAP6 PUSH32 0x6D8D8FDE140EDBF6C26881F091850CB55BAE733F801E9E4F9B7D123B88B620C8 SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x13C7 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD CALLDATALOAD SWAP2 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE2E SWAP1 PUSH2 0x17FD JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP14 DUP1 PUSH2 0xD46 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI POP DUP5 PUSH1 0xE4 SWAP5 PUSH32 0x6D8D8FDE140EDBF6C26881F091850CB55BAE733F801E9E4F9B7D123B88B620C8 SWAP11 SWAP9 SWAP5 PUSH1 0x20 SWAP11 SWAP9 SWAP5 PUSH1 0x7 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x142F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1398 JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1422 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x13E1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP11 DUP1 PUSH2 0xD46 JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x14B8 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x149E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x130A JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1491 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081CD95CDCDA5BDB881251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1DA JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x15C0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x159F JUMP JUMPDEST CALLVALUE PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1DA JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x165E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1648 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE39 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x16D4 DUP5 PUSH2 0x162E JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1742 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16FB JUMPI JUMPDEST POP PUSH2 0x16F9 SWAP3 POP SUB DUP4 PUSH2 0x169F JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1726 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x16F9 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x16F9 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16EC JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x17A1 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1594 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x17C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1DA JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13995D1DDBDC9AC8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1DA JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DA JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DA JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DA JUMPI JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x18EE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1929 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x191D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST ISZERO PUSH2 0x193A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420686F73742061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1985 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19B2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642063616C6C65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19FD DUP3 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1A34 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x1A6A PUSH1 0x3 DUP3 ADD PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1985 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE39 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1985 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x64 DUP4 GT PUSH2 0x1BEF JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 DUP3 LT ISZERO PUSH2 0x1BB3 JUMPI PUSH2 0x1AF5 SWAP1 DUP3 PUSH2 0x1A8F JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x1BAC JUMPI JUMPDEST PUSH2 0x1B07 DUP3 DUP3 PUSH2 0x1AB3 JUMP JUMPDEST SWAP2 PUSH2 0x1B11 DUP4 PUSH2 0x1A9C JUMP JUMPDEST SWAP3 PUSH2 0x1B1F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x169F JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1B2E PUSH1 0x1F NOT SWAP2 PUSH2 0x1A9C JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B95 JUMPI POP POP DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B4B JUMPI POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1985 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1B8E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1B7D PUSH2 0x1B77 DUP7 DUP6 PUSH2 0x1AB3 JUMP JUMPDEST SWAP2 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1B87 DUP3 DUP10 PUSH2 0x1AC0 JUMP JUMPDEST MSTORE DUP7 PUSH2 0x1AC0 JUMP JUMPDEST POP ADD PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BA0 PUSH2 0x19F0 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1B32 JUMP JUMPDEST POP DUP3 PUSH2 0x1AFD JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x1BC5 PUSH1 0x20 DUP4 PUSH2 0x169F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BD8 JUMPI POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BE3 PUSH2 0x19F0 JUMP JUMPDEST DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x98D2DAD2E840E8DEDE40D0D2CED PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C39 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH31 0x6ADD7B2D3986FEDFF597B5D4E7C4C2FD38444AB9A885388A82164EB9B23464 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "172:7108:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;172:7108:12;2627:22:0;;2623:91;;172:7108:12;;;-1:-1:-1;;;;;;172:7108:12;;;;;;-1:-1:-1;;;;;172:7108:12;;3052:40:0;;172:7108:12;3052:40:0;172:7108:12;2623:91:0;2672:31;;;172:7108:12;2672:31:0;172:7108:12;;;;;2672:31:0;172:7108:12;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;1323:45;172:7108;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;:::i;:::-;;;1482:10;;172:7108;;1467:14;172:7108;;;;;;;;1467:51;;;;172:7108;1459:78;;;:::i;:::-;1467:14;172:7108;;2702:18:7;2698:86;;1467:14:12;172:7108;;-1:-1:-1;;;;;172:7108:12;;5847:58;5855:25;;;5847:58;:::i;:::-;5915:52;5923:10;;;5915:52;:::i;:::-;172:7108;;;5986:12;172:7108;;5986:35;172:7108;;;;;;5986:35;:::i;:::-;172:7108;;;;;5986:12;172:7108;;6036:59;172:7108;;;;;;;;;;6036:59;172:7108;;;;2698:86:7;2743:30;;;172:7108:12;2743:30:7;172:7108:12;;2743:30:7;1467:51:12;-1:-1:-1;172:7108:12;;-1:-1:-1;;;;;172:7108:12;1482:10;1497:21;1467:51;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;;;:::i;:::-;2226:37;172:7108;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;172:7108:12;;2113:56;2121:21;;;2113:56;:::i;:::-;172:7108;;;2179:14;172:7108;;2179:32;172:7108;;;;;;;;;;;;;;;;;;;2179:32;172:7108;;;;;;;2226:37;172:7108;;;;;;;-1:-1:-1;;172:7108:12;;;;1482:10;172:7108;;1467:14;172:7108;;;;;;;;1467:51;;;;172:7108;1459:78;;;:::i;:::-;172:7108;4999:18;172:7108;;4999:18;:::i;:::-;172:7108;;;;;;;;;1467:51;-1:-1:-1;172:7108:12;;-1:-1:-1;;;;;172:7108:12;1482:10;1497:21;1467:51;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;6473:16;172:7108;;;;;;6605:1;6608:21;;;;;;;6750:13;6605:1;6765:21;;;;;;;172:7108;;;;;;;;;;;;;;;;;;;;;6788:3;172:7108;;;6811:8;172:7108;;;;;;;6811:18;172:7108;;6807:73;;6788:3;;;;:::i;:::-;6750:13;;6807:73;6849:16;;6788:3;6849:16;;:::i;:::-;6807:73;;;;;6631:3;172:7108;;;6654:8;172:7108;;;;;;;6654:20;172:7108;;6650:75;;6631:3;;;;:::i;:::-;6593:13;;6650:75;6694:16;;6631:3;6694:16;;:::i;:::-;6650:75;;;;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;:::i;:::-;;;;;3966:13;172:7108;;3958:52;172:7108;;;;;;3958:52;:::i;:::-;172:7108;;4027:8;172:7108;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;1067:43;172:7108;;;;;;;;;;;;;1067:43;;172:7108;;1067:43;;;;172:7108;1067:43;;;;;:::i;:::-;;172:7108;;;1067:43;;172:7108;;1067:43;;;;;172:7108;1067:43;;172:7108;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;1374:45;172:7108;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;1116:43;172:7108;;;;;;;;1116:43;;172:7108;;;;;;;;1116:43;;;172:7108;;1116:43;172:7108;1116:43;;;172:7108;;;1116:43;;172:7108;;1116:43;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;172:7108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;:::i;:::-;-1:-1:-1;;;;;172:7108:12;;;;;1266:51;172:7108;;;;;;;;;;;1266:51;;;;;172:7108;1266:51;;;;:::i;:::-;172:7108;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;-1:-1:-1;;;;;172:7108:12;;:::i;:::-;;;;840:46;172:7108;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;-1:-1:-1;;;;;172:7108:12;;:::i;:::-;;;;4840:14;172:7108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;172:7108:12;;;;;2445:19;;;;;;172:7108;2466:3;172:7108;;2485:60;-1:-1:-1;;;;;2493:11:12;;172:7108;2493:11;;;:::i;:::-;;:::i;:::-;172:7108;2493:25;;2485:60;:::i;:::-;172:7108;;;;;2574:11;;;;;;:::i;:::-;172:7108;;;2559:14;172:7108;;2559:36;172:7108;;;;;;;;;;;;;;;;;;;2559:36;172:7108;;;;;2635:11;;;;;;:::i;:::-;172:7108;2614:41;172:7108;;;;;;2614:41;172:7108;2430:13;;172:7108;;:::i;:::-;;;;;;-1:-1:-1;;172:7108:12;;;;1500:62:0;;:::i;:::-;172:7108:12;;;-1:-1:-1;;;;;;172:7108:12;;;;-1:-1:-1;;;;;172:7108:12;3052:40:0;172:7108:12;;3052:40:0;172:7108:12;;;;;;;-1:-1:-1;;172:7108:12;;;;-1:-1:-1;;;;;172:7108:12;;:::i;:::-;;;;6203:12;172:7108;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;1500:62:0;;:::i;:::-;172:7108:12;;;7044:13;172:7108;;7036:59;172:7108;;;;;;7036:59;:::i;:::-;172:7108;;;;7105:8;172:7108;;;;;;7105:28;;172:7108;;-1:-1:-1;;172:7108:12;;;7183:15;7151:29;;;172:7108;-1:-1:-1;7239:31:12;172:7108;-1:-1:-1;;;;;172:7108:12;;;7213:58;;172:7108;7213:58;172:7108;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;1482:10;172:7108;;1467:14;172:7108;;;;;;;;1467:51;;;;172:7108;1459:78;;;:::i;:::-;172:7108;2797:18;;172:7108;2797:18;:::i;:::-;172:7108;2797:18;172:7108;;;;;;;1467:51;-1:-1:-1;172:7108:12;;-1:-1:-1;;;;;172:7108:12;1482:10;1497:21;1467:51;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;;;1482:10;172:7108;;1467:14;172:7108;;;;;;;;1467:51;;;;172:7108;1459:78;;;:::i;:::-;2921:6;;172:7108;;;2968:15;;;2960:62;-1:-1:-1;;;;;2968:15:12;;;:::i;:::-;172:7108;2968:29;;2960:62;:::i;:::-;3040:19;;;172:7108;3040:23;;;172:7108;;3120:15;;;;;;;:::i;:::-;3114:33;;;172:7108;;;;;3204:13;172:7108;;3445:12;172:7108;;;;;;3203:18;3314:15;3445:12;3406:15;3314;;;:::i;:::-;3406;;;:::i;:::-;3445:12;;;;;:::i;:::-;3482:55;;;;;3497:15;3482:55;;172:7108;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;172:7108:12;;;;3255:333;;172:7108;;;;3255:333;;172:7108;;;3255:333;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3120:15;3255:333;;172:7108;;;;;;3445:12;3255:333;;172:7108;;;3255:333;;;172:7108;;;3562:15;3255:333;;;172:7108;;;-1:-1:-1;172:7108:12;;;3240:8;172:7108;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;172:7108:12;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;1467:14;172:7108;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3240:8;172:7108;;;;;;;3599:266;;;172:7108;;;;3204:13;172:7108;;;;;;;-1:-1:-1;;172:7108:12;;;;;-1:-1:-1;;;;;3684:15:12;;;:::i;:::-;172:7108;;;3669:14;172:7108;;;;;;;;;;;;;;;;;3728:55;172:7108;;;;;;;;:::i;:::-;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;3746:15;;;:::i;:::-;172:7108;;;;;;;3728:55;172:7108;;;;;;;;;;;;;3599:266;172:7108;;-1:-1:-1;;;;;;172:7108:12;3838:15;;;:::i;:::-;172:7108;3819:35;;172:7108;3819:35;;172:7108;;;;;-1:-1:-1;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3482:55;172:7108;;;3515:8;172:7108;;3515:8;172:7108;;;3515:22;172:7108;3482:55;;;172:7108;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;3040:19:12;172:7108;;;3120:15;;172:7108;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;3040:19;172:7108;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;1467:51;-1:-1:-1;172:7108:12;;-1:-1:-1;;;;;172:7108:12;1482:10;1497:21;1467:51;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5626:13;172:7108;;;;;;;;;;;;;5687:8;172:7108;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5687:8;172:7108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;172:7108:12;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;;1482:10;172:7108;;1467:14;172:7108;;;;;;;;1467:51;;;;172:7108;1459:78;;;:::i;:::-;5127:6;;172:7108;;5174:22;;;;-1:-1:-1;;;;;5174:22:12;;;:::i;:::-;172:7108;5174:36;172:7108;;5256:14;;;172:7108;5256:18;5248:60;5256:18;;;5248:60;:::i;:::-;172:7108;5340:17;;172:7108;;;;;5326:13;172:7108;;5318:67;172:7108;;;;;;5318:67;:::i;:::-;172:7108;;;5396:8;172:7108;;;;;;;;;;;;;;;;;:::i;:::-;1467:14;172:7108;;;;-1:-1:-1;;;;;;172:7108:12;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5396:8;172:7108;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5467:57;172:7108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5428:13;172:7108;;;;;;;-1:-1:-1;;172:7108:12;;;;;-1:-1:-1;;;;;172:7108:12;5485:22;;;:::i;172:7108::-;;;;-1:-1:-1;172:7108:12;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;5467:57;172:7108;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:7108:12;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;5174:22;172:7108;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;1467:51;-1:-1:-1;172:7108:12;;-1:-1:-1;;;;;172:7108:12;1482:10;1497:21;1467:51;;172:7108;;;;;;-1:-1:-1;;172:7108:12;;;;;;939:31;172:7108;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;322:3;172:7108;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;172:7108:12;;-1:-1:-1;172:7108:12;;;-1:-1:-1;172:7108:12;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;:::o;:::-;;;;;;-1:-1:-1;172:7108:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;172:7108:12;;;;;-1:-1:-1;172:7108:12;;-1:-1:-1;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;172:7108:12;;-1:-1:-1;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;172:7108:12;;;;;;;;;-1:-1:-1;172:7108:12;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;-1:-1:-1;;172:7108:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;172:7108:12;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;172:7108:12;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;4052:678::-;;;;322:3;4210:31;;172:7108;;4287:16;172:7108;4317:15;;;;;4313:78;;4415:14;;;;:::i;:::-;4443:11;;;4439:53;;4052:678;4542:12;;;;:::i;:::-;4528:27;172:7108;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;172:7108:12;;;;;;4570:18;;;4590:7;;;;;;4701:22;;;;4052:678;:::o;4599:3::-;4652:1;172:7108;;;;;;;;4652:1;172:7108;-1:-1:-1;172:7108:12;4639:8;172:7108;;4618:36;172:7108;-1:-1:-1;172:7108:12;;4625:10;;;;:::i;:::-;172:7108;;:::i;:::-;4618:36;;;;:::i;:::-;;;;:::i;:::-;;172:7108;4570:18;;172:7108;;;;;:::i;:::-;;;;;;;;;;4439:53;4470:11;;4439:53;;4313:78;-1:-1:-1;;172:7108:12;;-1:-1:-1;172:7108:12;;;;:::i;:::-;;;-1:-1:-1;;172:7108:12;;;;;;4348:32;;;;:::o;172:7108::-;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;;;;;;;;;-1:-1:-1;;;172:7108:12;;;;322:3;;172:7108;1796:162:0;1710:6;172:7108:12;-1:-1:-1;;;;;172:7108:12;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:5;1901:40:0;172:7108:12;;1710:6:0;1901:40"
            },
            "methodIdentifiers": {
              "MAX_NETWORKS_PER_QUERY()": "52f51f8b",
              "MAX_SESSIONS_PER_QUERY()": "71f7cd5b",
              "allowedCallers(address)": "7b334154",
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "getHostEarnings(address)": "6d65573f",
              "getHostNetworks(address)": "79f0dc57",
              "getNetwork(uint256)": "95ea5717",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getSession(uint256)": "402ff0db",
              "getStats()": "c59d4847",
              "hostEarnings(address)": "29c718b5",
              "hostNetworkIds(address,uint256)": "7bae8f5e",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "incrementNetworkId()": "5290ffc6",
              "incrementSessionId()": "cc507641",
              "networkExists(uint256)": "ec13f2a1",
              "networkIdCounter()": "217c682d",
              "networks(uint256)": "8bb0a17c",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "sessionExists(uint256)": "879ecf10",
              "sessionIdCounter()": "5a29352d",
              "sessions(uint256)": "83c4b7a3",
              "setAllowedCaller(address,bool)": "d8b0e716",
              "setAllowedCallers(address[],bool)": "73f9a5d7",
              "setNetwork(uint256,(uint256,address,uint256,string,bool,uint256,uint256))": "50c0d41c",
              "setSession(uint256,(uint256,uint256,address,uint256,bool,string,string,uint256))": "3b9a8016",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AllowedCallerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"name\":\"HostEarningsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"}],\"name\":\"NetworkStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SessionStored\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_NETWORKS_PER_QUERY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SESSIONS_PER_QUERY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSession\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSessions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeSessions\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hostNetworkIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementSessionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sessionIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"net\",\"type\":\"tuple\"}],\"name\":\"setNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"session\",\"type\":\"tuple\"}],\"name\":\"setSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetStorage.sol\":\"ZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]}},\"version\":1}"
        }
      },
      "contracts/ZaaNetVoucher.sol": {
        "ZaaNetVoucher": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdtToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasuryWallet",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_zaaNetStorage",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "VoucherPurchased",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                }
              ],
              "name": "buyVoucher",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newTreasury",
                  "type": "address"
                }
              ],
              "name": "updateTreasuryWallet",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "usdt",
              "outputs": [
                {
                  "internalType": "contract TestUSDT",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "zaaNetStorage",
              "outputs": [
                {
                  "internalType": "contract ZaaNetStorage",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 304,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461011557601f61087d38819003918201601f19168301916001600160401b0383118484101761011a578084926060946040528339810103126101155761004781610130565b90610060604061005960208401610130565b9201610130565b90600160005533156100ff5760018054336001600160a01b0319821681179092556040519491906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600280546001600160a01b03199081166001600160a01b03938416179091556003805482169383169390931790925560048054909216921691909117905561073890816101458239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101155756fe608080604052600436101561001357600080fd5b60003560e01c9081632f48ab7d1461065a5750806345891680146102625780634626402b146102395780634d59f94c14610210578063715018a6146101b3578063809d458d1461012f5780638da5cb5b146101065763f2fde38b1461007757600080fd5b346101015760203660031901126101015761009061067e565b6100986106d9565b6001600160a01b031680156100eb57600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610101576000366003190112610101576001546040516001600160a01b039091168152602090f35b346101015760203660031901126101015761014861067e565b6101506106d9565b6001600160a01b0316801561017c576bffffffffffffffffffffffff60a01b6003541617600355600080f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610101576000366003190112610101576101cc6106d9565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610101576000366003190112610101576004546040516001600160a01b039091168152602090f35b34610101576000366003190112610101576003546040516001600160a01b039091168152602090f35b34610101576060366003190112610101576024356004356044356001600160a01b0381169081900361010157600260005414610649576024926002600055600060018060a01b0360045416604051958680926395ea571760e01b82528760048301525afa9384156103f3576000946104d8575b5090919260808101511561049b576040015181111561043c5781156103ff576002546003546040516323b872dd60e01b8152600481018590526001600160a01b039182166024820152604481018490529160209183916064918391600091165af19081156103f3576000916103b9575b50156103825760407f1885e69698a7feb1996880dc751e52fa84140b158c769239d0e04ec35564096f918151908152426020820152a36001600055005b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b90506020813d6020116103eb575b816103d460209383610694565b81010312610101576103e5906106cc565b84610345565b3d91506103c7565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206275796572206164647265737360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152603160248201527f416d6f756e74206d7573742062652067726561746572207468616e2074686520604482015270383934b1b2903832b91039b2b9b9b4b7b760791b6064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6574776f726b206973206e6f742061637469766560581b6044820152606490fd5b3d8086833e6104e78183610694565b8101906020818303126106415780519067ffffffffffffffff8211610645570160e081830312610641576040519160e0830183811067ffffffffffffffff82111761062d576040528151835260208201516001600160a01b038116810361062957602084015260408201516040840152606082015167ffffffffffffffff81116106295782019681601f8901121561062657875167ffffffffffffffff811161061257604051926105a2601f8301601f191660200185610694565b8184526020828b01011161060e57815b8181106105f9575060c09495969798506020908301015260608401526105da608082016106cc565b608084015260a081015160a0840152015160c0820152929190846102d5565b80602080928c010151828287010152016105b2565b5080fd5b634e487b7160e01b82526041600452602482fd5b80fd5b8780fd5b634e487b7160e01b88526041600452602488fd5b8580fd5b8680fd5b633ee5aeb560e01b60005260046000fd5b34610101576000366003190112610101576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361010157565b90601f8019910116810190811067ffffffffffffffff8211176106b657604052565b634e487b7160e01b600052604160045260246000fd5b5190811515820361010157565b6001546001600160a01b031633036106ed57565b63118cdaa760e01b6000523360045260246000fdfea264697066735822122002da70628edb522e421030ecf4302a0644f69eec779a66accec053c18167b63f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x115 JUMPI PUSH1 0x1F PUSH2 0x87D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x115 JUMPI PUSH2 0x47 DUP2 PUSH2 0x130 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP3 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x0 SSTORE CALLER ISZERO PUSH2 0xFF JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x738 SWAP1 DUP2 PUSH2 0x145 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x115 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F48AB7D EQ PUSH2 0x65A JUMPI POP DUP1 PUSH4 0x45891680 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4D59F94C EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x809D458D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x90 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x98 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x148 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x150 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x17C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x1CC PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x101 JUMPI PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x649 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x4D8 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x49B JUMPI PUSH1 0x40 ADD MLOAD DUP2 GT ISZERO PUSH2 0x43C JUMPI DUP2 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3B9 JUMPI JUMPDEST POP ISZERO PUSH2 0x382 JUMPI PUSH1 0x40 PUSH32 0x1885E69698A7FEB1996880DC751E52FA84140B158C769239D0E04EC35564096F SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3EB JUMPI JUMPDEST DUP2 PUSH2 0x3D4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x694 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x101 JUMPI PUSH2 0x3E5 SWAP1 PUSH2 0x6CC JUMP JUMPDEST DUP5 PUSH2 0x345 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642062757965722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x383934B1B2903832B91039B2B9B9B4B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6574776F726B206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E7 DUP2 DUP4 PUSH2 0x694 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x645 JUMPI ADD PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x62D JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x629 JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x629 JUMPI DUP3 ADD SWAP7 DUP2 PUSH1 0x1F DUP10 ADD SLT ISZERO PUSH2 0x626 JUMPI DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x5A2 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x694 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP12 ADD ADD GT PUSH2 0x60E JUMPI DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F9 JUMPI POP PUSH1 0xC0 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP PUSH1 0x20 SWAP1 DUP4 ADD ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5DA PUSH1 0x80 DUP3 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 SWAP2 SWAP1 DUP5 PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP13 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x5B2 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x101 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x6ED JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDA PUSH17 0x628EDB522E421030ECF4302A0644F69EEC PUSH24 0x9A66ACCEC053C18167B63F64736F6C634300081C00330000 ",
              "sourceMap": "285:1585:13:-:0;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1857:1:7;;-1:-1:-1;1857:1:7;736:10:13;1273:26:0;1269:95;;1857:1:7;285:1585:13;;736:10;-1:-1:-1;;;;;;285:1585:13;;;;;;;;;;;736:10;-1:-1:-1;;;;;285:1585:13;3052:40:0;-1:-1:-1;;3052:40:0;805:27:13;285:1585;;-1:-1:-1;;;;;;285:1585:13;;;-1:-1:-1;;;;;285:1585:13;;;;;;;842:32;285:1585;;;;;;;;;;;;;;884:45;285:1585;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;285:1585:13;;-1:-1:-1;1322:31:0;285:1585:13;-1:-1:-1;285:1585:13;;;;;;-1:-1:-1;285:1585:13;;;;;-1:-1:-1;285:1585:13;;;;-1:-1:-1;;;;;285:1585:13;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1662,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1740,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1684,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 1753,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c9081632f48ab7d1461065a5750806345891680146102625780634626402b146102395780634d59f94c14610210578063715018a6146101b3578063809d458d1461012f5780638da5cb5b146101065763f2fde38b1461007757600080fd5b346101015760203660031901126101015761009061067e565b6100986106d9565b6001600160a01b031680156100eb57600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610101576000366003190112610101576001546040516001600160a01b039091168152602090f35b346101015760203660031901126101015761014861067e565b6101506106d9565b6001600160a01b0316801561017c576bffffffffffffffffffffffff60a01b6003541617600355600080f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610101576000366003190112610101576101cc6106d9565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610101576000366003190112610101576004546040516001600160a01b039091168152602090f35b34610101576000366003190112610101576003546040516001600160a01b039091168152602090f35b34610101576060366003190112610101576024356004356044356001600160a01b0381169081900361010157600260005414610649576024926002600055600060018060a01b0360045416604051958680926395ea571760e01b82528760048301525afa9384156103f3576000946104d8575b5090919260808101511561049b576040015181111561043c5781156103ff576002546003546040516323b872dd60e01b8152600481018590526001600160a01b039182166024820152604481018490529160209183916064918391600091165af19081156103f3576000916103b9575b50156103825760407f1885e69698a7feb1996880dc751e52fa84140b158c769239d0e04ec35564096f918151908152426020820152a36001600055005b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b90506020813d6020116103eb575b816103d460209383610694565b81010312610101576103e5906106cc565b84610345565b3d91506103c7565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206275796572206164647265737360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152603160248201527f416d6f756e74206d7573742062652067726561746572207468616e2074686520604482015270383934b1b2903832b91039b2b9b9b4b7b760791b6064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6574776f726b206973206e6f742061637469766560581b6044820152606490fd5b3d8086833e6104e78183610694565b8101906020818303126106415780519067ffffffffffffffff8211610645570160e081830312610641576040519160e0830183811067ffffffffffffffff82111761062d576040528151835260208201516001600160a01b038116810361062957602084015260408201516040840152606082015167ffffffffffffffff81116106295782019681601f8901121561062657875167ffffffffffffffff811161061257604051926105a2601f8301601f191660200185610694565b8184526020828b01011161060e57815b8181106105f9575060c09495969798506020908301015260608401526105da608082016106cc565b608084015260a081015160a0840152015160c0820152929190846102d5565b80602080928c010151828287010152016105b2565b5080fd5b634e487b7160e01b82526041600452602482fd5b80fd5b8780fd5b634e487b7160e01b88526041600452602488fd5b8580fd5b8680fd5b633ee5aeb560e01b60005260046000fd5b34610101576000366003190112610101576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361010157565b90601f8019910116810190811067ffffffffffffffff8211176106b657604052565b634e487b7160e01b600052604160045260246000fd5b5190811515820361010157565b6001546001600160a01b031633036106ed57565b63118cdaa760e01b6000523360045260246000fdfea264697066735822122002da70628edb522e421030ecf4302a0644f69eec779a66accec053c18167b63f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F48AB7D EQ PUSH2 0x65A JUMPI POP DUP1 PUSH4 0x45891680 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4D59F94C EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x809D458D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x90 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x98 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x148 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x150 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x17C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x1CC PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x101 JUMPI PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x649 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH4 0x95EA5717 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x4D8 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH1 0x80 DUP2 ADD MLOAD ISZERO PUSH2 0x49B JUMPI PUSH1 0x40 ADD MLOAD DUP2 GT ISZERO PUSH2 0x43C JUMPI DUP2 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3B9 JUMPI JUMPDEST POP ISZERO PUSH2 0x382 JUMPI PUSH1 0x40 PUSH32 0x1885E69698A7FEB1996880DC751E52FA84140B158C769239D0E04EC35564096F SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3EB JUMPI JUMPDEST DUP2 PUSH2 0x3D4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x694 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x101 JUMPI PUSH2 0x3E5 SWAP1 PUSH2 0x6CC JUMP JUMPDEST DUP5 PUSH2 0x345 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642062757965722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x383934B1B2903832B91039B2B9B9B4B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6574776F726B206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x4E7 DUP2 DUP4 PUSH2 0x694 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x645 JUMPI ADD PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x62D JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x629 JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x629 JUMPI DUP3 ADD SWAP7 DUP2 PUSH1 0x1F DUP10 ADD SLT ISZERO PUSH2 0x626 JUMPI DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x5A2 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x694 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP12 ADD ADD GT PUSH2 0x60E JUMPI DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F9 JUMPI POP PUSH1 0xC0 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP PUSH1 0x20 SWAP1 DUP4 ADD ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5DA PUSH1 0x80 DUP3 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 SWAP2 SWAP1 DUP5 PUSH2 0x2D5 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP13 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x5B2 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x101 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x6ED JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDA PUSH17 0x628EDB522E421030ECF4302A0644F69EEC PUSH24 0x9A66ACCEC053C18167B63F64736F6C634300081C00330000 ",
              "sourceMap": "285:1585:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;285:1585:13;2627:22:0;;2623:91;;3004:6;285:1585:13;;-1:-1:-1;;;;;;285:1585:13;;;;;;;-1:-1:-1;;;;;285:1585:13;3052:40:0;-1:-1:-1;;3052:40:0;285:1585:13;2623:91:0;2672:31;;;285:1585:13;2672:31:0;285:1585:13;;;;;2672:31:0;285:1585:13;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;;;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;285:1585:13;1778:25;;285:1585;;;;;1833:28;285:1585;;;1833:28;285:1585;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;1500:62:0;;:::i;:::-;3004:6;285:1585:13;;-1:-1:-1;;;;;;285:1585:13;;;;;;;-1:-1:-1;;;;;285:1585:13;3052:40:0;285:1585:13;;3052:40:0;285:1585:13;;;;;;;-1:-1:-1;;285:1585:13;;;;;;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;415:29;285:1585;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;;;;;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;1899:1:7;285:1585:13;;2702:18:7;2698:86;;285:1585:13;1899:1:7;;285:1585:13;1899:1:7;285:1585:13;;;;;;;;;;;;;;;;;;1177:57;;;285:1585;1177:57;;285:1585;1177:57;;;;;;;285:1585;1177:57;;;285:1585;1252:16;;;;;;;285:1585;;;;;1321:23;285:1585;1312:32;;285:1585;;;1416:19;;285:1585;;1899:1:7;285:1585:13;1526:14;285:1585;;;-1:-1:-1;;;1501:48:13;;285:1585;1501:48;;285:1585;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;;;;;1501:48;;285:1585;;;;;1501:48;;;;;;;285:1585;1501:48;;;285:1585;;;;;;1614:59;285:1585;;;;;;1657:15;285:1585;;;;1614:59;285:1585;;1899:1:7;285:1585:13;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;1501:48;;285:1585;1501:48;;;285:1585;1501:48;;285:1585;1501:48;;;;;;285:1585;1501:48;;;:::i;:::-;;;285:1585;;;;;;;:::i;:::-;1501:48;;;;;;-1:-1:-1;1501:48:13;;;285:1585;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;1177:57;;;;;;;;;;:::i;:::-;;;285:1585;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;285:1585:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1177:57;;;;;;285:1585;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;;;;;-1:-1:-1;;;285:1585:13;;;;;;;;;;;;;;;;2698:86:7;2743:30;;;285:1585:13;2743:30:7;285:1585:13;;2743:30:7;285:1585:13;;;;;;-1:-1:-1;;285:1585:13;;;;388:20;285:1585;-1:-1:-1;;;;;285:1585:13;;;;;;;;;;-1:-1:-1;;;;;285:1585:13;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;285:1585:13;;;;;-1:-1:-1;285:1585:13;;;;;;;;;;;:::o;1796:162:0:-;285:1585:13;;-1:-1:-1;;;;;285:1585:13;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:5;1901:40:0;285:1585:13;;-1:-1:-1;1901:40:0"
            },
            "methodIdentifiers": {
              "buyVoucher(uint256,uint256,address)": "45891680",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "treasuryWallet()": "4626402b",
              "updateTreasuryWallet(address)": "809d458d",
              "usdt()": "2f48ab7d",
              "zaaNetStorage()": "4d59f94c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zaaNetStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoucherPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"buyVoucher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract TestUSDT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zaaNetStorage\",\"outputs\":[{\"internalType\":\"contract ZaaNetStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZaaNetVoucher.sol\":\"ZaaNetVoucher\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/TestUSDT.sol\":{\"keccak256\":\"0x8a805e1b3df326de0549223cd003595e6de9d7fc7c0f9741b52629af3c3f65d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064bd0f2abe41cc2660a0f8263a9ac29a057cffbfd1a6e1c5e4acf0069862641\",\"dweb:/ipfs/Qmap6umnhknbikJcrsyiRTbiRYf8EzTsroyU9EYsU3iJgq\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/ZaaNetVoucher.sol\":{\"keccak256\":\"0x471efc0970c9c8944edaac8eccc80a16803c1bd1f54a705f65964161f9549f77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f926dc765167c1fba921fff0258fbbac324f44c5bcbc8f204c7a6885f1719f02\",\"dweb:/ipfs/Qmczjja1ybCuvToJpi75L3HViEm5w4pXRThPqy5F9nF2sY\"]}},\"version\":1}"
        }
      },
      "contracts/interface/IZaaNetAdmin.sol": {
        "IZaaNetAdmin": {
          "abi": [
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculatePlatformFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyMode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "platformFeePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFeePercent",
                  "type": "uint256"
                }
              ],
              "name": "setPlatformFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newTreasury",
                  "type": "address"
                }
              ],
              "name": "setTreasuryAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "toggleEmergencyMode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "admin()": "f851a440",
              "calculatePlatformFee(uint256)": "0cbab4f7",
              "emergencyMode()": "0905f560",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "platformFeePercent()": "8c639a85",
              "setPlatformFee(uint256)": "12e8e2c3",
              "setTreasuryAddress(address)": "6605bfda",
              "toggleEmergencyMode()": "4c17b530",
              "treasury()": "61d027b3",
              "treasuryAddress()": "c5f956af",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IZaaNetAdmin - Interface for ZaaNet Admin Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Alternative name for owner (compatibility)\"},\"treasury()\":{\"notice\":\"Alternative name for treasuryAddress (compatibility)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IZaaNetAdmin.sol\":\"IZaaNetAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interface/IZaaNetAdmin.sol\":{\"keccak256\":\"0xba74c93889c98762717cc5ea2f2f77e2e25ecbca5f1bf2ac4633c4662071bbe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690c728a33890afc04d708101e884eba8f970f2143efb1d5764022035428fb7f\",\"dweb:/ipfs/QmWL2kb6GZkDmmabgRUrLADEBDu7Q6Pok689v7kpHN3qrv\"]}},\"version\":1}"
        }
      },
      "contracts/interface/IZaaNetNetwork.sol": {
        "IZaaNetNetwork": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newHostAddress",
                  "type": "address"
                }
              ],
              "name": "HostAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPrice",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPrice",
                  "type": "uint256"
                }
              ],
              "name": "NetworkPriceUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                }
              ],
              "name": "NetworkRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "oldStatus",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newStatus",
                  "type": "bool"
                }
              ],
              "name": "NetworkStatusChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pricePerHour",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "NetworkUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostNetworks",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "getHostedNetworkById",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "isRegisteredHost",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pricePerHour",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "mongoDataId",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "registerNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerHour",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "name": "updateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getHostNetworks(address)": "79f0dc57",
              "getHostedNetworkById(uint256)": "cd83fb9a",
              "isRegisteredHost(address)": "867f1a09",
              "registerNetwork(uint256,string,bool)": "900e41b1",
              "updateNetwork(uint256,uint256,bool)": "1b63fe67"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHostAddress\",\"type\":\"address\"}],\"name\":\"HostAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"NetworkPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"}],\"name\":\"NetworkRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"NetworkStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerHour\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"NetworkUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostNetworks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"getHostedNetworkById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredHost\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pricePerHour\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"registerNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerHour\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getHostNetworks(address)\":{\"params\":{\"hostAddress\":\"Address of the host\"},\"returns\":{\"_0\":\"networkIds List of network IDs\"}},\"getHostedNetworkById(uint256)\":{\"params\":{\"networkId\":\"ID of the network\"},\"returns\":{\"_0\":\"Network struct with all metadata\"}},\"isRegisteredHost(address)\":{\"params\":{\"hostAddress\":\"The address to verify\"},\"returns\":{\"_0\":\"isHost True if host is registered\"}},\"registerNetwork(uint256,string,bool)\":{\"params\":{\"isActive\":\"Whether network is available for guest discovery\",\"mongoDataId\":\"MongoDB document ID for metadata (e.g. JSON with SSID, location, etc.)\",\"pricePerHour\":\"Cost in USDT per hour\"}},\"updateNetwork(uint256,uint256,bool)\":{\"params\":{\"isActive\":\"New active status\",\"networkId\":\"ID of the network\",\"pricePerHour\":\"Updated price\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getHostNetworks(address)\":{\"notice\":\"Get all network IDs registered by a host\"},\"getHostedNetworkById(uint256)\":{\"notice\":\"Fetch a network by ID\"},\"isRegisteredHost(address)\":{\"notice\":\"Public method to check if an address is a registered host\"},\"registerNetwork(uint256,string,bool)\":{\"notice\":\"Register a new WiFi network\"},\"updateNetwork(uint256,uint256,bool)\":{\"notice\":\"Update an existing network\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IZaaNetNetwork.sol\":\"IZaaNetNetwork\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/interface/IZaaNetNetwork.sol\":{\"keccak256\":\"0x3c36f25390e07df86afbe86838dbb724ff89dab3ff8e8c6362cec05d4afea5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3294a39844e819d3340c2198735d07f4fe745dddd3bcd2c194c6acf6ec5906cb\",\"dweb:/ipfs/Qmbvzqz43CCKMrNQZcJ3N8CCjBP3sUFDfvYLF3gPywsvXR\"]}},\"version\":1}"
        }
      },
      "contracts/interface/IZaaNetPayment.sol": {
        "IZaaNetPayment": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_networkId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_voucherId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_userId",
                  "type": "uint256"
                }
              ],
              "name": "acceptPayment",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "calculateFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "hostAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "platformFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "getSession",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptPayment(uint256,uint256,uint256,uint256)": "3da38336",
              "calculateFees(uint256)": "52238fdd",
              "getSession(uint256)": "402ff0db"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_networkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_voucherId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"acceptPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hostAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"getSession\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptPayment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_amount\":\"Total amount paid (pricePerSession)\",\"_networkId\":\"The ID of the network being accessed\",\"_userId\":\"User identifier for tracking\",\"_voucherId\":\"Optional voucher/discount code ID\"}},\"calculateFees(uint256)\":{\"params\":{\"amount\":\"The payment amount to calculate fees for\"},\"returns\":{\"hostAmount\":\"Amount that goes to the host\",\"platformFee\":\"Amount that goes to the platform\"}},\"getSession(uint256)\":{\"params\":{\"_sessionId\":\"The session ID to retrieve\"},\"returns\":{\"_0\":\"The full session object from storage\"}}},\"title\":\"IZaaNetPayment - Interface for ZaaNet Payment Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptPayment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Accept a payment to access a hosted network\"},\"calculateFees(uint256)\":{\"notice\":\"Calculate fees for a payment amount\"},\"getSession(uint256)\":{\"notice\":\"Fetch session details by ID\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IZaaNetPayment.sol\":\"IZaaNetPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/interface/IZaaNetPayment.sol\":{\"keccak256\":\"0x24f0de7d565253bab0aa53065aae88b575baecac78007f55e870bd6793d580fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f12d93046f16813ca81eb500f528f01bcbc5ae58c4c16c86ee5ac66bff38ae7f\",\"dweb:/ipfs/QmUNhHhLHMziA2PUAb5RUKYgH4RYYn6P5G6LHb7XQu7j5B\"]}},\"version\":1}"
        }
      },
      "contracts/interface/IZaaNetStorage.sol": {
        "IZaaNetStorage": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "networkId",
                  "type": "uint256"
                }
              ],
              "name": "emergencyDeactivateNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                }
              ],
              "name": "endSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                }
              ],
              "name": "getHostEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getNetwork",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "offset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "getNetworksPaginated",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "getSession",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSessions",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeNetworks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeSessions",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "hostAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseHostEarnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementNetworkId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementSessionId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "networkIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sessionIdCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_caller",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCaller",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_callers",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setAllowedCallers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "hostAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pricePerSession",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "mongoDataId",
                      "type": "string"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "createdAt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "updatedAt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Network",
                  "name": "network",
                  "type": "tuple"
                }
              ],
              "name": "setNetwork",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "sessionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "networkId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "paymentAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "voucherId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "userId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ZaaNetStorage.Session",
                  "name": "session",
                  "type": "tuple"
                }
              ],
              "name": "setSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "emergencyDeactivateNetwork(uint256)": "5a2f406f",
              "endSession(uint256)": "26cc5583",
              "getHostEarnings(address)": "6d65573f",
              "getNetwork(uint256)": "95ea5717",
              "getNetworksPaginated(uint256,uint256)": "fa9c81a4",
              "getSession(uint256)": "402ff0db",
              "getStats()": "c59d4847",
              "increaseHostEarnings(address,uint256)": "e1c7a8aa",
              "incrementNetworkId()": "5290ffc6",
              "incrementSessionId()": "cc507641",
              "networkIdCounter()": "217c682d",
              "sessionIdCounter()": "5a29352d",
              "setAllowedCaller(address,bool)": "d8b0e716",
              "setAllowedCallers(address[],bool)": "73f9a5d7",
              "setNetwork(uint256,(uint256,address,uint256,string,bool,uint256,uint256))": "50c0d41c",
              "setSession(uint256,(uint256,uint256,address,uint256,bool,string,string,uint256))": "3b9a8016"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeactivateNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"endSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNetwork\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getNetworksPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSession\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSessions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeNetworks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeSessions\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseHostEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementSessionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sessionIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAllowedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSession\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mongoDataId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Network\",\"name\":\"network\",\"type\":\"tuple\"}],\"name\":\"setNetwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"voucherId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ZaaNetStorage.Session\",\"name\":\"session\",\"type\":\"tuple\"}],\"name\":\"setSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IZaaNetStorage - Interface for ZaaNet Storage Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IZaaNetStorage.sol\":\"IZaaNetStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ZaaNetStorage.sol\":{\"keccak256\":\"0x583e19f02f42e6d51fb51699d9b7642e7347236cdb952581a621131ca65cd525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13201bf292cbe5be419efbb3c88051119bc15658bfe4f0bc14cab377ea913c4\",\"dweb:/ipfs/QmQYzqUg1NqQ6V3U8rN8S7nhAoWnueXYJLTgWUHCGkdAQ8\"]},\"contracts/interface/IZaaNetStorage.sol\":{\"keccak256\":\"0x11b4fc9fcd0684607c8730c7e544ba907a082fe12bccd1608c9a26a767c1e13f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d55187369566266cfffe44751430e8172382e7f08af9117953bab6af5709c708\",\"dweb:/ipfs/QmQELNKjNV1Y3XjUcxsDHjE9NErPof7YCcjsSifdfV3mvT\"]}},\"version\":1}"
        }
      }
    }
  }
}